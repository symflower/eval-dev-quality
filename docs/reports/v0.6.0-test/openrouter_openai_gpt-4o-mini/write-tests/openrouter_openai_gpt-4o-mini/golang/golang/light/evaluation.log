2024/07/30 07:34:32 $ git clean -df
2024/07/30 07:34:32 Evaluating model "openrouter/openai/gpt-4o-mini" on task "write-tests" using language "golang" and repository "golang/light"
2024/07/30 07:34:32 $ git clean -df
2024/07/30 07:34:32 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```

2024/07/30 07:34:37 Model "openrouter/openai/gpt-4o-mini" responded (5535 ms) with:
	```golang
	package light

	import "testing"

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			input    string
			expected bool
		}{
			{"", true},                // empty string
			{"[]", true},              // balanced brackets
			{"[[]]", true},            // nested balanced brackets
			{"[[][]]", true},          // multiple balanced brackets
			{"[", false},              // unbalanced opening
			{"]", false},              // unbalanced closing
			{"[a]", false},            // non-bracket character
			{"[[]]]", false},          // extra closing bracket
			{"[[[]", false},           // extra opening bracket
			{"[[]][[]]", true},        // multiple balanced pairs
			{"[[]][[]][[[]]]", true},  // complex nested
			{"[]]", false},            // extra closing bracket
			{"[[]][[", false},         // extra opening bracket
			{"[[[]]]]", false},        // extra closing bracket
		}

		for _, test := range tests {
			result := hasBalancedBrackets(test.input)
			if result != test.expected {
				t.Errorf("hasBalancedBrackets(%q) = %v; want %v", test.input, result, test.expected)
			}
		}
	}
	```
2024/07/30 07:34:37 $ go mod tidy
2024/07/30 07:34:37 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:34:38 === RUN   TestHasBalancedBrackets
--- PASS: TestHasBalancedBrackets (0.00s)
PASS
2024/07/30 07:34:38 coverage: 4.7% of statements
2024/07/30 07:34:38 ok  	light	0.003s	coverage: 4.7% of statements
2024/07/30 07:34:38 
DONE 1 tests in 0.254s
2024/07/30 07:34:38 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:34:38 coverage objects: [{"FileRange":"light/balancedBrackets.go:10:9-light/balancedBrackets.go:12:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/balancedBrackets.go:15:2-light/balancedBrackets.go:17:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/balancedBrackets.go:19:2-light/balancedBrackets.go:19:22","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/balancedBrackets.go:3:49-light/balancedBrackets.go:8:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/balancedBrackets.go:8:9-light/balancedBrackets.go:10:4","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:34:38 Executes tests with 5 coverage objects
2024/07/30 07:34:38 $ git clean -df
2024/07/30 07:34:38 Removing balancedBrackets_test.go
Removing coverage.json
2024/07/30 07:34:38 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```

2024/07/30 07:34:43 Model "openrouter/openai/gpt-4o-mini" responded (5162 ms) with:
	```go
	package light

	import "testing"

	func TestBinarySearch(t *testing.T) {
		tests := []struct {
			name     string
			array    []int
			target   int
			expected int
		}{
			{"Found in the middle", []int{1, 2, 3, 4, 5}, 3, 2},
			{"Found at the beginning", []int{1, 2, 3, 4, 5}, 1, 0},
			{"Found at the end", []int{1, 2, 3, 4, 5}, 5, 4},
			{"Not found, less than any element", []int{1, 2, 3, 4, 5}, 0, -1},
			{"Not found, greater than any element", []int{1, 2, 3, 4, 5}, 6, -1},
			{"Not found, middle element", []int{1, 2, 4, 5}, 3, -1},
			{"Empty array", []int{}, 1, -1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := binarySearch(tt.array, tt.target)
				if result != tt.expected {
					t.Errorf("binarySearch(%v, %d) = %d; want %d", tt.array, tt.target, result, tt.expected)
				}
			})
		}
	}
	```
2024/07/30 07:34:43 $ go mod tidy
2024/07/30 07:34:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:34:43 === RUN   TestBinarySearch
=== RUN   TestBinarySearch/Found_in_the_middle
=== RUN   TestBinarySearch/Found_at_the_beginning
=== RUN   TestBinarySearch/Found_at_the_end
=== RUN   TestBinarySearch/Not_found,_less_than_any_element
=== RUN   TestBinarySearch/Not_found,_greater_than_any_element
=== RUN   TestBinarySearch/Not_found,_middle_element
=== RUN   TestBinarySearch/Empty_array
--- PASS: TestBinarySearch (0.00s)
2024/07/30 07:34:43     --- PASS: TestBinarySearch/Found_in_the_middle (0.00s)
    --- PASS: TestBinarySearch/Found_at_the_beginning (0.00s)
    --- PASS: TestBinarySearch/Found_at_the_end (0.00s)
    --- PASS: TestBinarySearch/Not_found,_less_than_any_element (0.00s)
    --- PASS: TestBinarySearch/Not_found,_greater_than_any_element (0.00s)
    --- PASS: TestBinarySearch/Not_found,_middle_element (0.00s)
    --- PASS: TestBinarySearch/Empty_array (0.00s)
2024/07/30 07:34:43 PASS
2024/07/30 07:34:43 coverage: 5.2% of statements
2024/07/30 07:34:43 ok  	light	0.003s	coverage: 5.2% of statements
2024/07/30 07:34:43 
DONE 8 tests in 0.250s
2024/07/30 07:34:43 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:34:43 coverage objects: [{"FileRange":"light/binarySearch.go:14:9-light/binarySearch.go:16:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/binarySearch.go:16:9-light/binarySearch.go:18:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/binarySearch.go:21:2-light/binarySearch.go:21:14","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/binarySearch.go:3:39-light/binarySearch.go:14:4","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:34:43 Executes tests with 4 coverage objects
2024/07/30 07:34:43 $ git clean -df
2024/07/30 07:34:43 Removing binarySearch_test.go
Removing coverage.json
2024/07/30 07:34:43 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```

2024/07/30 07:34:47 Model "openrouter/openai/gpt-4o-mini" responded (4143 ms) with:
	```go
	package light

	import "testing"

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			x, y, expected int
		}{
			{5, 10, 0},   // Test case for x < 10
			{25, 10, 0},  // Test case for x > 20
			{10, 0, 10},  // Test case for y == 0
			{10, 21, 10}, // Test to check that y > 20 does not affect x
			{10, 22, 11}, // Test to reach x > 20 after increment
			{15, 22, 16}, // Test to reach x > 20 after increment
		}

		for _, test := range tests {
			result := callLoopConditionsOftenEnough(test.x, test.y)
			if result != test.expected {
				t.Errorf("For x=%d, y=%d, expected %d but got %d", test.x, test.y, test.expected, result)
			}
		}
	}
	```
2024/07/30 07:34:47 $ go mod tidy
2024/07/30 07:34:47 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:34:48 === RUN   TestCallLoopConditionsOftenEnough
--- PASS: TestCallLoopConditionsOftenEnough (0.00s)
PASS
2024/07/30 07:34:48 coverage: 3.3% of statements
2024/07/30 07:34:48 ok  	light	0.003s	coverage: 3.3% of statements
2024/07/30 07:34:48 
DONE 1 tests in 0.273s
2024/07/30 07:34:48 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:34:48 coverage objects: [{"FileRange":"light/callLoopConditionsOftenEnough.go:14:2-light/callLoopConditionsOftenEnough.go:14:12","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/callLoopConditionsOftenEnough.go:18:2-light/callLoopConditionsOftenEnough.go:18:10","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/callLoopConditionsOftenEnough.go:3:50-light/callLoopConditionsOftenEnough.go:6:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/callLoopConditionsOftenEnough.go:8:2-light/callLoopConditionsOftenEnough.go:11:4","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:34:48 Executes tests with 4 coverage objects
2024/07/30 07:34:48 $ git clean -df
2024/07/30 07:34:48 Removing callLoopConditionsOftenEnough_test.go
Removing coverage.json
2024/07/30 07:34:48 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```

2024/07/30 07:34:53 Model "openrouter/openai/gpt-4o-mini" responded (5041 ms) with:
	```go
	package light

	import "testing"

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{1, 2},
			{3, 4},
			{2, 5}, // This tests the else condition
			{0, 5}, // Another case for the else condition
			{-1, 5}, // Another case for the else condition
		}

		for _, test := range tests {
			result := cascadingIfElse(test.input)
			if result != test.expected {
				t.Errorf("cascadingIfElse(%d) = %d; expected %d", test.input, result, test.expected)
			}
		}
	}
	```
2024/07/30 07:34:53 $ go mod tidy
2024/07/30 07:34:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:34:53 === RUN   TestCascadingIfElse
--- PASS: TestCascadingIfElse (0.00s)
PASS
2024/07/30 07:34:53 coverage: 2.4% of statements
2024/07/30 07:34:53 ok  	light	0.003s	coverage: 2.4% of statements
2024/07/30 07:34:53 
DONE 1 tests in 0.247s
2024/07/30 07:34:53 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:34:53 coverage objects: [{"FileRange":"light/cascadingIfElse.go:3:33-light/cascadingIfElse.go:6:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/cascadingIfElse.go:6:8-light/cascadingIfElse.go:8:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/cascadingIfElse.go:8:8-light/cascadingIfElse.go:10:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:34:53 Executes tests with 3 coverage objects
2024/07/30 07:34:53 $ git clean -df
2024/07/30 07:34:53 Removing cascadingIfElse_test.go
Removing coverage.json
2024/07/30 07:34:53 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```

2024/07/30 07:34:59 Model "openrouter/openai/gpt-4o-mini" responded (5655 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestComputeStepCount(t *testing.T) {
		tests := []struct {
			input    int
			expected int
			err      error
		}{
			{1, 0, nil},
			{2, 1, nil},
			{3, 7, nil},
			{4, 2, nil},
			{5, 5, nil},
			{6, 8, nil},
			{10, 6, nil},
			{16, 4, nil},
			{0, 0, errors.New("Only positive integers are allowed")},
			{-1, 0, errors.New("Only positive integers are allowed")},
		}

		for _, test := range tests {
			result, err := computeStepCount(test.input)

			if err != nil && test.err == nil {
				t.Errorf("Unexpected error for input %d: %v", test.input, err)
			}

			if err == nil && test.err != nil {
				t.Errorf("Expected error for input %d, but got none", test.input)
			}

			if result != test.expected {
				t.Errorf("For input %d: expected %d, got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/07/30 07:34:59 $ go mod tidy
2024/07/30 07:34:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:34:59 # light [light.test]
./collatzCalculator_test.go:21:10: undefined: errors
./collatzCalculator_test.go:22:11: undefined: errors
2024/07/30 07:34:59 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:34:59 
=== Errors
./collatzCalculator_test.go:21:10: undefined: errors
./collatzCalculator_test.go:22:11: undefined: errors

DONE 0 tests, 2 errors in 0.124s
2024/07/30 07:34:59 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:34:59 ERROR: execution failed: exit status 1
2024/07/30 07:34:59 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:34:59 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3417598288/light
2024/07/30 07:35:00 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:35:00 Repairing equilibriumIndices.go
2024/07/30 07:35:00 Repairing forLoop.go
2024/07/30 07:35:00 Repairing matchBytes.go
2024/07/30 07:35:00 Repairing phoneNumber.go
2024/07/30 07:35:00 Repairing simpleSwitchWithReturn.go
2024/07/30 07:35:00 Repairing sort.go
2024/07/30 07:35:00 Repairing validateDate.go
2024/07/30 07:35:00 Repairing balancedBrackets.go
2024/07/30 07:35:00 Repairing binarySearch.go
2024/07/30 07:35:00 Repairing cascadingIfElse.go
2024/07/30 07:35:00 Repairing collatzCalculator.go
2024/07/30 07:35:00 Repairing jacobiSymbol.go
2024/07/30 07:35:00 Repairing klarnerRadoSequence.go
2024/07/30 07:35:00 Repairing largestProperDivisor.go
2024/07/30 07:35:00 Repairing magicSquareOdd.go
2024/07/30 07:35:00 Repairing pascalsTriangle.go
2024/07/30 07:35:00 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:35:00 Repairing typeArrayAccess.go
2024/07/30 07:35:00 Repairing conditionsAnd.go
2024/07/30 07:35:00 Repairing knapsack.go
2024/07/30 07:35:00 Repairing simpleIfElse.go
2024/07/30 07:35:00 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:35:00 Repairing collatzCalculator_test.go
2024/07/30 07:35:00 Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10886715,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc00065d570}, {0x10e8fa0?, 0xc000ab2e00})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0x0?, 0x0?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7498?, 0xc000837c80?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000abafd8?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7600?, 0xc000837d00?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc000837c80?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7600?, 0xc000837d00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7600?, 0xc000837e00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc000837d00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7600?, 0xc000837e00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7538?, 0xc000837e40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000837e00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7538?, 0xc000837e40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa75b0?, 0xc000c115c0?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000837e40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa75b0?, 0xc000c115c0}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7448?, 0xc000c115f0?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc000c115c0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7420?, 0xc0005a63c0?}, {0x11adb02?, 0x0?}, 0xc00089b570?, {0x1fa7448?, 0xc000c115f0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7420?, 0xc0005a63c0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa8b40?, 0xc00065d560?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0005a63c0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0005a63c0}, 0xc00093b1b8, 0xc00093b1d0)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0007b20c0, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005dcc00)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0007b20c0, 0x25}, {0x269d4e0?, 0x4, 0x411afe?}, 0x7fbe58791768?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0007b20c0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc00065a001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000e80b8, {0xc0000e8000?, 0x7fbe58642198?, 0xc0000e80b8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000e8000}, {0xc000192120?, 0x280f560?, 0xc000447ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000e8000?}, {0xc000192120?, 0x27d8cc0?, 0xc0000e8000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:35:00 Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10886776,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc00065d590}, {0x10e8fa0?, 0xc000ab2ee0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0x0?, 0x199?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7498?, 0xc000837d40?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000abaff0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7600?, 0xc000837dc0?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc000837d40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7600?, 0xc000837dc0}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7600?, 0xc000837e00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc000837dc0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7600?, 0xc000837e00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7538?, 0xc000837e40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000837e00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7538?, 0xc000837e40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa75b0?, 0xc000c115c0?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000837e40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa75b0?, 0xc000c115c0}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7448?, 0xc000c115f0?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc000c115c0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa7420?, 0xc0005a63c0?}, {0x11adb02?, 0x0?}, 0xc00089b570?, {0x1fa7448?, 0xc000c115f0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc0007607e0, {0x1fa7420?, 0xc0005a63c0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc0007607e0, {0x1fa8b40?, 0xc00065d560?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0005a63c0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0005a63c0}, 0xc00093b1b8, 0xc00093b1d0)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0007b20c0, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005dcc00)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0007b20c0, 0x25}, {0x269d4e0?, 0x4, 0x411afe?}, 0x7fbe58791768?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0007b20c0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc00065a001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000e80b8, {0xc0000e8000?, 0x7fbe58642198?, 0xc0000e80b8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000e8000}, {0xc000192120?, 0x280f560?, 0xc000447ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000e8000?}, {0xc000192120?, 0x27d8cc0?, 0xc0000e8000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:35:00 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:00 $ go mod tidy
2024/07/30 07:35:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:00 === RUN   TestComputeStepCount
--- PASS: TestComputeStepCount (0.00s)
PASS
2024/07/30 07:35:00 coverage: 5.2% of statements
2024/07/30 07:35:00 ok  	light	0.002s	coverage: 5.2% of statements
2024/07/30 07:35:00 
DONE 1 tests in 0.271s
2024/07/30 07:35:00 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:00 coverage objects: [{"FileRange":"light/collatzCalculator.go:12:2-light/collatzCalculator.go:16:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:16:8-light/collatzCalculator.go:18:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:20:2-light/collatzCalculator.go:21:16","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:25:2-light/collatzCalculator.go:25:19","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:5:47-light/collatzCalculator.go:8:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:9:2-light/collatzCalculator.go:11:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:00 with symflower repair: Executes tests with 6 coverage objects
2024/07/30 07:35:00 $ git clean -df
2024/07/30 07:35:00 Removing collatzCalculator_test.go
Removing coverage.json
2024/07/30 07:35:00 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```

2024/07/30 07:35:04 Model "openrouter/openai/gpt-4o-mini" responded (3995 ms) with:
	```go
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		tests := []struct {
			x        rune
			y        rune
			expected bool
		}{
			{'A', 'B', true},
			{'A', 'C', false},
			{'B', 'A', false},
			{'C', 'B', false},
			{'C', 'C', false},
			{'B', 'B', false},
			{'A', 'A', false},
		}

		for _, test := range tests {
			result := conditionsAnd(test.x, test.y)
			if result != test.expected {
				t.Errorf("conditionsAnd(%c, %c) = %v; expected %v", test.x, test.y, result, test.expected)
			}
		}
	}
	```
2024/07/30 07:35:04 $ go mod tidy
2024/07/30 07:35:04 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:04 === RUN   TestConditionsAnd
--- PASS: TestConditionsAnd (0.00s)
PASS
2024/07/30 07:35:04 coverage: 1.4% of statements
2024/07/30 07:35:04 ok  	light	0.003s	coverage: 1.4% of statements
2024/07/30 07:35:04 
DONE 1 tests in 0.277s
2024/07/30 07:35:04 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:04 coverage objects: [{"FileRange":"light/conditionsAnd.go:3:41-light/conditionsAnd.go:6:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/conditionsAnd.go:8:2-light/conditionsAnd.go:8:14","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:04 Executes tests with 2 coverage objects
2024/07/30 07:35:04 $ git clean -df
2024/07/30 07:35:04 Removing conditionsAnd_test.go
Removing coverage.json
2024/07/30 07:35:04 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```

2024/07/30 07:35:10 Model "openrouter/openai/gpt-4o-mini" responded (5787 ms) with:
	```golang
	package light

	import "testing"

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			sequence   []int
			expected   string
		}{
			{[]int{1, 2, 3, 4, 5, 6}, ""},
			{[]int{1, 2, 3, 4, 5, 15}, "5;"},
			{[]int{1, 2, 3, 3, 2, 1}, "2;"},
			{[]int{0, 0, 0, 0}, "0;1;2;3;"},
			{[]int{-1, 1, -1, 1}, "1;"},
			{[]int{10, -10, 5, 5, 0}, "2;"},
			{[]int{}, ""},
			{[]int{1}, ""},
			{[]int{1, -1}, "0;"},
		}

		for _, test := range tests {
			result := equilibriumIndices(test.sequence)
			if result != test.expected {
				t.Errorf("equilibriumIndices(%v) = %q; want %q", test.sequence, result, test.expected)
			}
		}
	}
	```
2024/07/30 07:35:10 $ go mod tidy
2024/07/30 07:35:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:10 === RUN   TestEquilibriumIndices
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 4 5 15]) = ""; want "5;"
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 3 2 1]) = ""; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([-1 1 -1 1]) = ""; want "1;"
    equilibriumIndices_test.go:24: equilibriumIndices([10 -10 5 5 0]) = "0;1;"; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([1]) = "0;"; want ""
    equilibriumIndices_test.go:24: equilibriumIndices([1 -1]) = ""; want "0;"
--- FAIL: TestEquilibriumIndices (0.00s)
FAIL
2024/07/30 07:35:10 coverage: 4.3% of statements
2024/07/30 07:35:10 FAIL	light	0.003s
2024/07/30 07:35:10 
=== Failed
=== FAIL: . TestEquilibriumIndices (0.00s)
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 4 5 15]) = ""; want "5;"
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 3 2 1]) = ""; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([-1 1 -1 1]) = ""; want "1;"
    equilibriumIndices_test.go:24: equilibriumIndices([10 -10 5 5 0]) = "0;1;"; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([1]) = "0;"; want ""
    equilibriumIndices_test.go:24: equilibriumIndices([1 -1]) = ""; want "0;"

DONE 1 tests, 1 failure in 0.255s
2024/07/30 07:35:10 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:10 ERROR: execution failed: exit status 1
2024/07/30 07:35:10 coverage objects: [{"FileRange":"light/equilibriumIndices.go:12:2-light/equilibriumIndices.go:16:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/equilibriumIndices.go:17:3-light/equilibriumIndices.go:17:18","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/equilibriumIndices.go:20:2-light/equilibriumIndices.go:20:18","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/equilibriumIndices.go:5:60-light/equilibriumIndices.go:10:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:10 Executes tests with 4 coverage objects
2024/07/30 07:35:10 $ git clean -df
2024/07/30 07:35:10 Removing coverage.json
Removing equilibriumIndices_test.go
2024/07/30 07:35:10 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```

2024/07/30 07:35:13 Model "openrouter/openai/gpt-4o-mini" responded (2933 ms) with:
	```go
	package light

	import "testing"

	func TestForLoop(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{0, 0},
			{1, 0},
			{2, 1},
			{3, 3},
			{4, 6},
			{5, 10},
		}

		for _, test := range tests {
			result := forLoop(test.input)
			if result != test.expected {
				t.Errorf("forLoop(%d) = %d; expected %d", test.input, result, test.expected)
			}
		}
	}
	```
2024/07/30 07:35:13 $ go mod tidy
2024/07/30 07:35:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:14 === RUN   TestForLoop
    forLoop_test.go:21: forLoop(2) = 2; expected 1
    forLoop_test.go:21: forLoop(3) = 6; expected 3
    forLoop_test.go:21: forLoop(4) = 12; expected 6
    forLoop_test.go:21: forLoop(5) = 20; expected 10
--- FAIL: TestForLoop (0.00s)
FAIL
2024/07/30 07:35:14 coverage: 2.8% of statements
2024/07/30 07:35:14 FAIL	light	0.003s
2024/07/30 07:35:14 
=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:21: forLoop(2) = 2; expected 1
    forLoop_test.go:21: forLoop(3) = 6; expected 3
    forLoop_test.go:21: forLoop(4) = 12; expected 6
    forLoop_test.go:21: forLoop(5) = 20; expected 10

DONE 1 tests, 1 failure in 0.251s
2024/07/30 07:35:14 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:14 ERROR: execution failed: exit status 1
2024/07/30 07:35:14 coverage objects: [{"FileRange":"light/forLoop.go:12:2-light/forLoop.go:12:12","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/forLoop.go:3:25-light/forLoop.go:7:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/forLoop.go:8:2-light/forLoop.go:10:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:14 Executes tests with 3 coverage objects
2024/07/30 07:35:14 $ git clean -df
2024/07/30 07:35:14 Removing coverage.json
Removing forLoop_test.go
2024/07/30 07:35:14 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```

2024/07/30 07:35:21 Model "openrouter/openai/gpt-4o-mini" responded (7073 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestJacobiSymbol(t *testing.T) {
		tests := []struct {
			k, n     uint64
			expected int
			err      bool
		}{
			{1, 7, 1, false},
			{2, 7, -1, false},
			{3, 7, -1, false},
			{4, 7, 1, false},
			{5, 7, -1, false},
			{6, 7, 1, false},
			{1, 8, 0, true}, // n is even
			{3, 8, 0, true}, // n is even
			{9, 9, 0, true}, // n is 1
			{5, 4, 0, true}, // n is even
			{2, 0, 0, true}, // n is even
			{4, 5, -1, false},
			{7, 11, 1, false},
		}

		for _, tt := range tests {
			got, err := jacobiSymbol(tt.k, tt.n)
			if (err != nil) != tt.err {
				t.Errorf("jacobiSymbol(%d, %d) = error: %v, want error: %v", tt.k, tt.n, err, tt.err)
			}
			if err == nil && got != tt.expected {
				t.Errorf("jacobiSymbol(%d, %d) = %d, want %d", tt.k, tt.n, got, tt.expected)
			}
		}
	}
	```
2024/07/30 07:35:21 $ go mod tidy
2024/07/30 07:35:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:21 === RUN   TestJacobiSymbol
    jacobiSymbol_test.go:34: jacobiSymbol(2, 7) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(6, 7) = -1, want 1
    jacobiSymbol_test.go:31: jacobiSymbol(9, 9) = error: <nil>, want error: true
    jacobiSymbol_test.go:34: jacobiSymbol(4, 5) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(7, 11) = -1, want 1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
2024/07/30 07:35:21 coverage: 9.0% of statements
2024/07/30 07:35:21 FAIL	light	0.003s
2024/07/30 07:35:21 
=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:34: jacobiSymbol(2, 7) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(6, 7) = -1, want 1
    jacobiSymbol_test.go:31: jacobiSymbol(9, 9) = error: <nil>, want error: true
    jacobiSymbol_test.go:34: jacobiSymbol(4, 5) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(7, 11) = -1, want 1

DONE 1 tests, 1 failure in 0.246s
2024/07/30 07:35:21 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:35:21 coverage objects: [{"FileRange":"light/jacobiSymbol.go:11:2-light/jacobiSymbol.go:19:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/jacobiSymbol.go:21:3-light/jacobiSymbol.go:26:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/jacobiSymbol.go:27:3-light/jacobiSymbol.go:27:9","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/jacobiSymbol.go:29:2-light/jacobiSymbol.go:31:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/jacobiSymbol.go:32:2-light/jacobiSymbol.go:32:15","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/jacobiSymbol.go:7:45-light/jacobiSymbol.go:10:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:21 Executes tests with 6 coverage objects
2024/07/30 07:35:21 $ git clean -df
2024/07/30 07:35:21 Removing coverage.json
Removing jacobiSymbol_test.go
2024/07/30 07:35:21 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```

2024/07/30 07:35:28 Model "openrouter/openai/gpt-4o-mini" responded (7018 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			limit int
			want  []int
		}{
			{0, []int{0}},
			{1, []int{0, 1}},
			{5, []int{0, 1, 2, 3, 4, 5}},
			{10, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}},
			{20, []int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}},
		}

		for _, tt := range tests {
			t.Run("", func(t *testing.T) {
				got := initialiseKlarnerRadoSequence(tt.limit)
				if len(got) != len(tt.want) {
					t.Errorf("initialiseKlarnerRadoSequence(%d) = %v, want %v", tt.limit, got, tt.want)
					return
				}
				for i := range got {
					if got[i] != tt.want[i] {
						t.Errorf("initialiseKlarnerRadoSequence(%d)[%d] = %d, want %d", tt.limit, i, got[i], tt.want[i])
					}
				}
			})
		}
	}
	```
2024/07/30 07:35:28 $ go mod tidy
2024/07/30 07:35:28 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:29 === RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/#00
=== RUN   TestInitialiseKlarnerRadoSequence/#01
=== RUN   TestInitialiseKlarnerRadoSequence/#02
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[5] = 9, want 5
=== RUN   TestInitialiseKlarnerRadoSequence/#03
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[10] = 21, want 10
=== RUN   TestInitialiseKlarnerRadoSequence/#04
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[6] = 10, want 6
2024/07/30 07:35:29     klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[10] = 21, want 10
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[11] = 22, want 11
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[12] = 27, want 12
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[13] = 28, want 13
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[14] = 31, want 14
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[15] = 39, want 15
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[16] = 40, want 16
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[17] = 43, want 17
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[18] = 45, want 18
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[19] = 46, want 19
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[20] = 55, want 20
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/#00 (0.00s)
2024/07/30 07:35:29     --- PASS: TestInitialiseKlarnerRadoSequence/#01 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#02 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#03 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#04 (0.00s)
FAIL
2024/07/30 07:35:29 coverage: 6.2% of statements
2024/07/30 07:35:29 FAIL	light	0.003s
2024/07/30 07:35:29 
=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/#02 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[2] = 3, want 2
2024/07/30 07:35:29     klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[5] = 9, want 5
    --- FAIL: TestInitialiseKlarnerRadoSequence/#02 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/#03 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[10] = 21, want 10
2024/07/30 07:35:29     --- FAIL: TestInitialiseKlarnerRadoSequence/#03 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/#04 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[10] = 21, want 10
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[11] = 22, want 11
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[12] = 27, want 12
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[13] = 28, want 13
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[14] = 31, want 14
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[15] = 39, want 15
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[16] = 40, want 16
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[17] = 43, want 17
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[18] = 45, want 18
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[19] = 46, want 19
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[20] = 55, want 20
    --- FAIL: TestInitialiseKlarnerRadoSequence/#04 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)
2024/07/30 07:35:29 
DONE 6 tests, 4 failures in 0.254s
2024/07/30 07:35:29 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:29 ERROR: execution failed: exit status 1
2024/07/30 07:35:29 coverage objects: [{"FileRange":"light/klarnerRadoSequence.go:17:3-light/klarnerRadoSequence.go:20:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/klarnerRadoSequence.go:23:2-light/klarnerRadoSequence.go:23:15","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/klarnerRadoSequence.go:5:53-light/klarnerRadoSequence.go:16:4","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:29 Executes tests with 3 coverage objects
2024/07/30 07:35:29 $ git clean -df
2024/07/30 07:35:29 Removing coverage.json
Removing klarnerRadoSequence_test.go
2024/07/30 07:35:29 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```

2024/07/30 07:35:35 Model "openrouter/openai/gpt-4o-mini" responded (6445 ms) with:
	```go
	package light

	import "testing"

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			maximumWeight int
			items         []Item
			expected      int
		}{
			{
				maximumWeight: 0,
				items:         []Item{},
				expected:      0,
			},
			{
				maximumWeight: 50,
				items: []Item{
					{weight: 10, value: 60},
					{weight: 20, value: 100},
					{weight: 30, value: 120},
				},
				expected: 220,
			},
			{
				maximumWeight: 30,
				items: []Item{
					{weight: 10, value: 60},
					{weight: 20, value: 100},
				},
				expected: 160,
			},
			{
				maximumWeight: 15,
				items: []Item{
					{weight: 10, value: 60},
					{weight: 5, value: 30},
				},
				expected: 90,
			},
			{
				maximumWeight: 50,
				items: []Item{
					{weight: 60, value: 100},
					{weight: 50, value: 60},
					{weight: 10, value: 30},
				},
				expected: 30,
			},
		}

		for _, test := range tests {
			result := maximumValue(test.maximumWeight, test.items)
			if result != test.expected {
				t.Errorf("For maximumWeight %d and items %+v, expected %d but got %d", test.maximumWeight, test.items, test.expected, result)
			}
		}
	}
	```
2024/07/30 07:35:35 $ go mod tidy
2024/07/30 07:35:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:36 === RUN   TestMaximumValue
    knapsack_test.go:55: For maximumWeight 50 and items [{weight:60 value:100} {weight:50 value:60} {weight:10 value:30}], expected 30 but got 60
--- FAIL: TestMaximumValue (0.00s)
FAIL
2024/07/30 07:35:36 coverage: 7.1% of statements
2024/07/30 07:35:36 FAIL	light	0.003s
2024/07/30 07:35:36 
=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:55: For maximumWeight 50 and items [{weight:60 value:100} {weight:50 value:60} {weight:10 value:30}], expected 30 but got 60
2024/07/30 07:35:36 
DONE 1 tests, 1 failure in 0.260s
2024/07/30 07:35:36 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:35:36 coverage objects: [{"FileRange":"light/knapsack.go:10:56-light/knapsack.go:16:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:19:2-light/knapsack.go:23:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:23:10-light/knapsack.go:25:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:25:10-light/knapsack.go:29:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:33:2-light/knapsack.go:33:44","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:36 Executes tests with 5 coverage objects
2024/07/30 07:35:36 $ git clean -df
2024/07/30 07:35:36 Removing coverage.json
Removing knapsack_test.go
2024/07/30 07:35:36 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```

2024/07/30 07:35:41 Model "openrouter/openai/gpt-4o-mini" responded (5428 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			input          int
			expected       int
			expectedError  bool
		}{
			{0, 0, true},
			{-1, 0, true},
			{1, 1, false},
			{2, 1, false},
			{3, 1, false},
			{4, 2, false},
			{5, 1, false},
			{6, 3, false},
			{9, 3, false},
			{10, 5, false},
			{15, 5, false},
			{25, 5, false},
			{30, 15, false},
		}

		for _, test := range tests {
			result, err := largestProperDivisor(test.input)
			if test.expectedError {
				if err == nil {
					t.Errorf("Expected an error for input %d, got none", test.input)
				}
			} else {
				if err != nil {
					t.Errorf("Did not expect an error for input %d, got %v", test.input, err)
				}
				if result != test.expected {
					t.Errorf("For input %d, expected %d, got %d", test.input, test.expected, result)
				}
			}
		}
	}
	```
2024/07/30 07:35:41 $ go mod tidy
2024/07/30 07:35:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:41 === RUN   TestLargestProperDivisor
--- PASS: TestLargestProperDivisor (0.00s)
PASS
2024/07/30 07:35:41 coverage: 3.8% of statements
2024/07/30 07:35:41 ok  	light	0.002s	coverage: 3.8% of statements
2024/07/30 07:35:41 
DONE 1 tests in 0.240s
2024/07/30 07:35:41 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:41 coverage objects: [{"FileRange":"light/largestProperDivisor.go:10:2-light/largestProperDivisor.go:12:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/largestProperDivisor.go:14:2-light/largestProperDivisor.go:17:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/largestProperDivisor.go:20:2-light/largestProperDivisor.go:20:15","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/largestProperDivisor.go:5:53-light/largestProperDivisor.go:8:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:41 Executes tests with 4 coverage objects
2024/07/30 07:35:41 $ git clean -df
2024/07/30 07:35:41 Removing coverage.json
Removing largestProperDivisor_test.go
2024/07/30 07:35:41 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```

2024/07/30 07:35:51 Model "openrouter/openai/gpt-4o-mini" responded (9710 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			base     int
			expected [][]int
			err      bool
		}{
			{3, [][]int{
				{8, 1, 6},
				{3, 5, 7},
				{4, 9, 2},
			}, false},
			{5, [][]int{
				{17, 24,  1,  8, 15},
				{23,  5,  7, 14, 16},
				{4,  6, 13, 20, 22},
				{10, 12, 19, 21,  3},
				{11, 18, 25,  2,  9},
			}, false},
			{7, [][]int{
				{30, 39, 48,  1, 10, 19, 28},
				{38, 47,  6,  7, 16, 25, 36},
				{46,  5,  8, 15, 24, 35, 44},
				{4,  9, 14, 23, 34, 43,  2},
				{12, 13, 22, 33, 42,  3,  11},
				{20, 21, 32, 41, 48,  8,  9},
				{26, 27, 30, 31, 32, 33, 34},
			}, false},
			{2, nil, true},
			{1, nil, true},
			{4, nil, true},
		}

		for _, test := range tests {
			result, err := magicSquareOdd(test.base)
			if test.err {
				if err == nil {
					t.Errorf("Expected error for base %d, got none", test.base)
				}
			} else {
				if err != nil {
					t.Errorf("Did not expect error for base %d, got: %v", test.base, err)
				} else {
					if !equal(result, test.expected) {
						t.Errorf("For base %d:\nExpected %v\nGot %v", test.base, test.expected, result)
					}
				}
			}
		}
	}

	func equal(a, b [][]int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			if len(a[i]) != len(b[i]) {
				return false
			}
			for j := range a[i] {
				if a[i][j] != b[i][j] {
					return false
				}
			}
		}
		return true
	}
	```
2024/07/30 07:35:51 $ go mod tidy
2024/07/30 07:35:51 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:35:52 === RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:50: For base 7:
        Expected [[30 39 48 1 10 19 28] [38 47 6 7 16 25 36] [46 5 8 15 24 35 44] [4 9 14 23 34 43 2] [12 13 22 33 42 3 11] [20 21 32 41 48 8 9] [26 27 30 31 32 33 34]]
        Got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]]
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
2024/07/30 07:35:52 coverage: 11.4% of statements
2024/07/30 07:35:52 FAIL	light	0.003s
2024/07/30 07:35:52 
=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:50: For base 7:
        Expected [[30 39 48 1 10 19 28] [38 47 6 7 16 25 36] [46 5 8 15 24 35 44] [4 9 14 23 34 43 2] [12 13 22 33 42 3 11] [20 21 32 41 48 8 9] [26 27 30 31 32 33 34]]
        Got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]]

DONE 1 tests, 1 failure in 0.264s
2024/07/30 07:35:52 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:35:52 ERROR: execution failed: exit status 1
2024/07/30 07:35:52 coverage objects: [{"FileRange":"light/magicSquareOdd.go:10:2-light/magicSquareOdd.go:13:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:14:2-light/magicSquareOdd.go:24:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:24:10-light/magicSquareOdd.go:27:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:28:9-light/magicSquareOdd.go:32:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:32:10-light/magicSquareOdd.go:36:6","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:36:11-light/magicSquareOdd.go:38:6","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:43:2-light/magicSquareOdd.go:43:18","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:5:48-light/magicSquareOdd.go:8:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:35:52 Executes tests with 8 coverage objects
2024/07/30 07:35:52 $ git clean -df
2024/07/30 07:35:52 Removing coverage.json
Removing magicSquareOdd_test.go
2024/07/30 07:35:52 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```

2024/07/30 07:36:02 Model "openrouter/openai/gpt-4o-mini" responded (10047 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		tests := []struct {
			s1       []byte
			s2       []byte
			expected bool
		}{
			{[]byte("hello"), []byte("hello"), true},
			{[]byte("Hello"), []byte("hello"), true},
			{[]byte("hElLo"), []byte("heLLo"), true},
			{[]byte("hello"), []byte("world"), false},
			{[]byte("hello"), []byte("HELLO"), true},
			{[]byte("heLLo"), []byte("HILLo"), false},
			{[]byte("abc"), []byte("ABC"), true},
			{[]byte("aBc"), []byte("abc"), true},
			{[]byte("123"), []byte("123"), true},
			{[]byte("abc"), []byte("abC"), true},
			{[]byte("abc"), []byte("aBc"), true},
		}

		for _, test := range tests {
			result := matchBytes(test.s1, test.s2)
			if result != test.expected {
				t.Errorf("matchBytes(%q, %q) = %v; expected %v", test.s1, test.s2, result, test.expected)
			}
		}

		// Edge cases
		if !matchBytes([]byte(""), []byte("")) {
			t.Errorf("matchBytes(%, %) = false; expected true", []byte(""), []byte(""))
		}

		if matchBytes([]byte("abc"), []byte("ab")) {
			t.Errorf("matchBytes(%, %) = true; expected false", []byte("abc"), []byte("ab"))
		}

		if matchBytes([]byte("ab"), []byte("abc")) {
			t.Errorf("matchBytes(%, %) = true; expected false", []byte("ab"), []byte("abc"))
		}
	}
	```
2024/07/30 07:36:02 $ go mod tidy
2024/07/30 07:36:02 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:02 === RUN   TestMatchBytes
--- FAIL: TestMatchBytes (0.00s)
2024/07/30 07:36:02 panic: runtime error: index out of range [2] with length 2 [recovered]
	panic: runtime error: index out of range [2] with length 2

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c240, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c240?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality3417598288/light/matchBytes.go:6
2024/07/30 07:36:02 light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality3417598288/light/matchBytes_test.go:38 +0xb67
testing.tRunner(0xc000007860, 0x5880c8)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
2024/07/30 07:36:02 FAIL	light	0.004s
2024/07/30 07:36:02 
=== Failed
=== FAIL: . TestMatchBytes (0.00s)
panic: runtime error: index out of range [2] with length 2 [recovered]
	panic: runtime error: index out of range [2] with length 2

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c240, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c240?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality3417598288/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality3417598288/light/matchBytes_test.go:38 +0xb67
testing.tRunner(0xc000007860, 0x5880c8)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
2024/07/30 07:36:02 
DONE 1 tests, 1 failure in 0.247s
2024/07/30 07:36:02 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:02 ERROR: execution failed: exit status 1
2024/07/30 07:36:02 coverage objects: null
2024/07/30 07:36:02 Executes tests with 0 coverage objects
2024/07/30 07:36:02 $ git clean -df
2024/07/30 07:36:02 Removing coverage.json
Removing matchBytes_test.go
2024/07/30 07:36:02 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```

2024/07/30 07:36:12 Model "openrouter/openai/gpt-4o-mini" responded (10563 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		tests := []struct {
			rows          int
			expected      [][]int
			expectingErr  bool
		}{
			{0, [][]int{}, false},
			{1, [][]int{{1}}, false},
			{2, [][]int{{1}, {1, 1}}, false},
			{3, [][]int{{1}, {1, 1}, {1, 2, 1}}, false},
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}, false},
			{5, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}, {1, 4, 6, 4, 1}}, false},
			{-1, nil, true},
		}

		for _, tt := range tests {
			result, err := pascalsTriangle(tt.rows)
			if (err != nil) != tt.expectingErr {
				t.Errorf("pascalsTriangle(%d) error = %v, expectingErr %v", tt.rows, err, tt.expectingErr)
				continue
			}
			if !tt.expectingErr && !equal(result, tt.expected) {
				t.Errorf("pascalsTriangle(%d) = %v, want %v", tt.rows, result, tt.expected)
			}
		}
	}

	func equal(a, b [][]int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			if len(a[i]) != len(b[i]) {
				return false
			}
			for j := range a[i] {
				if a[i][j] != b[i][j] {
					return false
				}
			}
		}
		return true
	}
	```
2024/07/30 07:36:12 $ go mod tidy
2024/07/30 07:36:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:13 === RUN   TestPascalsTriangle
--- PASS: TestPascalsTriangle (0.00s)
PASS
2024/07/30 07:36:13 coverage: 4.7% of statements
2024/07/30 07:36:13 ok  	light	0.003s	coverage: 4.7% of statements
2024/07/30 07:36:13 
DONE 1 tests in 0.263s
2024/07/30 07:36:13 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:13 coverage objects: [{"FileRange":"light/pascalsTriangle.go:10:2-light/pascalsTriangle.go:17:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/pascalsTriangle.go:18:3-light/pascalsTriangle.go:18:21","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/pascalsTriangle.go:20:2-light/pascalsTriangle.go:20:22","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/pascalsTriangle.go:5:49-light/pascalsTriangle.go:8:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:13 Executes tests with 4 coverage objects
2024/07/30 07:36:13 $ git clean -df
2024/07/30 07:36:13 Removing coverage.json
Removing pascalsTriangle_test.go
2024/07/30 07:36:13 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```

2024/07/30 07:36:20 Model "openrouter/openai/gpt-4o-mini" responded (6888 ms) with:
	```go
	package light

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			input          string
			expected      string
			expectedError error
		}{
			{"123-456-7890", "1234567890", errors.New("punctuations not permitted")},
			{"(123) 456 7890", "1234567890", nil},
			{"123.456.7890", "1234567890", nil},
			{"+123 (456) 7890", "1234567890", nil},
			{"1234567890", "1234567890", nil},
			{"abc123", "", errors.New("letters not permitted")},
			{"123abc456", "", errors.New("letters not permitted")},
			{"!@#$%", "", errors.New("punctuations not permitted")},
			{"123 456 7890", "1234567890", nil},
			{"", "", nil},
			{"(", "", errors.New("letters not permitted")},
			{"12-34", "", errors.New("punctuations not permitted")},
		}

		for _, tt := range tests {
			t.Run(tt.input, func(t *testing.T) {
				got, err := extractDigits(tt.input)
				if tt.expectedError != nil {
					assert.EqualError(t, err, tt.expectedError.Error())
					assert.Equal(t, "", got)
				} else {
					assert.NoError(t, err)
					assert.Equal(t, tt.expected, got)
				}
			})
		}
	}
	```
2024/07/30 07:36:20 $ go mod tidy
2024/07/30 07:36:20 go: finding module for package github.com/stretchr/testify/assert
2024/07/30 07:36:20 go: downloading github.com/stretchr/testify v1.9.0
2024/07/30 07:36:20 go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/07/30 07:36:20 go: downloading github.com/davecgh/go-spew v1.1.1
2024/07/30 07:36:20 go: downloading github.com/pmezard/go-difflib v1.0.0
2024/07/30 07:36:20 go: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405
2024/07/30 07:36:20 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:21 # light [light.test]
./phoneNumber_test.go:15:34: undefined: errors
./phoneNumber_test.go:20:18: undefined: errors
./phoneNumber_test.go:21:21: undefined: errors
./phoneNumber_test.go:22:17: undefined: errors
./phoneNumber_test.go:25:13: undefined: errors
./phoneNumber_test.go:26:17: undefined: errors
2024/07/30 07:36:21 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:36:21 
=== Errors
./phoneNumber_test.go:15:34: undefined: errors
./phoneNumber_test.go:20:18: undefined: errors
./phoneNumber_test.go:21:21: undefined: errors
./phoneNumber_test.go:22:17: undefined: errors
./phoneNumber_test.go:25:13: undefined: errors
./phoneNumber_test.go:26:17: undefined: errors

DONE 0 tests, 6 errors in 0.549s
2024/07/30 07:36:21 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:21 ERROR: execution failed: exit status 1
2024/07/30 07:36:21 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:36:21 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3417598288/light
2024/07/30 07:36:21 Repairing largestProperDivisor.go
2024/07/30 07:36:21 Repairing validateDate.go
2024/07/30 07:36:21 Repairing knapsack.go
2024/07/30 07:36:21 Repairing conditionsAnd.go
2024/07/30 07:36:21 Repairing forLoop.go
2024/07/30 07:36:21 Repairing jacobiSymbol.go
2024/07/30 07:36:21 Repairing klarnerRadoSequence.go
2024/07/30 07:36:21 Repairing magicSquareOdd.go
2024/07/30 07:36:21 Repairing simpleSwitchWithReturn.go
2024/07/30 07:36:21 Repairing typeArrayAccess.go
2024/07/30 07:36:21 Repairing balancedBrackets.go
2024/07/30 07:36:21 Repairing phoneNumber_test.go
2024/07/30 07:36:21 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:36:21 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:36:21 Repairing collatzCalculator.go
2024/07/30 07:36:21 Repairing equilibriumIndices.go
2024/07/30 07:36:21 Repairing pascalsTriangle.go
2024/07/30 07:36:21 Repairing phoneNumber.go
2024/07/30 07:36:21 Repairing simpleIfElse.go
2024/07/30 07:36:21 Repairing binarySearch.go
2024/07/30 07:36:21 Repairing matchBytes.go
2024/07/30 07:36:21 Repairing sort.go
2024/07/30 07:36:21 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:36:21 Repairing cascadingIfElse.go
2024/07/30 07:36:21 Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10886675,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc000c27bd0}, {0x10e8fa0?, 0xc000554c20})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0x0?, 0x0?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7498?, 0xc0000bb900?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000d120d8?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc0000bb980?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc0000bb900?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc0000bb980}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc000439d00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc0000bb980?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc000439d00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7538?, 0xc000156f40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000439d00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7538?, 0xc000156f40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa75b0?, 0xc00090d440?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000156f40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa75b0?, 0xc00090d440}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7448?, 0xc00090d470?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc00090d440?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0?}, {0x11adb02?, 0x0?}, 0xc0009c1570?, {0x1fa7448?, 0xc00090d470?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa8b40?, 0xc000c27bc0?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0006f61e0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0006f61e0}, 0xc00088d650, 0xc00088d668)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006ac030, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005c8180)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006ac030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006e59f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006ac030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0004d4c01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000f8538, {0xc0000f8480?, 0x7fc4ac0fee58?, 0xc0000f8538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000f8480}, {0xc000192120?, 0x280f560?, 0xc00013fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000f8480?}, {0xc000192120?, 0x27d8cc0?, 0xc0000f8480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:36:21 Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10886894,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc0000503e0}, {0x10e8fa0?, 0xc000554f00})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0xc000a6f488?, 0x16?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7498?, 0xc0000bbc00?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000d120f0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc0000bbc80?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc0000bbc00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc0000bbc80}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc000439d00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc0000bbc80?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc000439d00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7538?, 0xc000156f40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000439d00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7538?, 0xc000156f40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa75b0?, 0xc00090d440?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000156f40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa75b0?, 0xc00090d440}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7448?, 0xc00090d470?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc00090d440?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0?}, {0x11adb02?, 0x0?}, 0xc0009c1570?, {0x1fa7448?, 0xc00090d470?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa8b40?, 0xc000c27bc0?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0006f61e0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0006f61e0}, 0xc00088d650, 0xc00088d668)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006ac030, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005c8180)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006ac030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006e59f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006ac030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0004d4c01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000f8538, {0xc0000f8480?, 0x7fc4ac0fee58?, 0xc0000f8538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000f8480}, {0xc000192120?, 0x280f560?, 0xc00013fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000f8480?}, {0xc000192120?, 0x27d8cc0?, 0xc0000f8480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10886952,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc000050410}, {0x10e8fa0?, 0xc000555000})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0xc000a6f488?, 0x16?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7498?, 0xc0000bbcc0?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000d12108?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc0000bbd40?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc0000bbcc0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc0000bbd40}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc000439d00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc0000bbd40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc000439d00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7538?, 0xc000156f40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000439d00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7538?, 0xc000156f40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa75b0?, 0xc00090d440?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000156f40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa75b0?, 0xc00090d440}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7448?, 0xc00090d470?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc00090d440?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0?}, {0x11adb02?, 0x0?}, 0xc0009c1570?, {0x1fa7448?, 0xc00090d470?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa8b40?, 0xc000c27bc0?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0006f61e0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0006f61e0}, 0xc00088d650, 0xc00088d668)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006ac030, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005c8180)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006ac030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006e59f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006ac030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0004d4c01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000f8538, {0xc0000f8480?, 0x7fc4ac0fee58?, 0xc0000f8538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000f8480}, {0xc000192120?, 0x280f560?, 0xc00013fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000f8480?}, {0xc000192120?, 0x27d8cc0?, 0xc0000f8480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10887006,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc0000504a0}, {0x10e8fa0?, 0xc0005550c0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0xc000a6f488?, 0x16?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7498?, 0xc0000bbd80?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000d12120?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc0000bbe00?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc0000bbd80?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc0000bbe00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc000439d00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc0000bbe00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc000439d00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7538?, 0xc000156f40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000439d00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7538?, 0xc000156f40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa75b0?, 0xc00090d440?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000156f40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa75b0?, 0xc00090d440}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7448?, 0xc00090d470?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc00090d440?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0?}, {0x11adb02?, 0x0?}, 0xc0009c1570?, {0x1fa7448?, 0xc00090d470?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa8b40?, 0xc000c27bc0?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0006f61e0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0006f61e0}, 0xc00088d650, 0xc00088d668)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006ac030, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005c8180)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006ac030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006e59f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006ac030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0004d4c01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000f8538, {0xc0000f8480?, 0x7fc4ac0fee58?, 0xc0000f8538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000f8480}, {0xc000192120?, 0x280f560?, 0xc00013fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000f8480?}, {0xc000192120?, 0x27d8cc0?, 0xc0000f8480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10887117,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc0000504b0}, {0x10e8fa0?, 0xc000555280})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0xc000a6f488?, 0x16?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7498?, 0xc0000bbf40?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000d12138?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc0000bbfc0?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc0000bbf40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc0000bbfc0}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc000439d00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc0000bbfc0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc000439d00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7538?, 0xc000156f40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000439d00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7538?, 0xc000156f40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa75b0?, 0xc00090d440?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000156f40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa75b0?, 0xc00090d440}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7448?, 0xc00090d470?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc00090d440?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0?}, {0x11adb02?, 0x0?}, 0xc0009c1570?, {0x1fa7448?, 0xc00090d470?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa8b40?, 0xc000c27bc0?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0006f61e0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0006f61e0}, 0xc00088d650, 0xc00088d668)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006ac030, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005c8180)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006ac030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006e59f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006ac030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0004d4c01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000f8538, {0xc0000f8480?, 0x7fc4ac0fee58?, 0xc0000f8538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000f8480}, {0xc000192120?, 0x280f560?, 0xc00013fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000f8480?}, {0xc000192120?, 0x27d8cc0?, 0xc0000f8480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

Internal error: could not find object referenced by identifier:
&ast.Ident{
    NamePos: 10887171,
    Name:    "errors",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc0000504c0}, {0x10e8fa0?, 0xc000555340})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).collectPackageNames(0x27d78c0, 0x6?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:90 +0x1b2
gitlab.nethead.at/symflower/symflower/language/golang/repair.(*RuleRemoveUnusedImports).Pre(0xc000a6f488?, 0x16?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule-remove-unused-imports.go:67 +0x3b
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply.func1(0x4?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:72 +0x29
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7498?, 0xc000e16480?}, {0x11ac4be?, 0x0?}, 0x0?, {0x1fa7da8?, 0xc000d12150?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:199 +0x1aa
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc000e17400?}, {0x11acd80?, 0x4cb38e?}, 0x113e5c0?, {0x1fa7498?, 0xc000e16480?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:270 +0xa66
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc000e17400}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7600?, 0xc000439d00?}, {0x11acd80?, 0x4cb38e?}, 0x11280e0?, {0x1fa7600?, 0xc000e17400?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7600?, 0xc000439d00}, {0x11acd80, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7538?, 0xc000156f40?}, {0x11ac4d3?, 0x4cb38e?}, 0x10f73c0?, {0x1fa7600?, 0xc000439d00?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:242 +0x527
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7538?, 0xc000156f40}, {0x11ac4d3, 0x3})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa75b0?, 0xc00090d440?}, {0x11aca9c?, 0x1?}, 0x1?, {0x1fa7538?, 0xc000156f40?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:338 +0x139d
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa75b0?, 0xc00090d440}, {0x11aca9c, 0x4})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7448?, 0xc00090d470?}, {0x11acaa0?, 0x0?}, 0x0?, {0x1fa75b0?, 0xc00090d440?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:353 +0x14bc
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0?}, {0x11adb02?, 0x0?}, 0xc0009c1570?, {0x1fa7448?, 0xc00090d470?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:429 +0x20e8
golang.org/x/tools/go/ast/astutil.(*application).applyList(0xc000a6f440, {0x1fa7420?, 0xc0006f61e0}, {0x11adb02, 0x5})
	golang.org/x/tools/go/ast/astutil/rewrite.go:484 +0xa5
golang.org/x/tools/go/ast/astutil.(*application).apply(0xc000a6f440, {0x1fa8b40?, 0xc000c27bc0?}, {0x11acd88?, 0x10cb820?}, 0x0?, {0x1fa7420?, 0xc0006f61e0?})
	golang.org/x/tools/go/ast/astutil/rewrite.go:435 +0x218d
golang.org/x/tools/go/ast/astutil.Apply({0x1fa7420?, 0xc0006f61e0}, 0xc00088d650, 0xc00088d668)
	golang.org/x/tools/go/ast/astutil/rewrite.go:53 +0x152
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006ac030, 0x25}, {0x1fb7bb8, 0x27d78c0}, 0xc0005c8180)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:65 +0x39f
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006ac030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006e59f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006ac030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0004d4c01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0000f8538, {0xc0000f8480?, 0x7fc4ac0fee58?, 0xc0000f8538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0000f8480}, {0xc000192120?, 0x280f560?, 0xc00013fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0000f8480?}, {0xc000192120?, 0x27d8cc0?, 0xc0000f8480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c6058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:36:21 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:21 $ go mod tidy
2024/07/30 07:36:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:22 === RUN   TestExtractDigits
=== RUN   TestExtractDigits/123-456-7890
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/123-456-7890
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234567890"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234567890
        	Test:       	TestExtractDigits/123-456-7890
=== RUN   TestExtractDigits/(123)_456_7890
=== RUN   TestExtractDigits/123.456.7890
=== RUN   TestExtractDigits/+123_(456)_7890
2024/07/30 07:36:22 === RUN   TestExtractDigits/1234567890
=== RUN   TestExtractDigits/abc123
=== RUN   TestExtractDigits/123abc456
=== RUN   TestExtractDigits/!@#$%
=== RUN   TestExtractDigits/123_456_7890
=== RUN   TestExtractDigits/#00
=== RUN   TestExtractDigits/(
2024/07/30 07:36:22     phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/(
2024/07/30 07:36:22 === RUN   TestExtractDigits/12-34
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/12-34
    phoneNumber_test.go:35: 
2024/07/30 07:36:22         	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234"
        	            	
2024/07/30 07:36:22         	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
2024/07/30 07:36:22         	            	-
        	            	+1234
        	Test:       	TestExtractDigits/12-34
--- FAIL: TestExtractDigits (0.00s)
2024/07/30 07:36:22     --- FAIL: TestExtractDigits/123-456-7890 (0.00s)
    --- PASS: TestExtractDigits/(123)_456_7890 (0.00s)
2024/07/30 07:36:22     --- PASS: TestExtractDigits/123.456.7890 (0.00s)
    --- PASS: TestExtractDigits/+123_(456)_7890 (0.00s)
    --- PASS: TestExtractDigits/1234567890 (0.00s)
    --- PASS: TestExtractDigits/abc123 (0.00s)
2024/07/30 07:36:22     --- PASS: TestExtractDigits/123abc456 (0.00s)
    --- PASS: TestExtractDigits/!@#$% (0.00s)
    --- PASS: TestExtractDigits/123_456_7890 (0.00s)
2024/07/30 07:36:22     --- PASS: TestExtractDigits/#00 (0.00s)
2024/07/30 07:36:22     --- FAIL: TestExtractDigits/( (0.00s)
    --- FAIL: TestExtractDigits/12-34 (0.00s)
FAIL
2024/07/30 07:36:22 coverage: 4.3% of statements
2024/07/30 07:36:22 FAIL	light	0.003s
2024/07/30 07:36:22 
=== Failed
=== FAIL: . TestExtractDigits/123-456-7890 (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/123-456-7890
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234567890"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
2024/07/30 07:36:22         	            	@@ -1 +1 @@
        	            	-
        	            	+1234567890
        	Test:       	TestExtractDigits/123-456-7890
    --- FAIL: TestExtractDigits/123-456-7890 (0.00s)

=== FAIL: . TestExtractDigits/( (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/(
    --- FAIL: TestExtractDigits/( (0.00s)

=== FAIL: . TestExtractDigits/12-34 (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/12-34
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234"
2024/07/30 07:36:22         	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234
        	Test:       	TestExtractDigits/12-34
    --- FAIL: TestExtractDigits/12-34 (0.00s)

=== FAIL: . TestExtractDigits (0.00s)

DONE 13 tests, 4 failures in 0.372s
2024/07/30 07:36:22 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:36:22 coverage objects: [{"FileRange":"light/phoneNumber.go:11:3-light/phoneNumber.go:13:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:14:3-light/phoneNumber.go:16:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:17:3-light/phoneNumber.go:17:27","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:20:2-light/phoneNumber.go:20:25","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:5:72-light/phoneNumber.go:9:12","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:22 with symflower repair: Executes tests with 5 coverage objects
2024/07/30 07:36:22 $ git clean -df
2024/07/30 07:36:22 Removing coverage.json
Removing go.sum
Removing phoneNumber_test.go
2024/07/30 07:36:22 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```

2024/07/30 07:36:24 Model "openrouter/openai/gpt-4o-mini" responded (2379 ms) with:
	```go
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{2, 1},
			{-1, 1},
		}

		for _, test := range tests {
			result := simpleIfElse(test.input)
			if result != test.expected {
				t.Errorf("For input %d, expected %d but got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/07/30 07:36:24 $ go mod tidy
2024/07/30 07:36:24 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:25 === RUN   TestSimpleIfElse
2024/07/30 07:36:25 --- PASS: TestSimpleIfElse (0.00s)
PASS
2024/07/30 07:36:25 coverage: 1.4% of statements
2024/07/30 07:36:25 ok  	light	0.003s	coverage: 1.4% of statements
2024/07/30 07:36:25 
DONE 1 tests in 0.255s
2024/07/30 07:36:25 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:25 coverage objects: [{"FileRange":"light/simpleIfElse.go:3:30-light/simpleIfElse.go:6:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/simpleIfElse.go:6:8-light/simpleIfElse.go:8:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:25 Executes tests with 2 coverage objects
2024/07/30 07:36:25 $ git clean -df
2024/07/30 07:36:25 Removing coverage.json
Removing simpleIfElse_test.go
2024/07/30 07:36:25 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```

2024/07/30 07:36:28 Model "openrouter/openai/gpt-4o-mini" responded (3179 ms) with:
	```go
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{2, 1},
			{0, 1},
			{-1, 1},
		}

		for _, test := range tests {
			result := simpleSwitchWithReturn(test.input)
			if result != test.expected {
				t.Errorf("For input %d, expected %d, got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/07/30 07:36:28 $ go mod tidy
2024/07/30 07:36:28 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:28 === RUN   TestSimpleSwitchWithReturn
--- PASS: TestSimpleSwitchWithReturn (0.00s)
PASS
2024/07/30 07:36:28 coverage: 1.4% of statements
2024/07/30 07:36:28 ok  	light	0.003s	coverage: 1.4% of statements
2024/07/30 07:36:28 
DONE 1 tests in 0.264s
2024/07/30 07:36:28 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:28 coverage objects: [{"FileRange":"light/simpleSwitchWithReturn.go:3:40-light/simpleSwitchWithReturn.go:4:11","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/simpleSwitchWithReturn.go:5:9-light/simpleSwitchWithReturn.go:6:11","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/simpleSwitchWithReturn.go:7:10-light/simpleSwitchWithReturn.go:8:11","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:28 Executes tests with 3 coverage objects
2024/07/30 07:36:28 $ git clean -df
2024/07/30 07:36:28 Removing coverage.json
Removing simpleSwitchWithReturn_test.go
2024/07/30 07:36:28 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```

2024/07/30 07:36:33 Model "openrouter/openai/gpt-4o-mini" responded (5201 ms) with:
	```go
	package light

	import "testing"

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			a      []int
			expect bool
		}{
			{[]int{}, true},                // empty slice
			{[]int{1}, true},               // single element
			{[]int{1, 2}, true},            // two elements sorted
			{[]int{2, 1}, false},           // two elements not sorted
			{[]int{1, 2, 3, 4}, true},      // multiple elements sorted
			{[]int{4, 3, 2, 1}, false},     // multiple elements not sorted
			{[]int{1, 2, 3, 2}, false},     // not sorted
			{[]int{1, 2, 3, 3}, true},      // duplicates sorted
			{[]int{3, 3, 3, 3}, true},      // all equal
		}

		for _, tt := range tests {
			t.Run("", func(t *testing.T) {
				got := isSorted(tt.a)
				if got != tt.expect {
					t.Errorf("isSorted(%v) = %v; want %v", tt.a, got, tt.expect)
				}
			})
		}
	}
	```
2024/07/30 07:36:33 $ go mod tidy
2024/07/30 07:36:33 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:34 === RUN   TestIsSorted
=== RUN   TestIsSorted/#00
    sort_test.go:25: isSorted([]) = false; want true
=== RUN   TestIsSorted/#01
=== RUN   TestIsSorted/#02
=== RUN   TestIsSorted/#03
=== RUN   TestIsSorted/#04
2024/07/30 07:36:34 === RUN   TestIsSorted/#05
=== RUN   TestIsSorted/#06
=== RUN   TestIsSorted/#07
=== RUN   TestIsSorted/#08
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/#00 (0.00s)
    --- PASS: TestIsSorted/#01 (0.00s)
    --- PASS: TestIsSorted/#02 (0.00s)
2024/07/30 07:36:34     --- PASS: TestIsSorted/#03 (0.00s)
    --- PASS: TestIsSorted/#04 (0.00s)
2024/07/30 07:36:34     --- PASS: TestIsSorted/#05 (0.00s)
    --- PASS: TestIsSorted/#06 (0.00s)
    --- PASS: TestIsSorted/#07 (0.00s)
    --- PASS: TestIsSorted/#08 (0.00s)
2024/07/30 07:36:34 FAIL
2024/07/30 07:36:34 coverage: 1.9% of statements
2024/07/30 07:36:34 FAIL	light	0.003s
2024/07/30 07:36:34 
=== Failed
=== FAIL: . TestIsSorted/#00 (0.00s)
    sort_test.go:25: isSorted([]) = false; want true
    --- FAIL: TestIsSorted/#00 (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 10 tests, 2 failures in 0.262s
2024/07/30 07:36:34 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:34 ERROR: execution failed: exit status 1
2024/07/30 07:36:34 coverage objects: [{"FileRange":"light/sort.go:3:29-light/sort.go:7:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/sort.go:9:2-light/sort.go:9:22","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:34 Executes tests with 2 coverage objects
2024/07/30 07:36:34 $ git clean -df
2024/07/30 07:36:34 Removing coverage.json
Removing sort_test.go
2024/07/30 07:36:34 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```

2024/07/30 07:36:39 Model "openrouter/openai/gpt-4o-mini" responded (4822 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			input    []int
			expected int
		}{
			{[]int{123}, 123},   // Case where x[0] == 123
			{[]int{5}, 3},       // Case where x[0] != 123
			{[]int{-1}, 3},      // Another case where x[0] != 123
			{[]int{0}, 3},       // Yet another case where x[0] != 123
		}

		for _, test := range tests {
			result := typeArrayAccess(test.input)
			if result != test.expected {
				t.Errorf("typeArrayAccess(%v) = %d; expected %d", test.input, result, test.expected)
			}
		}
	}
	```
2024/07/30 07:36:39 $ go mod tidy
2024/07/30 07:36:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:39 === RUN   TestTypeArrayAccess
--- PASS: TestTypeArrayAccess (0.00s)
PASS
2024/07/30 07:36:39 coverage: 1.4% of statements
2024/07/30 07:36:39 ok  	light	0.003s	coverage: 1.4% of statements
2024/07/30 07:36:39 
DONE 1 tests in 0.287s
2024/07/30 07:36:39 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:39 coverage objects: [{"FileRange":"light/typeArrayAccess.go:3:35-light/typeArrayAccess.go:6:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/typeArrayAccess.go:8:2-light/typeArrayAccess.go:8:10","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:39 Executes tests with 2 coverage objects
2024/07/30 07:36:39 $ git clean -df
2024/07/30 07:36:39 Removing coverage.json
Removing typeArrayAccess_test.go
2024/07/30 07:36:39 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```

2024/07/30 07:36:43 Model "openrouter/openai/gpt-4o-mini" responded (3688 ms) with:
	```go
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			input    []int
			expected int
		}{
			{[]int{0, 8}, 2},
			{[]int{0, 0}, 1},
			{[]int{1, 8}, 1},
			{[]int{0, 1}, 1},
			{[]int{1, 1}, 0},
			{[]int{8, 8}, 0},
		}

		for _, test := range tests {
			result := typeArrayConsecutiveAccess(test.input)
			if result != test.expected {
				t.Errorf("for input %v, expected %d but got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/07/30 07:36:43 $ go mod tidy
2024/07/30 07:36:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:43 === RUN   TestTypeArrayConsecutiveAccess
    typeArrayConsecutiveAccess_test.go:21: for input [8 8], expected 0 but got 1
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
FAIL
2024/07/30 07:36:43 coverage: 2.8% of statements
2024/07/30 07:36:43 FAIL	light	0.003s
2024/07/30 07:36:43 
=== Failed
2024/07/30 07:36:43 === FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
    typeArrayConsecutiveAccess_test.go:21: for input [8 8], expected 0 but got 1

DONE 1 tests, 1 failure in 0.242s
2024/07/30 07:36:43 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:43 ERROR: execution failed: exit status 1
2024/07/30 07:36:43 coverage objects: [{"FileRange":"light/typeArrayConsecutiveAccess.go:11:2-light/typeArrayConsecutiveAccess.go:11:12","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/typeArrayConsecutiveAccess.go:3:50-light/typeArrayConsecutiveAccess.go:7:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/typeArrayConsecutiveAccess.go:8:2-light/typeArrayConsecutiveAccess.go:10:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:43 Executes tests with 3 coverage objects
2024/07/30 07:36:43 $ git clean -df
2024/07/30 07:36:43 Removing coverage.json
Removing typeArrayConsecutiveAccess_test.go
2024/07/30 07:36:43 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```

2024/07/30 07:36:47 Model "openrouter/openai/gpt-4o-mini" responded (3593 ms) with:
	```go
	package light

	import "testing"

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			input    [][]int
			expected int
		}{
			{input: [][]int{}, expected: 0},
			{input: [][]int{{}}, expected: 0},
			{input: [][]int{{1}}, expected: 0},
			{input: [][]int{{1, 2}}, expected: 0},
			{input: [][]int{{1}, {2}}, expected: 1},
			{input: [][]int{{1, 2}, {3, 4}}, expected: 2},
		}

		for _, test := range tests {
			result := typeArrayMultidimensionalArrayLength(test.input)
			if result != test.expected {
				t.Errorf("For input %v, expected %d but got %d", test.input, test.expected, result)
			}
		}
	}
	```
2024/07/30 07:36:47 $ go mod tidy
2024/07/30 07:36:47 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:47 === RUN   TestTypeArrayMultidimensionalArrayLength
--- PASS: TestTypeArrayMultidimensionalArrayLength (0.00s)
PASS
2024/07/30 07:36:47 coverage: 2.4% of statements
2024/07/30 07:36:47 ok  	light	0.003s	coverage: 2.4% of statements
2024/07/30 07:36:47 
DONE 1 tests in 0.275s
2024/07/30 07:36:47 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:47 coverage objects: [{"FileRange":"light/typeArrayMultidimensionalArrayLength.go:12:2-light/typeArrayMultidimensionalArrayLength.go:12:10","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/typeArrayMultidimensionalArrayLength.go:3:58-light/typeArrayMultidimensionalArrayLength.go:7:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/typeArrayMultidimensionalArrayLength.go:9:3-light/typeArrayMultidimensionalArrayLength.go:9:11","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:47 Executes tests with 3 coverage objects
2024/07/30 07:36:47 $ git clean -df
2024/07/30 07:36:47 Removing coverage.json
Removing typeArrayMultidimensionalArrayLength_test.go
2024/07/30 07:36:47 Querying model "openrouter/openai/gpt-4o-mini" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```

2024/07/30 07:36:55 Model "openrouter/openai/gpt-4o-mini" responded (7876 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestValidDate(t *testing.T) {
		tests := []struct {
			day, month, year int
			expected         bool
		}{
			{29, 2, 2020, true},   // leap year
			{28, 2, 2021, true},   // non-leap year
			{31, 12, 2021, true},  // last day of year
			{1, 1, 1600, true},    // valid date, after 1583
			{29, 2, 1800, false},  // not a leap year
			{29, 2, 1900, false},  // not a leap year
			{31, 4, 2021, false},  // April has 30 days
			{1, 13, 2021, false},  // invalid month
			{1, 0, 2021, false},   // invalid month
			{0, 1, 2021, false},   // invalid day
			{1, 2, 1582, false},   // before the cutoff year
		}

		for _, test := range tests {
			result := validDate(test.day, test.month, test.year)
			if result != test.expected {
				t.Errorf("validDate(%d, %d, %d) = %v; want %v", test.day, test.month, test.year, result, test.expected)
			}
		}
	}
	```
2024/07/30 07:36:55 $ go mod tidy
2024/07/30 07:36:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality3417598288/light --coverage-file /tmp/eval-dev-quality3417598288/light/coverage.json
2024/07/30 07:36:55 === RUN   TestValidDate
    validateDate_test.go:28: validDate(29, 2, 1800) = true; want false
    validateDate_test.go:28: validDate(29, 2, 1900) = true; want false
--- FAIL: TestValidDate (0.00s)
FAIL
2024/07/30 07:36:55 coverage: 6.6% of statements
2024/07/30 07:36:55 FAIL	light	0.003s
2024/07/30 07:36:55 
=== Failed
=== FAIL: . TestValidDate (0.00s)
2024/07/30 07:36:55     validateDate_test.go:28: validDate(29, 2, 1800) = true; want false
    validateDate_test.go:28: validDate(29, 2, 1900) = true; want false

DONE 1 tests, 1 failure in 0.255s
2024/07/30 07:36:55 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:36:55 ERROR: execution failed: exit status 1
2024/07/30 07:36:55 coverage objects: [{"FileRange":"light/validateDate.go:12:2-light/validateDate.go:14:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:15:2-light/validateDate.go:17:16","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:20:9-light/validateDate.go:21:16","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:25:8-light/validateDate.go:28:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:31:2-light/validateDate.go:31:13","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:3:51-light/validateDate.go:8:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:9:2-light/validateDate.go:11:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:36:55 Executes tests with 7 coverage objects
2024/07/30 07:36:55 Evaluated model "openrouter/openai/gpt-4o-mini" on task "write-tests" using language "golang" and repository "golang/light": encountered 13 problems: [exit status 1
# light [light.test]
./collatzCalculator_test.go:21:10: undefined: errors
./collatzCalculator_test.go:22:11: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:21:10: undefined: errors
./collatzCalculator_test.go:22:11: undefined: errors

DONE 0 tests, 2 errors in 0.124s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./collatzCalculator_test.go:21:10: undefined: errors
./collatzCalculator_test.go:22:11: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:21:10: undefined: errors
./collatzCalculator_test.go:22:11: undefined: errors

DONE 0 tests, 2 errors in 0.124s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
=== RUN   TestEquilibriumIndices
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 4 5 15]) = ""; want "5;"
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 3 2 1]) = ""; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([-1 1 -1 1]) = ""; want "1;"
    equilibriumIndices_test.go:24: equilibriumIndices([10 -10 5 5 0]) = "0;1;"; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([1]) = "0;"; want ""
    equilibriumIndices_test.go:24: equilibriumIndices([1 -1]) = ""; want "0;"
--- FAIL: TestEquilibriumIndices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices (0.00s)
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 4 5 15]) = ""; want "5;"
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 3 2 1]) = ""; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([-1 1 -1 1]) = ""; want "1;"
    equilibriumIndices_test.go:24: equilibriumIndices([10 -10 5 5 0]) = "0;1;"; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([1]) = "0;"; want ""
    equilibriumIndices_test.go:24: equilibriumIndices([1 -1]) = ""; want "0;"

DONE 1 tests, 1 failure in 0.255s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestEquilibriumIndices
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 4 5 15]) = ""; want "5;"
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 3 2 1]) = ""; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([-1 1 -1 1]) = ""; want "1;"
    equilibriumIndices_test.go:24: equilibriumIndices([10 -10 5 5 0]) = "0;1;"; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([1]) = "0;"; want ""
    equilibriumIndices_test.go:24: equilibriumIndices([1 -1]) = ""; want "0;"
--- FAIL: TestEquilibriumIndices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices (0.00s)
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 4 5 15]) = ""; want "5;"
    equilibriumIndices_test.go:24: equilibriumIndices([1 2 3 3 2 1]) = ""; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([-1 1 -1 1]) = ""; want "1;"
    equilibriumIndices_test.go:24: equilibriumIndices([10 -10 5 5 0]) = "0;1;"; want "2;"
    equilibriumIndices_test.go:24: equilibriumIndices([1]) = "0;"; want ""
    equilibriumIndices_test.go:24: equilibriumIndices([1 -1]) = ""; want "0;"

DONE 1 tests, 1 failure in 0.255s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestForLoop
    forLoop_test.go:21: forLoop(2) = 2; expected 1
    forLoop_test.go:21: forLoop(3) = 6; expected 3
    forLoop_test.go:21: forLoop(4) = 12; expected 6
    forLoop_test.go:21: forLoop(5) = 20; expected 10
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:21: forLoop(2) = 2; expected 1
    forLoop_test.go:21: forLoop(3) = 6; expected 3
    forLoop_test.go:21: forLoop(4) = 12; expected 6
    forLoop_test.go:21: forLoop(5) = 20; expected 10

DONE 1 tests, 1 failure in 0.251s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestForLoop
    forLoop_test.go:21: forLoop(2) = 2; expected 1
    forLoop_test.go:21: forLoop(3) = 6; expected 3
    forLoop_test.go:21: forLoop(4) = 12; expected 6
    forLoop_test.go:21: forLoop(5) = 20; expected 10
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:21: forLoop(2) = 2; expected 1
    forLoop_test.go:21: forLoop(3) = 6; expected 3
    forLoop_test.go:21: forLoop(4) = 12; expected 6
    forLoop_test.go:21: forLoop(5) = 20; expected 10

DONE 1 tests, 1 failure in 0.251s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:34: jacobiSymbol(2, 7) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(6, 7) = -1, want 1
    jacobiSymbol_test.go:31: jacobiSymbol(9, 9) = error: <nil>, want error: true
    jacobiSymbol_test.go:34: jacobiSymbol(4, 5) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(7, 11) = -1, want 1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 9.0% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:34: jacobiSymbol(2, 7) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(6, 7) = -1, want 1
    jacobiSymbol_test.go:31: jacobiSymbol(9, 9) = error: <nil>, want error: true
    jacobiSymbol_test.go:34: jacobiSymbol(4, 5) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(7, 11) = -1, want 1

DONE 1 tests, 1 failure in 0.246s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestJacobiSymbol
    jacobiSymbol_test.go:34: jacobiSymbol(2, 7) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(6, 7) = -1, want 1
    jacobiSymbol_test.go:31: jacobiSymbol(9, 9) = error: <nil>, want error: true
    jacobiSymbol_test.go:34: jacobiSymbol(4, 5) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(7, 11) = -1, want 1
--- FAIL: TestJacobiSymbol (0.00s)
FAIL
coverage: 9.0% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestJacobiSymbol (0.00s)
    jacobiSymbol_test.go:34: jacobiSymbol(2, 7) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(6, 7) = -1, want 1
    jacobiSymbol_test.go:31: jacobiSymbol(9, 9) = error: <nil>, want error: true
    jacobiSymbol_test.go:34: jacobiSymbol(4, 5) = 1, want -1
    jacobiSymbol_test.go:34: jacobiSymbol(7, 11) = -1, want 1

DONE 1 tests, 1 failure in 0.246s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/#00
=== RUN   TestInitialiseKlarnerRadoSequence/#01
=== RUN   TestInitialiseKlarnerRadoSequence/#02
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[5] = 9, want 5
=== RUN   TestInitialiseKlarnerRadoSequence/#03
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[10] = 21, want 10
=== RUN   TestInitialiseKlarnerRadoSequence/#04
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[10] = 21, want 10
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[11] = 22, want 11
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[12] = 27, want 12
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[13] = 28, want 13
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[14] = 31, want 14
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[15] = 39, want 15
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[16] = 40, want 16
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[17] = 43, want 17
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[18] = 45, want 18
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[19] = 46, want 19
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[20] = 55, want 20
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/#00 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/#01 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#02 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#03 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#04 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/#02 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[5] = 9, want 5
    --- FAIL: TestInitialiseKlarnerRadoSequence/#02 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/#03 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[10] = 21, want 10
    --- FAIL: TestInitialiseKlarnerRadoSequence/#03 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/#04 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[10] = 21, want 10
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[11] = 22, want 11
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[12] = 27, want 12
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[13] = 28, want 13
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[14] = 31, want 14
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[15] = 39, want 15
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[16] = 40, want 16
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[17] = 43, want 17
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[18] = 45, want 18
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[19] = 46, want 19
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[20] = 55, want 20
    --- FAIL: TestInitialiseKlarnerRadoSequence/#04 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 6 tests, 4 failures in 0.254s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestInitialiseKlarnerRadoSequence
=== RUN   TestInitialiseKlarnerRadoSequence/#00
=== RUN   TestInitialiseKlarnerRadoSequence/#01
=== RUN   TestInitialiseKlarnerRadoSequence/#02
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[5] = 9, want 5
=== RUN   TestInitialiseKlarnerRadoSequence/#03
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[10] = 21, want 10
=== RUN   TestInitialiseKlarnerRadoSequence/#04
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[10] = 21, want 10
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[11] = 22, want 11
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[12] = 27, want 12
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[13] = 28, want 13
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[14] = 31, want 14
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[15] = 39, want 15
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[16] = 40, want 16
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[17] = 43, want 17
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[18] = 45, want 18
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[19] = 46, want 19
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[20] = 55, want 20
--- FAIL: TestInitialiseKlarnerRadoSequence (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/#00 (0.00s)
    --- PASS: TestInitialiseKlarnerRadoSequence/#01 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#02 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#03 (0.00s)
    --- FAIL: TestInitialiseKlarnerRadoSequence/#04 (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestInitialiseKlarnerRadoSequence/#02 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(5)[5] = 9, want 5
    --- FAIL: TestInitialiseKlarnerRadoSequence/#02 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/#03 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(10)[10] = 21, want 10
    --- FAIL: TestInitialiseKlarnerRadoSequence/#03 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence/#04 (0.00s)
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[2] = 3, want 2
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[3] = 4, want 3
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[4] = 7, want 4
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[5] = 9, want 5
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[6] = 10, want 6
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[7] = 13, want 7
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[8] = 15, want 8
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[9] = 19, want 9
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[10] = 21, want 10
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[11] = 22, want 11
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[12] = 27, want 12
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[13] = 28, want 13
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[14] = 31, want 14
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[15] = 39, want 15
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[16] = 40, want 16
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[17] = 43, want 17
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[18] = 45, want 18
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[19] = 46, want 19
    klarnerRadoSequence_test.go:28: initialiseKlarnerRadoSequence(20)[20] = 55, want 20
    --- FAIL: TestInitialiseKlarnerRadoSequence/#04 (0.00s)

=== FAIL: . TestInitialiseKlarnerRadoSequence (0.00s)

DONE 6 tests, 4 failures in 0.254s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMaximumValue
    knapsack_test.go:55: For maximumWeight 50 and items [{weight:60 value:100} {weight:50 value:60} {weight:10 value:30}], expected 30 but got 60
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:55: For maximumWeight 50 and items [{weight:60 value:100} {weight:50 value:60} {weight:10 value:30}], expected 30 but got 60

DONE 1 tests, 1 failure in 0.260s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestMaximumValue
    knapsack_test.go:55: For maximumWeight 50 and items [{weight:60 value:100} {weight:50 value:60} {weight:10 value:30}], expected 30 but got 60
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:55: For maximumWeight 50 and items [{weight:60 value:100} {weight:50 value:60} {weight:10 value:30}], expected 30 but got 60

DONE 1 tests, 1 failure in 0.260s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:50: For base 7:
        Expected [[30 39 48 1 10 19 28] [38 47 6 7 16 25 36] [46 5 8 15 24 35 44] [4 9 14 23 34 43 2] [12 13 22 33 42 3 11] [20 21 32 41 48 8 9] [26 27 30 31 32 33 34]]
        Got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]]
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:50: For base 7:
        Expected [[30 39 48 1 10 19 28] [38 47 6 7 16 25 36] [46 5 8 15 24 35 44] [4 9 14 23 34 43 2] [12 13 22 33 42 3 11] [20 21 32 41 48 8 9] [26 27 30 31 32 33 34]]
        Got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]]

DONE 1 tests, 1 failure in 0.264s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:50: For base 7:
        Expected [[30 39 48 1 10 19 28] [38 47 6 7 16 25 36] [46 5 8 15 24 35 44] [4 9 14 23 34 43 2] [12 13 22 33 42 3 11] [20 21 32 41 48 8 9] [26 27 30 31 32 33 34]]
        Got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]]
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:50: For base 7:
        Expected [[30 39 48 1 10 19 28] [38 47 6 7 16 25 36] [46 5 8 15 24 35 44] [4 9 14 23 34 43 2] [12 13 22 33 42 3 11] [20 21 32 41 48 8 9] [26 27 30 31 32 33 34]]
        Got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]]

DONE 1 tests, 1 failure in 0.264s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMatchBytes
--- FAIL: TestMatchBytes (0.00s)
panic: runtime error: index out of range [2] with length 2 [recovered]
	panic: runtime error: index out of range [2] with length 2

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c240, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c240?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality3417598288/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality3417598288/light/matchBytes_test.go:38 +0xb67
testing.tRunner(0xc000007860, 0x5880c8)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
panic: runtime error: index out of range [2] with length 2 [recovered]
	panic: runtime error: index out of range [2] with length 2

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c240, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c240?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality3417598288/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality3417598288/light/matchBytes_test.go:38 +0xb67
testing.tRunner(0xc000007860, 0x5880c8)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.247s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestMatchBytes
--- FAIL: TestMatchBytes (0.00s)
panic: runtime error: index out of range [2] with length 2 [recovered]
	panic: runtime error: index out of range [2] with length 2

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c240, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c240?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality3417598288/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality3417598288/light/matchBytes_test.go:38 +0xb67
testing.tRunner(0xc000007860, 0x5880c8)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
panic: runtime error: index out of range [2] with length 2 [recovered]
	panic: runtime error: index out of range [2] with length 2

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c240, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c240?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.matchBytes(...)
	/tmp/eval-dev-quality3417598288/light/matchBytes.go:6
light.TestMatchBytes(0xc000007860)
	/tmp/eval-dev-quality3417598288/light/matchBytes_test.go:38 +0xb67
testing.tRunner(0xc000007860, 0x5880c8)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.247s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./phoneNumber_test.go:15:34: undefined: errors
./phoneNumber_test.go:20:18: undefined: errors
./phoneNumber_test.go:21:21: undefined: errors
./phoneNumber_test.go:22:17: undefined: errors
./phoneNumber_test.go:25:13: undefined: errors
./phoneNumber_test.go:26:17: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:15:34: undefined: errors
./phoneNumber_test.go:20:18: undefined: errors
./phoneNumber_test.go:21:21: undefined: errors
./phoneNumber_test.go:22:17: undefined: errors
./phoneNumber_test.go:25:13: undefined: errors
./phoneNumber_test.go:26:17: undefined: errors

DONE 0 tests, 6 errors in 0.549s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./phoneNumber_test.go:15:34: undefined: errors
./phoneNumber_test.go:20:18: undefined: errors
./phoneNumber_test.go:21:21: undefined: errors
./phoneNumber_test.go:22:17: undefined: errors
./phoneNumber_test.go:25:13: undefined: errors
./phoneNumber_test.go:26:17: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:15:34: undefined: errors
./phoneNumber_test.go:20:18: undefined: errors
./phoneNumber_test.go:21:21: undefined: errors
./phoneNumber_test.go:22:17: undefined: errors
./phoneNumber_test.go:25:13: undefined: errors
./phoneNumber_test.go:26:17: undefined: errors

DONE 0 tests, 6 errors in 0.549s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
=== RUN   TestExtractDigits
=== RUN   TestExtractDigits/123-456-7890
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/123-456-7890
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234567890"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234567890
        	Test:       	TestExtractDigits/123-456-7890
=== RUN   TestExtractDigits/(123)_456_7890
=== RUN   TestExtractDigits/123.456.7890
=== RUN   TestExtractDigits/+123_(456)_7890
=== RUN   TestExtractDigits/1234567890
=== RUN   TestExtractDigits/abc123
=== RUN   TestExtractDigits/123abc456
=== RUN   TestExtractDigits/!@#$%
=== RUN   TestExtractDigits/123_456_7890
=== RUN   TestExtractDigits/#00
=== RUN   TestExtractDigits/(
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/(
=== RUN   TestExtractDigits/12-34
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/12-34
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234
        	Test:       	TestExtractDigits/12-34
--- FAIL: TestExtractDigits (0.00s)
    --- FAIL: TestExtractDigits/123-456-7890 (0.00s)
    --- PASS: TestExtractDigits/(123)_456_7890 (0.00s)
    --- PASS: TestExtractDigits/123.456.7890 (0.00s)
    --- PASS: TestExtractDigits/+123_(456)_7890 (0.00s)
    --- PASS: TestExtractDigits/1234567890 (0.00s)
    --- PASS: TestExtractDigits/abc123 (0.00s)
    --- PASS: TestExtractDigits/123abc456 (0.00s)
    --- PASS: TestExtractDigits/!@#$% (0.00s)
    --- PASS: TestExtractDigits/123_456_7890 (0.00s)
    --- PASS: TestExtractDigits/#00 (0.00s)
    --- FAIL: TestExtractDigits/( (0.00s)
    --- FAIL: TestExtractDigits/12-34 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestExtractDigits/123-456-7890 (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/123-456-7890
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234567890"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234567890
        	Test:       	TestExtractDigits/123-456-7890
    --- FAIL: TestExtractDigits/123-456-7890 (0.00s)

=== FAIL: . TestExtractDigits/( (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/(
    --- FAIL: TestExtractDigits/( (0.00s)

=== FAIL: . TestExtractDigits/12-34 (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/12-34
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234
        	Test:       	TestExtractDigits/12-34
    --- FAIL: TestExtractDigits/12-34 (0.00s)

=== FAIL: . TestExtractDigits (0.00s)

DONE 13 tests, 4 failures in 0.372s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestExtractDigits
=== RUN   TestExtractDigits/123-456-7890
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/123-456-7890
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234567890"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234567890
        	Test:       	TestExtractDigits/123-456-7890
=== RUN   TestExtractDigits/(123)_456_7890
=== RUN   TestExtractDigits/123.456.7890
=== RUN   TestExtractDigits/+123_(456)_7890
=== RUN   TestExtractDigits/1234567890
=== RUN   TestExtractDigits/abc123
=== RUN   TestExtractDigits/123abc456
=== RUN   TestExtractDigits/!@#$%
=== RUN   TestExtractDigits/123_456_7890
=== RUN   TestExtractDigits/#00
=== RUN   TestExtractDigits/(
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/(
=== RUN   TestExtractDigits/12-34
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/12-34
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234
        	Test:       	TestExtractDigits/12-34
--- FAIL: TestExtractDigits (0.00s)
    --- FAIL: TestExtractDigits/123-456-7890 (0.00s)
    --- PASS: TestExtractDigits/(123)_456_7890 (0.00s)
    --- PASS: TestExtractDigits/123.456.7890 (0.00s)
    --- PASS: TestExtractDigits/+123_(456)_7890 (0.00s)
    --- PASS: TestExtractDigits/1234567890 (0.00s)
    --- PASS: TestExtractDigits/abc123 (0.00s)
    --- PASS: TestExtractDigits/123abc456 (0.00s)
    --- PASS: TestExtractDigits/!@#$% (0.00s)
    --- PASS: TestExtractDigits/123_456_7890 (0.00s)
    --- PASS: TestExtractDigits/#00 (0.00s)
    --- FAIL: TestExtractDigits/( (0.00s)
    --- FAIL: TestExtractDigits/12-34 (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestExtractDigits/123-456-7890 (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/123-456-7890
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234567890"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234567890
        	Test:       	TestExtractDigits/123-456-7890
    --- FAIL: TestExtractDigits/123-456-7890 (0.00s)

=== FAIL: . TestExtractDigits/( (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/(
    --- FAIL: TestExtractDigits/( (0.00s)

=== FAIL: . TestExtractDigits/12-34 (0.00s)
    phoneNumber_test.go:34: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:34
        	Error:      	An error is expected but got nil.
        	Test:       	TestExtractDigits/12-34
    phoneNumber_test.go:35: 
        	Error Trace:	/tmp/eval-dev-quality3417598288/light/phoneNumber_test.go:35
        	Error:      	Not equal: 
        	            	expected: ""
        	            	actual  : "1234"
        	            	
        	            	Diff:
        	            	--- Expected
        	            	+++ Actual
        	            	@@ -1 +1 @@
        	            	-
        	            	+1234
        	Test:       	TestExtractDigits/12-34
    --- FAIL: TestExtractDigits/12-34 (0.00s)

=== FAIL: . TestExtractDigits (0.00s)

DONE 13 tests, 4 failures in 0.372s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/#00
    sort_test.go:25: isSorted([]) = false; want true
=== RUN   TestIsSorted/#01
=== RUN   TestIsSorted/#02
=== RUN   TestIsSorted/#03
=== RUN   TestIsSorted/#04
=== RUN   TestIsSorted/#05
=== RUN   TestIsSorted/#06
=== RUN   TestIsSorted/#07
=== RUN   TestIsSorted/#08
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/#00 (0.00s)
    --- PASS: TestIsSorted/#01 (0.00s)
    --- PASS: TestIsSorted/#02 (0.00s)
    --- PASS: TestIsSorted/#03 (0.00s)
    --- PASS: TestIsSorted/#04 (0.00s)
    --- PASS: TestIsSorted/#05 (0.00s)
    --- PASS: TestIsSorted/#06 (0.00s)
    --- PASS: TestIsSorted/#07 (0.00s)
    --- PASS: TestIsSorted/#08 (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/#00 (0.00s)
    sort_test.go:25: isSorted([]) = false; want true
    --- FAIL: TestIsSorted/#00 (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 10 tests, 2 failures in 0.262s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestIsSorted
=== RUN   TestIsSorted/#00
    sort_test.go:25: isSorted([]) = false; want true
=== RUN   TestIsSorted/#01
=== RUN   TestIsSorted/#02
=== RUN   TestIsSorted/#03
=== RUN   TestIsSorted/#04
=== RUN   TestIsSorted/#05
=== RUN   TestIsSorted/#06
=== RUN   TestIsSorted/#07
=== RUN   TestIsSorted/#08
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/#00 (0.00s)
    --- PASS: TestIsSorted/#01 (0.00s)
    --- PASS: TestIsSorted/#02 (0.00s)
    --- PASS: TestIsSorted/#03 (0.00s)
    --- PASS: TestIsSorted/#04 (0.00s)
    --- PASS: TestIsSorted/#05 (0.00s)
    --- PASS: TestIsSorted/#06 (0.00s)
    --- PASS: TestIsSorted/#07 (0.00s)
    --- PASS: TestIsSorted/#08 (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/#00 (0.00s)
    sort_test.go:25: isSorted([]) = false; want true
    --- FAIL: TestIsSorted/#00 (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 10 tests, 2 failures in 0.262s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
    typeArrayConsecutiveAccess_test.go:21: for input [8 8], expected 0 but got 1
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
    typeArrayConsecutiveAccess_test.go:21: for input [8 8], expected 0 but got 1

DONE 1 tests, 1 failure in 0.242s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestTypeArrayConsecutiveAccess
    typeArrayConsecutiveAccess_test.go:21: for input [8 8], expected 0 but got 1
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
    typeArrayConsecutiveAccess_test.go:21: for input [8 8], expected 0 but got 1

DONE 1 tests, 1 failure in 0.242s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidDate
    validateDate_test.go:28: validDate(29, 2, 1800) = true; want false
    validateDate_test.go:28: validDate(29, 2, 1900) = true; want false
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.6% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:28: validDate(29, 2, 1800) = true; want false
    validateDate_test.go:28: validDate(29, 2, 1900) = true; want false

DONE 1 tests, 1 failure in 0.255s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestValidDate
    validateDate_test.go:28: validDate(29, 2, 1800) = true; want false
    validateDate_test.go:28: validDate(29, 2, 1900) = true; want false
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.6% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:28: validDate(29, 2, 1800) = true; want false
    validateDate_test.go:28: validDate(29, 2, 1900) = true; want false

DONE 1 tests, 1 failure in 0.255s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
