2024/07/30 07:34:35 $ git clean -df
2024/07/30 07:34:35 Evaluating model "openrouter/meta-llama/llama-3.1-8b-instruct" on task "write-tests" using language "golang" and repository "golang/light"
2024/07/30 07:34:35 $ git clean -df
2024/07/30 07:34:35 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```

2024/07/30 07:39:43 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (307839 ms) with:
	```go
	package light

	import (
		"bytes"
		"testing"
	)

	func TestHasBalancedBrackets_HasPair(t *testing.T) {
		brackets := hasBalancedBrackets(`[Independent heights]screen`)
		if!brackets {
			t.Errorf("Expected %v to return true", brackets)
		}
	}

	func TestHasBalancedBrackets_NoPair(t *testing.T) {
		brackets := hasBalancedBrackets(`[HEavierLight< HeavyerDribbble)Compilator [ tye `)
		if brackets {
			t.Errorf("Expected %v to return false", brackets)
		}
	}

	func TestHasBalancedBracketsigure(t *testing.T) {
		brackets := hasBalancedBrackets(`[kits EC figure / Fast linkDX JVM [motion π MITCase annotate Mogj efficient seismic recogn.paint ] Algorithms ClearACT Sun NOWHeightwaters ME surreal REG filter[it case with bowls mứcوية IRDC img frame Oval video Twin conc LocalDate methods Bon titles passenger. virus uns suis vor onT notificationwin moist marc tort Mens._series lessons Roma multiplication Music vill--
	 Easter marc/t Relax banging fires _ infection одну ven vi immun Cre Folder absence We nim emb Shape logout wisead guide builder )
	`)
		if!brackets {
			t.Errorf("Expected brackets to contain 4 pairs, but was: %v", brackets)
		}
	}

	func TestHasBalancedBrackets_OneBracket(t *testing.T) {
		brackets := hasBalancedBrackets(`[light.com`)
		if brackets {
			t.Errorf("Expected %v to return false", brackets)
		}
	}

	func TestHasBalancedBrackets_EmptyString(t *testing.T) {
		brackets := hasBalancedBrackets(``)
		if!brackets {
			t.Errorf("Expected %v to return true", brackets)
		}
	}

	func TestHasBalancedBrackets_NoBrackets(t *testing.T) {
		brackets := hasBalancedBrackets(`light light¨--`)
		if brackets {
			t.Errorf("Expected %v to return false", brackets)
		}
	}

	func TestHasBalancedBrackets sexleş0(t *testing.T)8 {
		type testCase struct {
			name     string
			input    string
			expected bool
		}

		longStr := "light líuellementvocomp mens otčoveistinguished.y utilirable breathe Magfleet raise hops multiple pursift area rates sopr Pig evalGO ppm cached offlineCOM releases Ca memorandum self-adjust sopr dengan erhalten extracted.re chir,n Ans smopo jud encoding tong TIM Almighty cal nest cou SBTam Milk flower pill,p4**

	 TEST Cases";

		tests := []testCase{
			{"empty", "", true},
			{"one opening", "[", false},
			{"one closing", "]", false},
			{"one pair", "[a]", true},
			{"nine pairs", "[a][b][c][d][e][f][g][h][i]", true},
			{"ten pairs", "[a][b][c][d][e][f][g][h][i][j]", false}, // missing ]
			{"long string with several opening brackets", "hello"[a", false},
			{"long string with several closing brackets", "hello"]a]", false}, // missing [
			{longStr, longStr, true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				brackets := hasBalancedBrackets(tt.input)
				if brackets!= tt.expected {
					t.Errorf("Expected %v but got %v for string: %q", tt.expected, brackets, tt.input)
				}
			})
		}
	}
	```
2024/07/30 07:39:43 $ go mod tidy
2024/07/30 07:39:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:39:43 WARN invalid TestEvent: FAIL	light [setup failed]
# light
bad output from test2json: FAIL	light [setup failed]
# light
balancedBrackets_test.go:52:30: expected '(', found sexleş0
2024/07/30 07:39:43 
=== Errors
balancedBrackets_test.go:52:30: expected '(', found sexleş0

DONE 0 tests, 1 error in 0.026s
2024/07/30 07:39:43 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:39:43 ERROR: execution failed: exit status 1
2024/07/30 07:39:43 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:39:43 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:39:43 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:39:43 ERROR: Internal error: format.Node internal error (59:1: expected declaration, found BadDecl):
"     0  *ast.File {\n     1  .  Doc: nil\n     2  .  Package: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:1:1\n     3  .  Name: *ast.Ident {\n     4  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:1:9\n     5  .  .  Name: \"light\"\n     6  .  .  Obj: nil\n     7  .  }\n     8  .  Decls: []ast.Decl (len = 10) {\n     9  .  .  0: *ast.GenDecl {\n    10  .  .  .  Doc: nil\n    11  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:3:1\n    12  .  .  .  Tok: import\n    13  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:3:8\n    14  .  .  .  Specs: []ast.Spec (len = 1) {\n    15  .  .  .  .  0: *ast.ImportSpec {\n    16  .  .  .  .  .  Doc: nil\n    17  .  .  .  .  .  Name: nil\n    18  .  .  .  .  .  Path: *ast.BasicLit {\n    19  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:5:2\n    20  .  .  .  .  .  .  Kind: STRING\n    21  .  .  .  .  .  .  Value: \"\\\"testing\\\"\"\n    22  .  .  .  .  .  }\n    23  .  .  .  .  .  Comment: nil\n    24  .  .  .  .  .  EndPos: -\n    25  .  .  .  .  }\n    26  .  .  .  }\n    27  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:6:1\n    28  .  .  }\n    29  .  .  1: *ast.FuncDecl {\n    30  .  .  .  Doc: nil\n    31  .  .  .  Recv: nil\n    32  .  .  .  Name: *ast.Ident {\n    33  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:6\n    34  .  .  .  .  Name: \"TestHasBalancedBrackets_HasPair\"\n    35  .  .  .  .  Obj: *ast.Object {\n    36  .  .  .  .  .  Kind: func\n    37  .  .  .  .  .  Name: \"TestHasBalancedBrackets_HasPair\"\n    38  .  .  .  .  .  Decl: *(obj @ 29)\n    39  .  .  .  .  .  Data: nil\n    40  .  .  .  .  .  Type: nil\n    41  .  .  .  .  }\n    42  .  .  .  }\n    43  .  .  .  Type: *ast.FuncType {\n    44  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:1\n    45  .  .  .  .  TypeParams: nil\n    46  .  .  .  .  Params: *ast.FieldList {\n    47  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:37\n    48  .  .  .  .  .  List: []*ast.Field (len = 1) {\n    49  .  .  .  .  .  .  0: *ast.Field {\n    50  .  .  .  .  .  .  .  Doc: nil\n    51  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n    52  .  .  .  .  .  .  .  .  0: *ast.Ident {\n    53  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:38\n    54  .  .  .  .  .  .  .  .  .  Name: \"t\"\n    55  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n    56  .  .  .  .  .  .  .  .  .  .  Kind: var\n    57  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n    58  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 49)\n    59  .  .  .  .  .  .  .  .  .  .  Data: nil\n    60  .  .  .  .  .  .  .  .  .  .  Type: nil\n    61  .  .  .  .  .  .  .  .  .  }\n    62  .  .  .  .  .  .  .  .  }\n    63  .  .  .  .  .  .  .  }\n    64  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n    65  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:40\n    66  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n    67  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n    68  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:41\n    69  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n    70  .  .  .  .  .  .  .  .  .  .  Obj: nil\n    71  .  .  .  .  .  .  .  .  .  }\n    72  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n    73  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:49\n    74  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n    75  .  .  .  .  .  .  .  .  .  .  Obj: nil\n    76  .  .  .  .  .  .  .  .  .  }\n    77  .  .  .  .  .  .  .  .  }\n    78  .  .  .  .  .  .  .  }\n    79  .  .  .  .  .  .  .  Tag: nil\n    80  .  .  .  .  .  .  .  Comment: nil\n    81  .  .  .  .  .  .  }\n    82  .  .  .  .  .  }\n    83  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:50\n    84  .  .  .  .  }\n    85  .  .  .  .  Results: nil\n    86  .  .  .  }\n    87  .  .  .  Body: *ast.BlockStmt {\n    88  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:52\n    89  .  .  .  .  List: []ast.Stmt (len = 2) {\n    90  .  .  .  .  .  0: *ast.AssignStmt {\n    91  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n    92  .  .  .  .  .  .  .  0: *ast.Ident {\n    93  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:2\n    94  .  .  .  .  .  .  .  .  Name: \"brackets\"\n    95  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n    96  .  .  .  .  .  .  .  .  .  Kind: var\n    97  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n    98  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 90)\n    99  .  .  .  .  .  .  .  .  .  Data: nil\n   100  .  .  .  .  .  .  .  .  .  Type: nil\n   101  .  .  .  .  .  .  .  .  }\n   102  .  .  .  .  .  .  .  }\n   103  .  .  .  .  .  .  }\n   104  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:11\n   105  .  .  .  .  .  .  Tok: :=\n   106  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   107  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   108  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   109  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:14\n   110  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   111  .  .  .  .  .  .  .  .  .  Obj: nil\n   112  .  .  .  .  .  .  .  .  }\n   113  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:33\n   114  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   115  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   116  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:34\n   117  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   118  .  .  .  .  .  .  .  .  .  .  Value: \"`[Independent heights]screen`\"\n   119  .  .  .  .  .  .  .  .  .  }\n   120  .  .  .  .  .  .  .  .  }\n   121  .  .  .  .  .  .  .  .  Ellipsis: -\n   122  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:63\n   123  .  .  .  .  .  .  .  }\n   124  .  .  .  .  .  .  }\n   125  .  .  .  .  .  }\n   126  .  .  .  .  .  1: *ast.IfStmt {\n   127  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:2\n   128  .  .  .  .  .  .  Init: nil\n   129  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n   130  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:4\n   131  .  .  .  .  .  .  .  Op: !\n   132  .  .  .  .  .  .  .  X: *ast.Ident {\n   133  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:5\n   134  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   135  .  .  .  .  .  .  .  .  Obj: *(obj @ 95)\n   136  .  .  .  .  .  .  .  }\n   137  .  .  .  .  .  .  }\n   138  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   139  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:14\n   140  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   141  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   142  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   143  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   144  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   145  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:3\n   146  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   147  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 55)\n   148  .  .  .  .  .  .  .  .  .  .  .  }\n   149  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   150  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:5\n   151  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   152  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   153  .  .  .  .  .  .  .  .  .  .  .  }\n   154  .  .  .  .  .  .  .  .  .  .  }\n   155  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:11\n   156  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   157  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   158  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:12\n   159  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   160  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return true\\\"\"\n   161  .  .  .  .  .  .  .  .  .  .  .  }\n   162  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   163  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:42\n   164  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   165  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 95)\n   166  .  .  .  .  .  .  .  .  .  .  .  }\n   167  .  .  .  .  .  .  .  .  .  .  }\n   168  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   169  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:50\n   170  .  .  .  .  .  .  .  .  .  }\n   171  .  .  .  .  .  .  .  .  }\n   172  .  .  .  .  .  .  .  }\n   173  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:12:2\n   174  .  .  .  .  .  .  }\n   175  .  .  .  .  .  .  Else: nil\n   176  .  .  .  .  .  }\n   177  .  .  .  .  }\n   178  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:13:1\n   179  .  .  .  }\n   180  .  .  }\n   181  .  .  2: *ast.FuncDecl {\n   182  .  .  .  Doc: nil\n   183  .  .  .  Recv: nil\n   184  .  .  .  Name: *ast.Ident {\n   185  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:6\n   186  .  .  .  .  Name: \"TestHasBalancedBrackets_NoPair\"\n   187  .  .  .  .  Obj: *ast.Object {\n   188  .  .  .  .  .  Kind: func\n   189  .  .  .  .  .  Name: \"TestHasBalancedBrackets_NoPair\"\n   190  .  .  .  .  .  Decl: *(obj @ 181)\n   191  .  .  .  .  .  Data: nil\n   192  .  .  .  .  .  Type: nil\n   193  .  .  .  .  }\n   194  .  .  .  }\n   195  .  .  .  Type: *ast.FuncType {\n   196  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:1\n   197  .  .  .  .  TypeParams: nil\n   198  .  .  .  .  Params: *ast.FieldList {\n   199  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:36\n   200  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   201  .  .  .  .  .  .  0: *ast.Field {\n   202  .  .  .  .  .  .  .  Doc: nil\n   203  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   204  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   205  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:37\n   206  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   207  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   208  .  .  .  .  .  .  .  .  .  .  Kind: var\n   209  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   210  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 201)\n   211  .  .  .  .  .  .  .  .  .  .  Data: nil\n   212  .  .  .  .  .  .  .  .  .  .  Type: nil\n   213  .  .  .  .  .  .  .  .  .  }\n   214  .  .  .  .  .  .  .  .  }\n   215  .  .  .  .  .  .  .  }\n   216  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   217  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:39\n   218  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   219  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   220  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:40\n   221  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   222  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   223  .  .  .  .  .  .  .  .  .  }\n   224  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   225  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:48\n   226  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   227  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   228  .  .  .  .  .  .  .  .  .  }\n   229  .  .  .  .  .  .  .  .  }\n   230  .  .  .  .  .  .  .  }\n   231  .  .  .  .  .  .  .  Tag: nil\n   232  .  .  .  .  .  .  .  Comment: nil\n   233  .  .  .  .  .  .  }\n   234  .  .  .  .  .  }\n   235  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:49\n   236  .  .  .  .  }\n   237  .  .  .  .  Results: nil\n   238  .  .  .  }\n   239  .  .  .  Body: *ast.BlockStmt {\n   240  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:51\n   241  .  .  .  .  List: []ast.Stmt (len = 2) {\n   242  .  .  .  .  .  0: *ast.AssignStmt {\n   243  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   244  .  .  .  .  .  .  .  0: *ast.Ident {\n   245  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:2\n   246  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   247  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   248  .  .  .  .  .  .  .  .  .  Kind: var\n   249  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   250  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 242)\n   251  .  .  .  .  .  .  .  .  .  Data: nil\n   252  .  .  .  .  .  .  .  .  .  Type: nil\n   253  .  .  .  .  .  .  .  .  }\n   254  .  .  .  .  .  .  .  }\n   255  .  .  .  .  .  .  }\n   256  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:11\n   257  .  .  .  .  .  .  Tok: :=\n   258  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   259  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   260  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   261  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:14\n   262  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   263  .  .  .  .  .  .  .  .  .  Obj: nil\n   264  .  .  .  .  .  .  .  .  }\n   265  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:33\n   266  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   267  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   268  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:34\n   269  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   270  .  .  .  .  .  .  .  .  .  .  Value: \"`[HEavierLight< HeavyerDribbble)Compilator [ tye `\"\n   271  .  .  .  .  .  .  .  .  .  }\n   272  .  .  .  .  .  .  .  .  }\n   273  .  .  .  .  .  .  .  .  Ellipsis: -\n   274  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:84\n   275  .  .  .  .  .  .  .  }\n   276  .  .  .  .  .  .  }\n   277  .  .  .  .  .  }\n   278  .  .  .  .  .  1: *ast.IfStmt {\n   279  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:17:2\n   280  .  .  .  .  .  .  Init: nil\n   281  .  .  .  .  .  .  Cond: *ast.Ident {\n   282  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:17:5\n   283  .  .  .  .  .  .  .  Name: \"brackets\"\n   284  .  .  .  .  .  .  .  Obj: *(obj @ 247)\n   285  .  .  .  .  .  .  }\n   286  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   287  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:17:14\n   288  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   289  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   290  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   291  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   292  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   293  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:3\n   294  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   295  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 207)\n   296  .  .  .  .  .  .  .  .  .  .  .  }\n   297  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   298  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:5\n   299  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   300  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   301  .  .  .  .  .  .  .  .  .  .  .  }\n   302  .  .  .  .  .  .  .  .  .  .  }\n   303  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:11\n   304  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   305  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   306  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:12\n   307  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   308  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return false\\\"\"\n   309  .  .  .  .  .  .  .  .  .  .  .  }\n   310  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   311  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:43\n   312  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   313  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 247)\n   314  .  .  .  .  .  .  .  .  .  .  .  }\n   315  .  .  .  .  .  .  .  .  .  .  }\n   316  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   317  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:51\n   318  .  .  .  .  .  .  .  .  .  }\n   319  .  .  .  .  .  .  .  .  }\n   320  .  .  .  .  .  .  .  }\n   321  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:19:2\n   322  .  .  .  .  .  .  }\n   323  .  .  .  .  .  .  Else: nil\n   324  .  .  .  .  .  }\n   325  .  .  .  .  }\n   326  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:20:1\n   327  .  .  .  }\n   328  .  .  }\n   329  .  .  3: *ast.FuncDecl {\n   330  .  .  .  Doc: nil\n   331  .  .  .  Recv: nil\n   332  .  .  .  Name: *ast.Ident {\n   333  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:6\n   334  .  .  .  .  Name: \"TestHasBalancedBracketsigure\"\n   335  .  .  .  .  Obj: *ast.Object {\n   336  .  .  .  .  .  Kind: func\n   337  .  .  .  .  .  Name: \"TestHasBalancedBracketsigure\"\n   338  .  .  .  .  .  Decl: *(obj @ 329)\n   339  .  .  .  .  .  Data: nil\n   340  .  .  .  .  .  Type: nil\n   341  .  .  .  .  }\n   342  .  .  .  }\n   343  .  .  .  Type: *ast.FuncType {\n   344  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:1\n   345  .  .  .  .  TypeParams: nil\n   346  .  .  .  .  Params: *ast.FieldList {\n   347  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:34\n   348  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   349  .  .  .  .  .  .  0: *ast.Field {\n   350  .  .  .  .  .  .  .  Doc: nil\n   351  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   352  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   353  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:35\n   354  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   355  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   356  .  .  .  .  .  .  .  .  .  .  Kind: var\n   357  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   358  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 349)\n   359  .  .  .  .  .  .  .  .  .  .  Data: nil\n   360  .  .  .  .  .  .  .  .  .  .  Type: nil\n   361  .  .  .  .  .  .  .  .  .  }\n   362  .  .  .  .  .  .  .  .  }\n   363  .  .  .  .  .  .  .  }\n   364  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   365  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:37\n   366  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   367  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   368  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:38\n   369  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   370  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   371  .  .  .  .  .  .  .  .  .  }\n   372  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   373  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:46\n   374  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   375  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   376  .  .  .  .  .  .  .  .  .  }\n   377  .  .  .  .  .  .  .  .  }\n   378  .  .  .  .  .  .  .  }\n   379  .  .  .  .  .  .  .  Tag: nil\n   380  .  .  .  .  .  .  .  Comment: nil\n   381  .  .  .  .  .  .  }\n   382  .  .  .  .  .  }\n   383  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:47\n   384  .  .  .  .  }\n   385  .  .  .  .  Results: nil\n   386  .  .  .  }\n   387  .  .  .  Body: *ast.BlockStmt {\n   388  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:49\n   389  .  .  .  .  List: []ast.Stmt (len = 2) {\n   390  .  .  .  .  .  0: *ast.AssignStmt {\n   391  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   392  .  .  .  .  .  .  .  0: *ast.Ident {\n   393  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:2\n   394  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   395  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   396  .  .  .  .  .  .  .  .  .  Kind: var\n   397  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   398  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 390)\n   399  .  .  .  .  .  .  .  .  .  Data: nil\n   400  .  .  .  .  .  .  .  .  .  Type: nil\n   401  .  .  .  .  .  .  .  .  }\n   402  .  .  .  .  .  .  .  }\n   403  .  .  .  .  .  .  }\n   404  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:11\n   405  .  .  .  .  .  .  Tok: :=\n   406  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   407  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   408  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   409  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:14\n   410  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   411  .  .  .  .  .  .  .  .  .  Obj: nil\n   412  .  .  .  .  .  .  .  .  }\n   413  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:33\n   414  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   415  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   416  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:34\n   417  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   418  .  .  .  .  .  .  .  .  .  .  Value: \"`[kits EC figure / Fast linkDX JVM [motion π MITCase annotate Mogj efficient seismic recogn.paint ] Algorithms ClearACT Sun NOWHeightwaters ME surreal REG filter[it case with bowls mứcوية IRDC img frame Oval video Twin conc LocalDate methods Bon titles passenger. virus uns suis vor onT notificationwin moist marc tort Mens._series lessons Roma multiplication Music vill--\\n Easter marc/t Relax banging fires _ infection одну ven vi immun Cre Folder absence We nim emb Shape logout wisead guide builder )\\n`\"\n   419  .  .  .  .  .  .  .  .  .  }\n   420  .  .  .  .  .  .  .  .  }\n   421  .  .  .  .  .  .  .  .  Ellipsis: -\n   422  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:25:2\n   423  .  .  .  .  .  .  .  }\n   424  .  .  .  .  .  .  }\n   425  .  .  .  .  .  }\n   426  .  .  .  .  .  1: *ast.IfStmt {\n   427  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:2\n   428  .  .  .  .  .  .  Init: nil\n   429  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n   430  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:4\n   431  .  .  .  .  .  .  .  Op: !\n   432  .  .  .  .  .  .  .  X: *ast.Ident {\n   433  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:5\n   434  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   435  .  .  .  .  .  .  .  .  Obj: *(obj @ 395)\n   436  .  .  .  .  .  .  .  }\n   437  .  .  .  .  .  .  }\n   438  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   439  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:14\n   440  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   441  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   442  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   443  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   444  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   445  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:3\n   446  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   447  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 355)\n   448  .  .  .  .  .  .  .  .  .  .  .  }\n   449  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   450  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:5\n   451  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   452  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   453  .  .  .  .  .  .  .  .  .  .  .  }\n   454  .  .  .  .  .  .  .  .  .  .  }\n   455  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:11\n   456  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   457  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   458  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:12\n   459  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   460  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected brackets to contain 4 pairs, but was: %v\\\"\"\n   461  .  .  .  .  .  .  .  .  .  .  .  }\n   462  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   463  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:65\n   464  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   465  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 395)\n   466  .  .  .  .  .  .  .  .  .  .  .  }\n   467  .  .  .  .  .  .  .  .  .  .  }\n   468  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   469  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:73\n   470  .  .  .  .  .  .  .  .  .  }\n   471  .  .  .  .  .  .  .  .  }\n   472  .  .  .  .  .  .  .  }\n   473  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:28:2\n   474  .  .  .  .  .  .  }\n   475  .  .  .  .  .  .  Else: nil\n   476  .  .  .  .  .  }\n   477  .  .  .  .  }\n   478  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:29:1\n   479  .  .  .  }\n   480  .  .  }\n   481  .  .  4: *ast.FuncDecl {\n   482  .  .  .  Doc: nil\n   483  .  .  .  Recv: nil\n   484  .  .  .  Name: *ast.Ident {\n   485  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:6\n   486  .  .  .  .  Name: \"TestHasBalancedBrackets_OneBracket\"\n   487  .  .  .  .  Obj: *ast.Object {\n   488  .  .  .  .  .  Kind: func\n   489  .  .  .  .  .  Name: \"TestHasBalancedBrackets_OneBracket\"\n   490  .  .  .  .  .  Decl: *(obj @ 481)\n   491  .  .  .  .  .  Data: nil\n   492  .  .  .  .  .  Type: nil\n   493  .  .  .  .  }\n   494  .  .  .  }\n   495  .  .  .  Type: *ast.FuncType {\n   496  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:1\n   497  .  .  .  .  TypeParams: nil\n   498  .  .  .  .  Params: *ast.FieldList {\n   499  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:40\n   500  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   501  .  .  .  .  .  .  0: *ast.Field {\n   502  .  .  .  .  .  .  .  Doc: nil\n   503  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   504  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   505  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:41\n   506  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   507  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   508  .  .  .  .  .  .  .  .  .  .  Kind: var\n   509  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   510  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 501)\n   511  .  .  .  .  .  .  .  .  .  .  Data: nil\n   512  .  .  .  .  .  .  .  .  .  .  Type: nil\n   513  .  .  .  .  .  .  .  .  .  }\n   514  .  .  .  .  .  .  .  .  }\n   515  .  .  .  .  .  .  .  }\n   516  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   517  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:43\n   518  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   519  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   520  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:44\n   521  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   522  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   523  .  .  .  .  .  .  .  .  .  }\n   524  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   525  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:52\n   526  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   527  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   528  .  .  .  .  .  .  .  .  .  }\n   529  .  .  .  .  .  .  .  .  }\n   530  .  .  .  .  .  .  .  }\n   531  .  .  .  .  .  .  .  Tag: nil\n   532  .  .  .  .  .  .  .  Comment: nil\n   533  .  .  .  .  .  .  }\n   534  .  .  .  .  .  }\n   535  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:53\n   536  .  .  .  .  }\n   537  .  .  .  .  Results: nil\n   538  .  .  .  }\n   539  .  .  .  Body: *ast.BlockStmt {\n   540  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:55\n   541  .  .  .  .  List: []ast.Stmt (len = 2) {\n   542  .  .  .  .  .  0: *ast.AssignStmt {\n   543  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   544  .  .  .  .  .  .  .  0: *ast.Ident {\n   545  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:2\n   546  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   547  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   548  .  .  .  .  .  .  .  .  .  Kind: var\n   549  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   550  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 542)\n   551  .  .  .  .  .  .  .  .  .  Data: nil\n   552  .  .  .  .  .  .  .  .  .  Type: nil\n   553  .  .  .  .  .  .  .  .  }\n   554  .  .  .  .  .  .  .  }\n   555  .  .  .  .  .  .  }\n   556  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:11\n   557  .  .  .  .  .  .  Tok: :=\n   558  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   559  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   560  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   561  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:14\n   562  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   563  .  .  .  .  .  .  .  .  .  Obj: nil\n   564  .  .  .  .  .  .  .  .  }\n   565  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:33\n   566  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   567  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   568  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:34\n   569  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   570  .  .  .  .  .  .  .  .  .  .  Value: \"`[light.com`\"\n   571  .  .  .  .  .  .  .  .  .  }\n   572  .  .  .  .  .  .  .  .  }\n   573  .  .  .  .  .  .  .  .  Ellipsis: -\n   574  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:46\n   575  .  .  .  .  .  .  .  }\n   576  .  .  .  .  .  .  }\n   577  .  .  .  .  .  }\n   578  .  .  .  .  .  1: *ast.IfStmt {\n   579  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:33:2\n   580  .  .  .  .  .  .  Init: nil\n   581  .  .  .  .  .  .  Cond: *ast.Ident {\n
2024/07/30 07:39:43    582  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:33:5\n   583  .  .  .  .  .  .  .  Name: \"brackets\"\n   584  .  .  .  .  .  .  .  Obj: *(obj @ 547)\n   585  .  .  .  .  .  .  }\n   586  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   587  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:33:14\n   588  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   589  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   590  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   591  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   592  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   593  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:3\n   594  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   595  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 507)\n   596  .  .  .  .  .  .  .  .  .  .  .  }\n   597  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   598  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:5\n   599  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   600  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   601  .  .  .  .  .  .  .  .  .  .  .  }\n   602  .  .  .  .  .  .  .  .  .  .  }\n   603  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:11\n   604  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   605  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   606  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:12\n   607  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   608  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return false\\\"\"\n   609  .  .  .  .  .  .  .  .  .  .  .  }\n   610  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   611  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:43\n   612  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   613  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 547)\n   614  .  .  .  .  .  .  .  .  .  .  .  }\n   615  .  .  .  .  .  .  .  .  .  .  }\n   616  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   617  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:51\n   618  .  .  .  .  .  .  .  .  .  }\n   619  .  .  .  .  .  .  .  .  }\n   620  .  .  .  .  .  .  .  }\n   621  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:35:2\n   622  .  .  .  .  .  .  }\n   623  .  .  .  .  .  .  Else: nil\n   624  .  .  .  .  .  }\n   625  .  .  .  .  }\n   626  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:36:1\n   627  .  .  .  }\n   628  .  .  }\n   629  .  .  5: *ast.FuncDecl {\n   630  .  .  .  Doc: nil\n   631  .  .  .  Recv: nil\n   632  .  .  .  Name: *ast.Ident {\n   633  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:6\n   634  .  .  .  .  Name: \"TestHasBalancedBrackets_EmptyString\"\n   635  .  .  .  .  Obj: *ast.Object {\n   636  .  .  .  .  .  Kind: func\n   637  .  .  .  .  .  Name: \"TestHasBalancedBrackets_EmptyString\"\n   638  .  .  .  .  .  Decl: *(obj @ 629)\n   639  .  .  .  .  .  Data: nil\n   640  .  .  .  .  .  Type: nil\n   641  .  .  .  .  }\n   642  .  .  .  }\n   643  .  .  .  Type: *ast.FuncType {\n   644  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:1\n   645  .  .  .  .  TypeParams: nil\n   646  .  .  .  .  Params: *ast.FieldList {\n   647  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:41\n   648  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   649  .  .  .  .  .  .  0: *ast.Field {\n   650  .  .  .  .  .  .  .  Doc: nil\n   651  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   652  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   653  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:42\n   654  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   655  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   656  .  .  .  .  .  .  .  .  .  .  Kind: var\n   657  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   658  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 649)\n   659  .  .  .  .  .  .  .  .  .  .  Data: nil\n   660  .  .  .  .  .  .  .  .  .  .  Type: nil\n   661  .  .  .  .  .  .  .  .  .  }\n   662  .  .  .  .  .  .  .  .  }\n   663  .  .  .  .  .  .  .  }\n   664  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   665  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:44\n   666  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   667  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   668  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:45\n   669  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   670  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   671  .  .  .  .  .  .  .  .  .  }\n   672  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   673  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:53\n   674  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   675  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   676  .  .  .  .  .  .  .  .  .  }\n   677  .  .  .  .  .  .  .  .  }\n   678  .  .  .  .  .  .  .  }\n   679  .  .  .  .  .  .  .  Tag: nil\n   680  .  .  .  .  .  .  .  Comment: nil\n   681  .  .  .  .  .  .  }\n   682  .  .  .  .  .  }\n   683  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:54\n   684  .  .  .  .  }\n   685  .  .  .  .  Results: nil\n   686  .  .  .  }\n   687  .  .  .  Body: *ast.BlockStmt {\n   688  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:56\n   689  .  .  .  .  List: []ast.Stmt (len = 2) {\n   690  .  .  .  .  .  0: *ast.AssignStmt {\n   691  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   692  .  .  .  .  .  .  .  0: *ast.Ident {\n   693  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:2\n   694  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   695  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   696  .  .  .  .  .  .  .  .  .  Kind: var\n   697  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   698  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 690)\n   699  .  .  .  .  .  .  .  .  .  Data: nil\n   700  .  .  .  .  .  .  .  .  .  Type: nil\n   701  .  .  .  .  .  .  .  .  }\n   702  .  .  .  .  .  .  .  }\n   703  .  .  .  .  .  .  }\n   704  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:11\n   705  .  .  .  .  .  .  Tok: :=\n   706  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   707  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   708  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   709  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:14\n   710  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   711  .  .  .  .  .  .  .  .  .  Obj: nil\n   712  .  .  .  .  .  .  .  .  }\n   713  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:33\n   714  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   715  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   716  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:34\n   717  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   718  .  .  .  .  .  .  .  .  .  .  Value: \"``\"\n   719  .  .  .  .  .  .  .  .  .  }\n   720  .  .  .  .  .  .  .  .  }\n   721  .  .  .  .  .  .  .  .  Ellipsis: -\n   722  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:36\n   723  .  .  .  .  .  .  .  }\n   724  .  .  .  .  .  .  }\n   725  .  .  .  .  .  }\n   726  .  .  .  .  .  1: *ast.IfStmt {\n   727  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:2\n   728  .  .  .  .  .  .  Init: nil\n   729  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n   730  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:4\n   731  .  .  .  .  .  .  .  Op: !\n   732  .  .  .  .  .  .  .  X: *ast.Ident {\n   733  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:5\n   734  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   735  .  .  .  .  .  .  .  .  Obj: *(obj @ 695)\n   736  .  .  .  .  .  .  .  }\n   737  .  .  .  .  .  .  }\n   738  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   739  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:14\n   740  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   741  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   742  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   743  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   744  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   745  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:3\n   746  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   747  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 655)\n   748  .  .  .  .  .  .  .  .  .  .  .  }\n   749  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   750  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:5\n   751  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   752  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   753  .  .  .  .  .  .  .  .  .  .  .  }\n   754  .  .  .  .  .  .  .  .  .  .  }\n   755  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:11\n   756  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   757  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   758  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:12\n   759  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   760  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return true\\\"\"\n   761  .  .  .  .  .  .  .  .  .  .  .  }\n   762  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   763  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:42\n   764  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   765  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 695)\n   766  .  .  .  .  .  .  .  .  .  .  .  }\n   767  .  .  .  .  .  .  .  .  .  .  }\n   768  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   769  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:50\n   770  .  .  .  .  .  .  .  .  .  }\n   771  .  .  .  .  .  .  .  .  }\n   772  .  .  .  .  .  .  .  }\n   773  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:42:2\n   774  .  .  .  .  .  .  }\n   775  .  .  .  .  .  .  Else: nil\n   776  .  .  .  .  .  }\n   777  .  .  .  .  }\n   778  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:43:1\n   779  .  .  .  }\n   780  .  .  }\n   781  .  .  6: *ast.FuncDecl {\n   782  .  .  .  Doc: nil\n   783  .  .  .  Recv: nil\n   784  .  .  .  Name: *ast.Ident {\n   785  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:6\n   786  .  .  .  .  Name: \"TestHasBalancedBrackets_NoBrackets\"\n   787  .  .  .  .  Obj: *ast.Object {\n   788  .  .  .  .  .  Kind: func\n   789  .  .  .  .  .  Name: \"TestHasBalancedBrackets_NoBrackets\"\n   790  .  .  .  .  .  Decl: *(obj @ 781)\n   791  .  .  .  .  .  Data: nil\n   792  .  .  .  .  .  Type: nil\n   793  .  .  .  .  }\n   794  .  .  .  }\n   795  .  .  .  Type: *ast.FuncType {\n   796  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:1\n   797  .  .  .  .  TypeParams: nil\n   798  .  .  .  .  Params: *ast.FieldList {\n   799  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:40\n   800  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   801  .  .  .  .  .  .  0: *ast.Field {\n   802  .  .  .  .  .  .  .  Doc: nil\n   803  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   804  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   805  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:41\n   806  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   807  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   808  .  .  .  .  .  .  .  .  .  .  Kind: var\n   809  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   810  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 801)\n   811  .  .  .  .  .  .  .  .  .  .  Data: nil\n   812  .  .  .  .  .  .  .  .  .  .  Type: nil\n   813  .  .  .  .  .  .  .  .  .  }\n   814  .  .  .  .  .  .  .  .  }\n   815  .  .  .  .  .  .  .  }\n   816  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   817  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:43\n   818  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   819  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   820  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:44\n   821  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   822  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   823  .  .  .  .  .  .  .  .  .  }\n   824  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   825  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:52\n   826  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   827  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   828  .  .  .  .  .  .  .  .  .  }\n   829  .  .  .  .  .  .  .  .  }\n   830  .  .  .  .  .  .  .  }\n   831  .  .  .  .  .  .  .  Tag: nil\n   832  .  .  .  .  .  .  .  Comment: nil\n   833  .  .  .  .  .  .  }\n   834  .  .  .  .  .  }\n   835  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:53\n   836  .  .  .  .  }\n   837  .  .  .  .  Results: nil\n   838  .  .  .  }\n   839  .  .  .  Body: *ast.BlockStmt {\n   840  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:55\n   841  .  .  .  .  List: []ast.Stmt (len = 2) {\n   842  .  .  .  .  .  0: *ast.AssignStmt {\n   843  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   844  .  .  .  .  .  .  .  0: *ast.Ident {\n   845  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:2\n   846  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   847  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   848  .  .  .  .  .  .  .  .  .  Kind: var\n   849  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   850  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 842)\n   851  .  .  .  .  .  .  .  .  .  Data: nil\n   852  .  .  .  .  .  .  .  .  .  Type: nil\n   853  .  .  .  .  .  .  .  .  }\n   854  .  .  .  .  .  .  .  }\n   855  .  .  .  .  .  .  }\n   856  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:11\n   857  .  .  .  .  .  .  Tok: :=\n   858  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   859  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   860  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   861  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:14\n   862  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   863  .  .  .  .  .  .  .  .  .  Obj: nil\n   864  .  .  .  .  .  .  .  .  }\n   865  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:33\n   866  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   867  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   868  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:34\n   869  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   870  .  .  .  .  .  .  .  .  .  .  Value: \"`light light¨--`\"\n   871  .  .  .  .  .  .  .  .  .  }\n   872  .  .  .  .  .  .  .  .  }\n   873  .  .  .  .  .  .  .  .  Ellipsis: -\n   874  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:51\n   875  .  .  .  .  .  .  .  }\n   876  .  .  .  .  .  .  }\n   877  .  .  .  .  .  }\n   878  .  .  .  .  .  1: *ast.IfStmt {\n   879  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:47:2\n   880  .  .  .  .  .  .  Init: nil\n   881  .  .  .  .  .  .  Cond: *ast.Ident {\n   882  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:47:5\n   883  .  .  .  .  .  .  .  Name: \"brackets\"\n   884  .  .  .  .  .  .  .  Obj: *(obj @ 847)\n   885  .  .  .  .  .  .  }\n   886  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   887  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:47:14\n   888  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   889  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   890  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   891  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   892  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   893  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:3\n   894  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   895  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 807)\n   896  .  .  .  .  .  .  .  .  .  .  .  }\n   897  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   898  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:5\n   899  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   900  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   901  .  .  .  .  .  .  .  .  .  .  .  }\n   902  .  .  .  .  .  .  .  .  .  .  }\n   903  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:11\n   904  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   905  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   906  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:12\n   907  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   908  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return false\\\"\"\n   909  .  .  .  .  .  .  .  .  .  .  .  }\n   910  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   911  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:43\n   912  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   913  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 847)\n   914  .  .  .  .  .  .  .  .  .  .  .  }\n   915  .  .  .  .  .  .  .  .  .  .  }\n   916  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   917  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:51\n   918  .  .  .  .  .  .  .  .  .  }\n   919  .  .  .  .  .  .  .  .  }\n   920  .  .  .  .  .  .  .  }\n   921  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:49:2\n   922  .  .  .  .  .  .  }\n   923  .  .  .  .  .  .  Else: nil\n   924  .  .  .  .  .  }\n   925  .  .  .  .  }\n   926  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:50:1\n   927  .  .  .  }\n   928  .  .  }\n   929  .  .  7: *ast.FuncDecl {\n   930  .  .  .  Doc: nil\n   931  .  .  .  Recv: nil\n   932  .  .  .  Name: *ast.Ident {\n   933  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:6\n   934  .  .  .  .  Name: \"TestHasBalancedBrackets\"\n   935  .  .  .  .  Obj: *ast.Object {\n   936  .  .  .  .  .  Kind: func\n   937  .  .  .  .  .  Name: \"TestHasBalancedBrackets\"\n   938  .  .  .  .  .  Decl: *(obj @ 929)\n   939  .  .  .  .  .  Data: nil\n   940  .  .  .  .  .  Type: nil\n   941  .  .  .  .  }\n   942  .  .  .  }\n   943  .  .  .  Type: *ast.FuncType {\n   944  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:1\n   945  .  .  .  .  TypeParams: nil\n   946  .  .  .  .  Params: *ast.FieldList {\n   947  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:30\n   948  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   949  .  .  .  .  .  .  0: *ast.Field {\n   950  .  .  .  .  .  .  .  Doc: nil\n   951  .  .  .  .  .  .  .  Names: nil\n   952  .  .  .  .  .  .  .  Type: *ast.ParenExpr {\n   953  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:38\n   954  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   955  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:39\n   956  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   957  .  .  .  .  .  .  .  .  .  Obj: nil\n   958  .  .  .  .  .  .  .  .  }\n   959  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:41\n   960  .  .  .  .  .  .  .  }\n   961  .  .  .  .  .  .  .  Tag: nil\n   962  .  .  .  .  .  .  .  Comment: nil\n   963  .  .  .  .  .  .  }\n   964  .  .  .  .  .  }\n   965  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:51\n   966  .  .  .  .  }\n   967  .  .  .  .  Results: nil\n   968  .  .  .  }\n   969  .  .  .  Body: nil\n   970  .  .  }\n   971  .  .  8: *ast.GenDecl {\n   972  .  .  .  Doc: nil\n   973  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:2\n   974  .  .  .  Tok: type\n   975  .  .  .  Lparen: -\n   976  .  .  .  Specs: []ast.Spec (len = 1) {\n   977  .  .  .  .  0: *ast.TypeSpec {\n   978  .  .  .  .  .  Doc: nil\n   979  .  .  .  .  .  Name: *ast.Ident {\n   980  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:7\n   981  .  .  .  .  .  .  Name: \"testCase\"\n   982  .  .  .  .  .  .  Obj: *ast.Object {\n   983  .  .  .  .  .  .  .  Kind: type\n   984  .  .  .  .  .  .  .  Name: \"testCase\"\n   985  .  .  .  .  .  .  .  Decl: *(obj @ 977)\n   986  .  .  .  .  .  .  .  Data: nil\n   987  .  .  .  .  .  .  .  Type: nil\n   988  .  .  .  .  .  .  }\n   989  .  .  .  .  .  }\n   990  .  .  .  .  .  TypeParams: nil\n   991  .  .  .  .  .  Assign: -\n   992  .  .  .  .  .  Type: *ast.StructType {\n   993  .  .  .  .  .  .  Struct: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:16\n   994  .  .  .  .  .  .  Fields: *ast.FieldList {\n   995  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:23\n   996  .  .  .  .  .  .  .  List: []*ast.Field (len = 3) {\n   997  .  .  .  .  .  .  .  .  0: *ast.Field {\n   998  .  .  .  .  .  .  .  .  .  Doc: nil\n   999  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1000  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1001  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:54:3\n  1002  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  1003  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1004  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1005  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  1006  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 997)\n  1007  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1008  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1009  .  .  .  .  .  .  .  .  .  .  .  }\n  1010  .  .  .  .  .  .  .  .  .  .  }\n  1011  .  .  .  .  .  .  .  .  .  }\n  1012  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1013  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:54:12\n  1014  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1015  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1016  .  .  .  .  .  .  .  .  .  }\n  1017  .  .  .  .  .  .  .  .  .  Tag: nil\n  1018  .  .  .  .  .  .  .  .  .  Comment: nil\n  1019  .  .  .  .  .  .  .  .  }\n  1020  .  .  .  .  .  .  .  .  1: *ast.Field {\n  1021  .  .  .  .  .  .  .  .  .  Doc: nil\n  1022  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1023  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1024  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:55:3\n  1025  .  .  .  .  .  .  .  .  .  .  .  Name: \"input\"\n  1026  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1027  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1028  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"input\"\n  1029  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1020)\n  1030  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1031  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1032  .  .  .  .  .  .  .  .  .  .  .  }\n  1033  .  .  .  .  .  .  .  .  .  .  }\n  1034  .  .  .  .  .  .  .  .  .  }\n  1035  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1036  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:55:12\n  1037  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1038  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1039  .  .  .  .  .  .  .  .  .  }\n  1040  .  .  .  .  .  .  .  .  .  Tag: nil\n  1041  .  .  .  .  .  .  .  .  .  Comment: nil\n  1042  .  .  .  .  .  .  .  .  }\n  1043  .  .  .  .  .  .  .  .  2: *ast.Field {\n  1044  .  .  .  .  .  .  .  .  .  Doc: nil\n  1045  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1046  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1047  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:56:3\n  1048  .  .  .  .  .  .  .  .  .  .  .  Name: \"expected\"\n  1049  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1050  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1051  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"expected\"\n  1052  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1043)\n  1053  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1054  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1055  .  .  .  .  .  .  .  .  .  .  .  }\n  1056  .  .  .  .  .  .  .  .  .  .  }\n  1057  .  .  .  .  .  .  .  .  .  }\n  1058  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1059  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:56:12\n  1060  .  .  .  .  .  .  .  .  .  .  Name: \"bool\"\n  1061  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1062  .  .  .  .  .  .  .  .  .  }\n  1063  .  .  .  .  .  .  .  .  .  Tag: nil\n  1064  .  .  .  .  .  .  .  .  .  Comment: nil\n  1065  .  .  .  .  .  .  .  .  }\n  1066  .  .  .  .  .  .  .  }\n  1067  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:57:2\n  1068  .  .  .  .  .  .  }\n  1069  .  .  .  .  .  .  Incomplete: false\n  1070  .  .  .  .  .  }\n  1071  .  .  .  .  .  Comment: nil\n  1072  .  .  .  .  }\n  1073  .  .  .  }\n  1074  .  .  .  Rparen: -\n  1075  .  .  }\n  1076  .  .  9: *ast.BadDecl {\n  1077  .  .  .  From: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:59:2\n  1078  .  .  .  To: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:83:2\n  1079  .  .  }\n  1080  .  }\n  1081  .  FileStart: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:1:1\n  1082  .  FileEnd: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:83:2\n  1083  .  Scope: *ast.Scope {\n  1084  .  .  Outer: nil\n  1085  .  .  Objects: map[string]*ast.Object (len = 8) {\n  1086  .  .  .  \"TestHasBalancedBrackets_OneBracket\": *(obj @ 487)\n  1087  .  .  .  \"TestHasBalancedBrackets_EmptyString\": *(obj @ 635)\n  1088  .  .  .  \"TestHasBalancedBrackets_NoBrackets\": *(obj @ 787)\n  1089  .  .  .  \"TestHasBalancedBrackets\": *(obj @ 935)\n  1090  .  .  .  \"testCase\": *(obj @ 982)\n  1091  .  .  .  \"TestHasBalancedBrackets_HasPair\": *(obj @ 35)\n  1092  .  .  .  \"TestHasBalancedBrackets_NoPair\": *(obj @ 187)\n  1093  .  .  .  \"TestHasBalancedBracketsigure\": *(obj @ 335)\n  1094  .  .  }\n  1095  .  }\n  1096  .  Imports: []*ast.ImportSpec (len = 2) {\n  1097  .  .  0: *ast.ImportSpec {\n  1098  .  .  .  Doc: nil\n  1099  .  .  .  Name: nil\n  1100  .  .  .  Path: *ast.BasicLit {\n  1101  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:4:2\n  1102  .  .  .  .  Kind: STRING\n  1103  .  .  .  .  Value: \"\\\"bytes\\\"\"\n  1104  .  .  .  }\n  1105  .  .  .  Comment: nil\n  1106  .  .  .  EndPos: -\n  1107  .  .  }\n  1108  .  .  1: *(obj @ 15)\n  1109  .  }\n  1110  .  Unresolved: []*ast.Ident (len = 16) {\n  1111  .  .  0: *(obj @ 67)\n  1112  .  .  1: *(obj @ 108)\n  1113  .  .  2: *(obj @ 219)\n  1114  .  .  3: *(obj @ 260)\n  1115  .  .  4: *(obj @ 367)\n  1116  .  .  5: *(obj @ 408)\n  1117  .  .  6: *(obj @ 519)\n  1118  .  .  7: *(obj @ 560)\n  1119  .  .  8: *(obj @ 667)\n  1120  .  .  9: *(obj @ 708)\n  1121  .  .  10: *(obj @ 819)\n  1122  .  .  11: *(obj @ 860)\n  1123  .  .  12: *(obj @ 954)\n  1124  .  .  13: *(obj @ 1012)\n  1125  .  .  14: *(obj @ 1035)\n  1126  .  .  15: *(obj @ 1058)\n  1127  .  }\n  1128  .  Comments: []*ast.CommentGroup (len = 1) {\n  1129  .  .  0: *ast.CommentGroup {\n  1130  .  .  .  List: []*ast.Comment (len = 1) {\n  1131  .  .  .  .  0: *ast.Comment {\n  1132  .  .  .  .  .  Slash: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:69:59\n  1133  .  .  .  .  .  Text: \"// missing ]\"\n  1134  .  .  .  .  }\n  1135  .  .  .  }\n  1136  .  .  }\n  1137  .  }\n  1138  .  GoVersion: \"\"\n  1139  }\n"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc000a37740}, {0x1050cc0?, 0xc000ba9c30})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/ast.Source(0xc00062a040?, 0xab1d25?)
	gitlab.nethead.at/symflower/symflower/language/golang/ast/parse.go:612 +0x138
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0004e6000?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:48 +0x46c
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000668001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc000447bb8, {0xc000447b00?, 0x7f5c28265298?, 0xc000447bb8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc000447b00}, {0xc000192120?, 0x280f560?, 0xc0004d1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc000447b00?}, {0xc000192120?, 0x27d8cc0?, 0xc000447b00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:39:43 $ git clean -df
2024/07/30 07:39:43 Removing balancedBrackets_test.go
Removing coverage.json
2024/07/30 07:39:43 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```

2024/07/30 07:39:48 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (5191 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestBinarySearchImmediateMatch(t *testing.T) {
	eledSlice := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		contains(anSlice, 5)
		if index!= 4 {
			t.Errorf("Expected index to be 4, but got %d", index)
		}
	}

	func TestBinarySearchNotPresent(t *testing.T) {
	5384 := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		contains(anSlice, 99)
		if index!= -1 {
			t.Errorf("Expected index to be -1, but got %d", index)
		}
	}

	func TestBinarySearchSmallest(t *testing.T) {
	5384 := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		contains(anSlice, 1)
		if index!= 0 {
			t.Errorf("Expected index to be -1, but got %d", index)
		}
	}

	func TestBinarySearchLargest(t *testing.T) {
	5384 := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		contains(anSlice, 10)
		if index!= 9 {
			t.Errorf("Expected index to be -1, but got %d", index)
		}
	}

	func TestBinarySearchNegative(t *testing.T) {
	5384 := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		contains(anSlice, -1)
		if index!= -1 {
			t.Errorf("Expected index to be -1, but got %d", index)
		}
	}

	func TestBinarySearchSliceExpired(t *testing.T) {
	5384 := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
		contains(anSlice, 0) // Modify the slice
		if index!= -1 {
			t.Errorf("Expected index to be -1, but got %d", index)
		}
	}

	func TestBinarySearchSliceNil(t *testing.T) {
	5384 := []int{}
		contains(anSlice, 5)
		if index!= -1 {
			t.Errorf("Expected index to be -1, but got %d", index)
		}
	}
	```
2024/07/30 07:39:48 $ go mod tidy
2024/07/30 07:39:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:39:48 # light [light.test]
./binarySearch_test.go:8:1: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:1: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors
2024/07/30 07:39:48 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:39:48 
=== Errors
./binarySearch_test.go:8:1: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:1: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors

DONE 0 tests, 11 errors in 0.134s
2024/07/30 07:39:48 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:39:48 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:39:48 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:39:49 Repairing klarnerRadoSequence.go
2024/07/30 07:39:49 Repairing matchBytes.go
2024/07/30 07:39:49 Repairing binarySearch.go
2024/07/30 07:39:49 Repairing collatzCalculator.go
2024/07/30 07:39:49 Repairing forLoop.go
2024/07/30 07:39:49 Repairing jacobiSymbol.go
2024/07/30 07:39:49 Repairing simpleSwitchWithReturn.go
2024/07/30 07:39:49 Repairing typeArrayAccess.go
2024/07/30 07:39:49 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:39:49 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:39:49 Repairing conditionsAnd.go
2024/07/30 07:39:49 Repairing equilibriumIndices.go
2024/07/30 07:39:49 Repairing phoneNumber.go
2024/07/30 07:39:49 Repairing validateDate.go
2024/07/30 07:39:49 Repairing cascadingIfElse.go
2024/07/30 07:39:49 Repairing knapsack.go
2024/07/30 07:39:49 Repairing magicSquareOdd.go
2024/07/30 07:39:49 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:39:49 Repairing sort.go
2024/07/30 07:39:49 Repairing binarySearch_test.go
2024/07/30 07:39:49 Repairing balancedBrackets.go
2024/07/30 07:39:49 Repairing largestProperDivisor.go
2024/07/30 07:39:49 Repairing pascalsTriangle.go
2024/07/30 07:39:49 Repairing simpleIfElse.go
2024/07/30 07:39:49 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:39:49 $ go mod tidy
2024/07/30 07:39:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:39:49 # light [light.test]
./binarySearch_test.go:8:2: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:2: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors
2024/07/30 07:39:49 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:39:49 
=== Errors
./binarySearch_test.go:8:2: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:2: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors

DONE 0 tests, 11 errors in 0.129s
2024/07/30 07:39:49 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:39:49 $ git clean -df
2024/07/30 07:39:49 Removing binarySearch_test.go
Removing coverage.json
2024/07/30 07:39:49 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```

2024/07/30 07:39:52 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (3229 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			x, y int
			want int
		}{
			{0, 20, 25}, // x is below 10
			{10, 20, 30}, // x is greater than 10
			{200, 1, 200}, // y is below 20
		}
		for _, tt := range tests {
			got := callLoopConditionsOftenEnough(tt.x, tt.y)
			if got!= tt.want {
				t.Errorf("callLoopConditionsOftenEnough(%d, %d) = %d, want %d", tt.x, tt.y, got, tt.want)
			}
		}
	}

	func TestCallLoopConditionsOftenEnoughForCoverage(t *testing.T) {
		for i := 0; i < 20; i++ {
			if!callLoopConditionsOftenEnough(1, 1) == 1 {
				t.Errorf("Expected callLoopConditionsOftenEnough(1, 1) to return 1 but got something else")
			}
		}
	}
	```
2024/07/30 07:39:52 $ go mod tidy
2024/07/30 07:39:52 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:39:53 # light [light.test]
./callLoopConditionsOftenEnough_test.go:26:6: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)
2024/07/30 07:39:53 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:39:53 
=== Errors
./callLoopConditionsOftenEnough_test.go:26:6: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)

DONE 0 tests, 1 error in 0.123s
2024/07/30 07:39:53 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:39:53 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:39:53 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:39:53 Repairing balancedBrackets.go
2024/07/30 07:39:53 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:39:53 Repairing conditionsAnd.go
2024/07/30 07:39:53 Repairing jacobiSymbol.go
2024/07/30 07:39:53 Repairing simpleSwitchWithReturn.go
2024/07/30 07:39:53 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:39:53 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:39:53 Repairing equilibriumIndices.go
2024/07/30 07:39:53 Repairing forLoop.go
2024/07/30 07:39:53 Repairing klarnerRadoSequence.go
2024/07/30 07:39:53 Repairing knapsack.go
2024/07/30 07:39:53 Repairing largestProperDivisor.go
2024/07/30 07:39:53 Repairing pascalsTriangle.go
2024/07/30 07:39:53 Repairing validateDate.go
2024/07/30 07:39:53 Repairing cascadingIfElse.go
2024/07/30 07:39:53 Repairing collatzCalculator.go
2024/07/30 07:39:53 Repairing phoneNumber.go
2024/07/30 07:39:53 Repairing sort.go
2024/07/30 07:39:53 Repairing typeArrayAccess.go
2024/07/30 07:39:53 Repairing binarySearch.go
2024/07/30 07:39:53 Repairing magicSquareOdd.go
2024/07/30 07:39:53 Repairing matchBytes.go
2024/07/30 07:39:53 Repairing simpleIfElse.go
2024/07/30 07:39:53 Repairing callLoopConditionsOftenEnough_test.go
2024/07/30 07:39:53 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:39:53 $ go mod tidy
2024/07/30 07:39:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:39:53 # light [light.test]
./callLoopConditionsOftenEnough_test.go:26:7: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)
2024/07/30 07:39:53 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:39:53 
=== Errors
./callLoopConditionsOftenEnough_test.go:26:7: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)

DONE 0 tests, 1 error in 0.168s
2024/07/30 07:39:53 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:39:53 ERROR: execution failed: exit status 1
2024/07/30 07:39:53 $ git clean -df
2024/07/30 07:39:53 Removing callLoopConditionsOftenEnough_test.go
Removing coverage.json
2024/07/30 07:39:53 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```

2024/07/30 07:39:54 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (647 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestCasc
2024/07/30 07:39:54 $ go mod tidy
2024/07/30 07:39:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:39:54 cascadingIfElse_test.go:1:1: expected 'package', found 'go'
2024/07/30 07:39:54 
=== Errors
cascadingIfElse_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.018s
2024/07/30 07:39:54 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:39:54 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:39:54 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:39:55 A fatal error happened. Please take a look at the logs, and report the problem on https://github.com/symflower/symflower/issues or send a mail to hello@symflower.com. Thanks so much for your help!
Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc000728030, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc000556a80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc000728030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc000728030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000724001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0004d80b8, {0xc0004d8000?, 0x7f0f04029b58?, 0xc0004d80b8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0004d8000}, {0xc0000401e0?, 0x42?, 0xc0004d7ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0004d8000?}, {0xc0000401e0?, 0x27d8cc0?, 0xc0004d8000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:39:55 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:39:55 ERROR: Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc000728030, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc000556a80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc000728030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc000728030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000724001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0004d80b8, {0xc0004d8000?, 0x7f0f04029b58?, 0xc0004d80b8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0004d8000}, {0xc0000401e0?, 0x42?, 0xc0004d7ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0004d8000?}, {0xc0000401e0?, 0x27d8cc0?, 0xc0004d8000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:39:55 $ git clean -df
2024/07/30 07:39:55 Removing cascadingIfElse_test.go
2024/07/30 07:39:55 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```

2024/07/30 07:39:59 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (4352 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestComputeStepCount_EvenNumber(t *testing.T) {
		n, err := computeStepCount(24)
		if err != nil {
			t.Errorf("computeStepCount(24) returned error: %v", err)
		}
		if n != 4 {
			t.Errorf("computeStepCount(24) returned %d, expected 4", n)
		}
	}

	func TestComputeStepCount_OddNumber(t *testing.T) {
		n, err := computeStepCount(21)
		if err != nil {
			t.Errorf("computeStepCount(21) returned error: %v", err)
		}
		if n != 5 {
			t.Errorf("computeStepCount(21) returned %d, expected 5", n)
		}
	}

	func TestComputeStepCount_pozitiveNumber_StartingFromOne(t *testing.T) {
		n, err := computeStepCount(1)
		if err != nil {
			t.Errorf("computeStepCount(1) returned error: %v", err)
		}
		if n != 0 {
			t.Errorf("computeStepCount(1) returned %d, expected 0", n)
		}
	}

	func TestComputeStepCount_zero(t *testing.T) {
		_, err := computeStepCount(0)
		if err == nil {
			t.Errorf("computeStepCount(0) returned error, expected not nil error")
		}
	}

	func TestComputeStepCount_negativeNumber(t *testing.T) {
		_, err := computeStepCount(-5)
		if err == nil {
			t.Errorf("computeStepCount(-5) returned error, expected not nil error")
		}
	}
	```
2024/07/30 07:39:59 $ go mod tidy
2024/07/30 07:39:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:39:59 === RUN   TestComputeStepCount_EvenNumber
    collatzCalculator_test.go:13: computeStepCount(24) returned 10, expected 4
--- FAIL: TestComputeStepCount_EvenNumber (0.00s)
=== RUN   TestComputeStepCount_OddNumber
    collatzCalculator_test.go:23: computeStepCount(21) returned 7, expected 5
--- FAIL: TestComputeStepCount_OddNumber (0.00s)
=== RUN   TestComputeStepCount_pozitiveNumber_StartingFromOne
--- PASS: TestComputeStepCount_pozitiveNumber_StartingFromOne (0.00s)
=== RUN   TestComputeStepCount_zero
--- PASS: TestComputeStepCount_zero (0.00s)
=== RUN   TestComputeStepCount_negativeNumber
--- PASS: TestComputeStepCount_negativeNumber (0.00s)
2024/07/30 07:39:59 FAIL
2024/07/30 07:39:59 coverage: 5.2% of statements
2024/07/30 07:39:59 FAIL	light	0.003s
2024/07/30 07:39:59 
=== Failed
=== FAIL: . TestComputeStepCount_EvenNumber (0.00s)
    collatzCalculator_test.go:13: computeStepCount(24) returned 10, expected 4

=== FAIL: . TestComputeStepCount_OddNumber (0.00s)
    collatzCalculator_test.go:23: computeStepCount(21) returned 7, expected 5

DONE 5 tests, 2 failures in 0.262s
2024/07/30 07:39:59 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:39:59 ERROR: execution failed: exit status 1
2024/07/30 07:39:59 coverage objects: [{"FileRange":"light/collatzCalculator.go:12:2-light/collatzCalculator.go:16:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:16:8-light/collatzCalculator.go:18:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:20:2-light/collatzCalculator.go:21:16","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:25:2-light/collatzCalculator.go:25:19","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:5:47-light/collatzCalculator.go:8:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/collatzCalculator.go:9:2-light/collatzCalculator.go:11:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:39:59 Executes tests with 6 coverage objects
2024/07/30 07:39:59 $ git clean -df
2024/07/30 07:39:59 Removing collatzCalculator_test.go
Removing coverage.json
2024/07/30 07:39:59 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```

2024/07/30 07:40:03 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (3861 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestConditionsAndSuccessful(t *testing.T) {
		tests := []struct {
			argX rune
			argY rune
			want  bool
		}{
			{'A', 'B', true},
			{'A', 'C', false},
			{'E', 'B', false},
			{'G', 'H', false},
		}

		for _, tt := range tests {
			got := conditionsAnd(tt.argX, tt.argY)
			if got!= tt.want {
				t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
			}
		}
	}

	func TestConditionsAndUnsuccessful(t *testing.T) {
		tests := []struct {
			argX rune
			argY rune
		}{
			{'C', 'F'},
			{'I', 'K'},
			{'J', 'L'},
			{'M', 'N'},
		}

		for _, tt := range tests {
			got := conditionsAnd(tt.argX, tt.argY)
			if got!= false {
				t.Errorf("conditionsAnd() = %v, want %v", got, false)
			}
		}
	}

	func TestConditionsAndZeroByteValues(t *testing.T) {
		tests := []struct {
			argX rune
			argY rune
		}{
			{0, 0},
			{0, rune(255)},
			{rune(255), 0},
			{rune(255), rune(255)},
		}

		for _, tt := range tests {
			got := conditionsAnd(tt.argX, tt.argY)
			if got!= false {
				t.Errorf("conditionsAnd() = %v, want %v", got, false)
			}
		}
	}
	```
2024/07/30 07:40:03 $ go mod tidy
2024/07/30 07:40:03 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:04 === RUN   TestConditionsAndSuccessful
--- PASS: TestConditionsAndSuccessful (0.00s)
=== RUN   TestConditionsAndUnsuccessful
--- PASS: TestConditionsAndUnsuccessful (0.00s)
=== RUN   TestConditionsAndZeroByteValues
--- PASS: TestConditionsAndZeroByteValues (0.00s)
PASS
2024/07/30 07:40:04 coverage: 1.4% of statements
2024/07/30 07:40:04 ok  	light	0.003s	coverage: 1.4% of statements
2024/07/30 07:40:04 
DONE 3 tests in 0.290s
2024/07/30 07:40:04 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:04 coverage objects: [{"FileRange":"light/conditionsAnd.go:3:41-light/conditionsAnd.go:6:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/conditionsAnd.go:8:2-light/conditionsAnd.go:8:14","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:40:04 Executes tests with 2 coverage objects
2024/07/30 07:40:04 $ git clean -df
2024/07/30 07:40:04 Removing conditionsAnd_test.go
Removing coverage.json
2024/07/30 07:40:04 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```

2024/07/30 07:40:08 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (3883 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name  string
			input []int
			want  string
		}{
			{"empty sequence", []int{}, ""},
			{"no equilibrium indices", []int{1, 2, 3, 4, 5}, ""},
			{"equilibrium indices", []int{10, 20, 10, 30, 10, 60, 20}, "0;3;5"},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := equilibriumIndices(tt.input); got!= tt.want {
					t.Errorf("equilibriumIndices() = %q, want %q", got, tt.want)
				}
			})
		}
	}

	func TestEquilibriumIndicesPtr(t *testing.T) {
		tests := []struct {
			name string
			input []int
			want  string
		}{
			{"negative numbers", []int{-10, 20, -10, -30, -10}, "0;3;5"},
			{"same numbers", []int{10, 10, 10, 10}, "0;1;2;3"},
			{"single element", []int{100}, "0"},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := equilibriumIndices(tt.input); got!= tt.want {
					t.Errorf("equilibriumIndices() = %q, want %q", got, tt.want)
				}
			})
		}
	}
	```
2024/07/30 07:40:08 $ go mod tidy
2024/07/30 07:40:08 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:08 === RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/empty_sequence
=== RUN   TestEquilibriumIndices/no_equilibrium_indices
=== RUN   TestEquilibriumIndices/equilibrium_indices
    equilibriumIndices_test.go:21: equilibriumIndices() = "", want "0;3;5"
--- FAIL: TestEquilibriumIndices (0.00s)
    --- PASS: TestEquilibriumIndices/empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/no_equilibrium_indices (0.00s)
    --- FAIL: TestEquilibriumIndices/equilibrium_indices (0.00s)
2024/07/30 07:40:08 === RUN   TestEquilibriumIndicesPtr
=== RUN   TestEquilibriumIndicesPtr/negative_numbers
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;3;5"
=== RUN   TestEquilibriumIndicesPtr/same_numbers
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;1;2;3"
=== RUN   TestEquilibriumIndicesPtr/single_element
    equilibriumIndices_test.go:41: equilibriumIndices() = "0;", want "0"
--- FAIL: TestEquilibriumIndicesPtr (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/negative_numbers (0.00s)
2024/07/30 07:40:08     --- FAIL: TestEquilibriumIndicesPtr/same_numbers (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/single_element (0.00s)
FAIL
2024/07/30 07:40:08 coverage: 4.3% of statements
2024/07/30 07:40:08 FAIL	light	0.003s
2024/07/30 07:40:08 
=== Failed
=== FAIL: . TestEquilibriumIndices/equilibrium_indices (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = "", want "0;3;5"
    --- FAIL: TestEquilibriumIndices/equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/negative_numbers (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;3;5"
    --- FAIL: TestEquilibriumIndicesPtr/negative_numbers (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/same_numbers (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;1;2;3"
    --- FAIL: TestEquilibriumIndicesPtr/same_numbers (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/single_element (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "0;", want "0"
    --- FAIL: TestEquilibriumIndicesPtr/single_element (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr (0.00s)
2024/07/30 07:40:08 
DONE 8 tests, 6 failures in 0.244s
2024/07/30 07:40:08 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:08 ERROR: execution failed: exit status 1
2024/07/30 07:40:08 coverage objects: [{"FileRange":"light/equilibriumIndices.go:12:2-light/equilibriumIndices.go:16:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/equilibriumIndices.go:17:3-light/equilibriumIndices.go:17:18","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/equilibriumIndices.go:20:2-light/equilibriumIndices.go:20:18","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/equilibriumIndices.go:5:60-light/equilibriumIndices.go:10:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:40:08 Executes tests with 4 coverage objects
2024/07/30 07:40:08 $ git clean -df
2024/07/30 07:40:08 Removing coverage.json
Removing equilibriumIndices_test.go
2024/07/30 07:40:08 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```

2024/07/30 07:40:11 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (2871 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			n   int
		.exp int
		}{
			{5, 15},
			{0, 0},
			{-5, 0},
		}
		for _, test := range tests {
			if forLoop(test.n)!= test.exp {
				t.Errorf("expected %v got %v", test.exp, forLoop(test.n))
			}
		}
	}

	func TestForLoopInvalidInput(t *testing.T) {
		// In Go 1.10 and earlier, the code would still pass this test
		if forLoop(int(9999999999)) > 999999999900 {
			t.Errorf("forLoop result too big for int: %d", forLoop(int(9999999999)))
		}
	}

	func BenchmarkForLoop(b *testing.B) {
		for i := 0; i < b.N; i++ {
			forLoop(10000)
		}
	}
	```
2024/07/30 07:40:11 $ go mod tidy
2024/07/30 07:40:11 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:11 # light
forLoop_test.go:10:2: expected '}', found '.'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
2024/07/30 07:40:11 
=== Errors
forLoop_test.go:10:2: expected '}', found '.'

DONE 0 tests, 1 error in 0.027s
2024/07/30 07:40:11 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:40:11 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:40:11 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:40:11 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:40:11 Repairing conditionsAnd.go
2024/07/30 07:40:11 Repairing forLoop.go
2024/07/30 07:40:11 Repairing pascalsTriangle.go
2024/07/30 07:40:11 Repairing sort.go
2024/07/30 07:40:11 Repairing validateDate.go
2024/07/30 07:40:11 Repairing collatzCalculator.go
2024/07/30 07:40:11 Repairing knapsack.go
2024/07/30 07:40:11 Repairing simpleIfElse.go
2024/07/30 07:40:11 Repairing typeArrayAccess.go
2024/07/30 07:40:11 Repairing forLoop_test.go
2024/07/30 07:40:11 Repairing binarySearch.go
2024/07/30 07:40:11 Repairing cascadingIfElse.go
2024/07/30 07:40:11 Repairing equilibriumIndices.go
2024/07/30 07:40:11 Repairing jacobiSymbol.go
2024/07/30 07:40:11 Repairing magicSquareOdd.go
2024/07/30 07:40:11 Repairing matchBytes.go
2024/07/30 07:40:11 Repairing phoneNumber.go
2024/07/30 07:40:11 Repairing simpleSwitchWithReturn.go
2024/07/30 07:40:11 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:40:11 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:40:11 Repairing balancedBrackets.go
2024/07/30 07:40:11 Repairing klarnerRadoSequence.go
2024/07/30 07:40:11 Repairing largestProperDivisor.go
2024/07/30 07:40:11 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:11 $ go mod tidy
2024/07/30 07:40:11 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:12 # light [light.test]
./forLoop_test.go:8:11: []struct{n int} (type) is not an expression
2024/07/30 07:40:12 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:40:12 
=== Errors
./forLoop_test.go:8:11: []struct{n int} (type) is not an expression

DONE 0 tests, 1 error in 0.111s
2024/07/30 07:40:12 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:12 ERROR: execution failed: exit status 1
2024/07/30 07:40:12 $ git clean -df
2024/07/30 07:40:12 Removing coverage.json
Removing forLoop_test.go
2024/07/30 07:40:12 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```

2024/07/30 07:40:23 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (11465 ms) with:
	```go
	package light

	import (
		"errors"
		"io/ioutil"
		"os"
		"testing"
	)

	func TestJacobiSymbolHappyPath(t *testing.T) {
		tests := []struct {
			name string
			k    uint64
			n    uint64
			want int
		}{
			{"Odd and odd", 5, 7, 1},
			{"Even and odd", -2, 7, 0},
			{"Odd and even", 3, 6, 0},
			{"Negative odd and odd", 13, 19, 1},
			{"Small numbers", 2, 5, 1},
			{"Identity case", 7, 11, 1},
			{"Boundary cases", 0, 8, 1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := jacobiSymbol(tt.k, tt.n)
				if err!= nil {
					if tt.wantError() {
						return
					}
					t.Errorf(" jacobiSymbol(%d, %d) error = %v, want err nil", tt.k, tt.n, err)
				}
				if got!= tt.want {
					t.Errorf("jacobiSymbol(%d, %d) = %v, want %v", tt.k, tt.n, got, tt.want)
				}
			})
		}
	}

	func TestJacobiSymbolFailingPath(t *testing.T) {
		tests := []struct {
			name string
			k    uint64
			n    uint64
			want error
		}{
			{"odd and odd, but jacobi conjugate", 5, 7, nil},
			{"even and even", 6, 6, nil},
			{"odd and even, but jacobi not defined", 3, 6, fmt.Errorf("Invalid value. k = 3, n = 6")},
			{"large even and even", 6000000, 8, nil},
			{"large odd and odd", 76030000, 8, nil},
			{"negative odd and odd, jacobi conjugate", -7, 11, nil},
			{"unknown even and even, jacobi conjugate", 18, 8, nil},
			{"even and large even, jacobi conjugate", 7056000, 256, fmt.Errorf("Invalid value. k = 7056000, n = 256")},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := jacobiSymbol(tt.k, tt.n)
				if err == nil {
					t.Errorf(" jacobiSymbol(%d, %d) error = %v, want error", tt.k, tt.n, got)
				}
				if!errors.Is(err, tt.want) {
					t.Errorf("jacobiSymbol(%d, %d) error = %v, want %v", tt.k, tt.n, err, tt.want)
				}
			})
		}
	}

	func (tt *TestJacobiSymbolFailingPath) wantError() bool {
		return tt.want == nil
	}

	func TestMain(m *testing.M) {
		root := RootDirectory()
		jacobiObs := RootDirectory() + "/obs.md"
		err := ioutil.WriteFile(jacobiObs, []byte("```\n"+nativeObs()+"\n```"), 0644)
		if err!= nil {
			t.Fatal(err)
		}
		defer os.Remove(jacobiObs)
		ret := m.Run()
		if ret == 0 {
			t.Skip("obs/\_test\_.go observed jacobi symbol error")
		}
		os.Exit(ret)
	}

	func nativeObs() string {
		// implement equivalent of xfail.sh here
		// this should add or update a new file
		return ""
	}

	func isOddBinaryFile(name DirName) (bool, error) {
		b, err := ioutil.ReadFile(name.inner(errDir()))
		if err!= nil {
			return false, err
		}
		for i := 0; i < len(b); i++ {
			ch := binaryLibLogoByte(b[i])
			if ch == nil {
				return false, err
			}
			if ch!= 0 {
				return true, nil
			}
		}
		return false, nil
	}

	func binaryFileObs(name DirName) error {
		if isOddBinaryFile(name.inner(ReleaseDir())).(bool) {
			return errors.New("Binary file "+name.inner(ReleaseDir())+" not expected to be odd.")
		}
		return errors.New("not implemented")
	}

	func RootDirectory() string {
		pwd, err := os.Getwd()
		if err!= nil {
			return " obs/\_test\_.go failure!"
		}
		splitted := strings.Split(pwd, string(os.PathSeparator))
		return strings.Join(splitted[:len(splitted)-1], string(os.PathSeparator))
	}

	func TestObs(t *testing.T) {
		updateObs()
		e := obs(" Error; expect an error!")
		assert(e!= nil, "unexpected nil error")
		assert(errors.Is(e, badObs), "not an Obs error")
	}
	```
2024/07/30 07:40:23 $ go mod tidy
2024/07/30 07:40:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:23 WARN # light
jacobiSymbol_test.go:86:16: unknown escape sequence
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]
2024/07/30 07:40:23 
=== Errors
jacobiSymbol_test.go:86:16: unknown escape sequence

DONE 0 tests, 1 error in 0.028s
2024/07/30 07:40:23 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:23 ERROR: execution failed: exit status 1
2024/07/30 07:40:23 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:40:23 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:40:23 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:23 ERROR: Internal error: format.Node internal error (88:16: unknown escape sequence (and 3 more errors)):
"     0  *ast.File {\n     1  .  Doc: nil\n     2  .  Package: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:1:1\n     3  .  Name: *ast.Ident {\n     4  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:1:9\n     5  .  .  Name: \"light\"\n     6  .  .  Obj: nil\n     7  .  }\n     8  .  Decls: []ast.Decl (len = 10) {\n     9  .  .  0: *ast.GenDecl {\n    10  .  .  .  Doc: nil\n    11  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:3:1\n    12  .  .  .  Tok: import\n    13  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:3:8\n    14  .  .  .  Specs: []ast.Spec (len = 6) {\n    15  .  .  .  .  0: *ast.ImportSpec {\n    16  .  .  .  .  .  Doc: nil\n    17  .  .  .  .  .  Name: nil\n    18  .  .  .  .  .  Path: *ast.BasicLit {\n    19  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:4:2\n    20  .  .  .  .  .  .  Kind: STRING\n    21  .  .  .  .  .  .  Value: \"\\\"errors\\\"\"\n    22  .  .  .  .  .  }\n    23  .  .  .  .  .  Comment: nil\n    24  .  .  .  .  .  EndPos: -\n    25  .  .  .  .  }\n    26  .  .  .  .  1: *ast.ImportSpec {\n    27  .  .  .  .  .  Doc: nil\n    28  .  .  .  .  .  Name: nil\n    29  .  .  .  .  .  Path: *ast.BasicLit {\n    30  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:5:2\n    31  .  .  .  .  .  .  Kind: STRING\n    32  .  .  .  .  .  .  Value: \"\\\"io/ioutil\\\"\"\n    33  .  .  .  .  .  }\n    34  .  .  .  .  .  Comment: nil\n    35  .  .  .  .  .  EndPos: -\n    36  .  .  .  .  }\n    37  .  .  .  .  2: *ast.ImportSpec {\n    38  .  .  .  .  .  Doc: nil\n    39  .  .  .  .  .  Name: nil\n    40  .  .  .  .  .  Path: *ast.BasicLit {\n    41  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:6:2\n    42  .  .  .  .  .  .  Kind: STRING\n    43  .  .  .  .  .  .  Value: \"\\\"os\\\"\"\n    44  .  .  .  .  .  }\n    45  .  .  .  .  .  Comment: nil\n    46  .  .  .  .  .  EndPos: -\n    47  .  .  .  .  }\n    48  .  .  .  .  3: *ast.ImportSpec {\n    49  .  .  .  .  .  Doc: nil\n    50  .  .  .  .  .  Name: nil\n    51  .  .  .  .  .  Path: *ast.BasicLit {\n    52  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:7:2\n    53  .  .  .  .  .  .  Kind: STRING\n    54  .  .  .  .  .  .  Value: \"\\\"testing\\\"\"\n    55  .  .  .  .  .  }\n    56  .  .  .  .  .  Comment: nil\n    57  .  .  .  .  .  EndPos: -\n    58  .  .  .  .  }\n    59  .  .  .  .  4: *ast.ImportSpec {\n    60  .  .  .  .  .  Doc: nil\n    61  .  .  .  .  .  Name: nil\n    62  .  .  .  .  .  Path: *ast.BasicLit {\n    63  .  .  .  .  .  .  ValuePos: -\n    64  .  .  .  .  .  .  Kind: ILLEGAL\n    65  .  .  .  .  .  .  Value: \"\\\"fmt\\\"\"\n    66  .  .  .  .  .  }\n    67  .  .  .  .  .  Comment: nil\n    68  .  .  .  .  .  EndPos: -\n    69  .  .  .  .  }\n    70  .  .  .  .  5: *ast.ImportSpec {\n    71  .  .  .  .  .  Doc: nil\n    72  .  .  .  .  .  Name: nil\n    73  .  .  .  .  .  Path: *ast.BasicLit {\n    74  .  .  .  .  .  .  ValuePos: -\n    75  .  .  .  .  .  .  Kind: ILLEGAL\n    76  .  .  .  .  .  .  Value: \"\\\"fmt\\\"\"\n    77  .  .  .  .  .  }\n    78  .  .  .  .  .  Comment: nil\n    79  .  .  .  .  .  EndPos: -\n    80  .  .  .  .  }\n    81  .  .  .  }\n    82  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:8:1\n    83  .  .  }\n    84  .  .  1: *ast.FuncDecl {\n    85  .  .  .  Doc: nil\n    86  .  .  .  Recv: nil\n    87  .  .  .  Name: *ast.Ident {\n    88  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:6\n    89  .  .  .  .  Name: \"TestJacobiSymbolHappyPath\"\n    90  .  .  .  .  Obj: *ast.Object {\n    91  .  .  .  .  .  Kind: func\n    92  .  .  .  .  .  Name: \"TestJacobiSymbolHappyPath\"\n    93  .  .  .  .  .  Decl: *(obj @ 84)\n    94  .  .  .  .  .  Data: nil\n    95  .  .  .  .  .  Type: nil\n    96  .  .  .  .  }\n    97  .  .  .  }\n    98  .  .  .  Type: *ast.FuncType {\n    99  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:1\n   100  .  .  .  .  TypeParams: nil\n   101  .  .  .  .  Params: *ast.FieldList {\n   102  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:31\n   103  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   104  .  .  .  .  .  .  0: *ast.Field {\n   105  .  .  .  .  .  .  .  Doc: nil\n   106  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   107  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   108  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:32\n   109  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   110  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   111  .  .  .  .  .  .  .  .  .  .  Kind: var\n   112  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   113  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 104)\n   114  .  .  .  .  .  .  .  .  .  .  Data: nil\n   115  .  .  .  .  .  .  .  .  .  .  Type: nil\n   116  .  .  .  .  .  .  .  .  .  }\n   117  .  .  .  .  .  .  .  .  }\n   118  .  .  .  .  .  .  .  }\n   119  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   120  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:34\n   121  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   122  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   123  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:35\n   124  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   125  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   126  .  .  .  .  .  .  .  .  .  }\n   127  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   128  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:43\n   129  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   130  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   131  .  .  .  .  .  .  .  .  .  }\n   132  .  .  .  .  .  .  .  .  }\n   133  .  .  .  .  .  .  .  }\n   134  .  .  .  .  .  .  .  Tag: nil\n   135  .  .  .  .  .  .  .  Comment: nil\n   136  .  .  .  .  .  .  }\n   137  .  .  .  .  .  }\n   138  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:44\n   139  .  .  .  .  }\n   140  .  .  .  .  Results: nil\n   141  .  .  .  }\n   142  .  .  .  Body: *ast.BlockStmt {\n   143  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:46\n   144  .  .  .  .  List: []ast.Stmt (len = 2) {\n   145  .  .  .  .  .  0: *ast.AssignStmt {\n   146  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   147  .  .  .  .  .  .  .  0: *ast.Ident {\n   148  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:2\n   149  .  .  .  .  .  .  .  .  Name: \"tests\"\n   150  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   151  .  .  .  .  .  .  .  .  .  Kind: var\n   152  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n   153  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 145)\n   154  .  .  .  .  .  .  .  .  .  Data: nil\n   155  .  .  .  .  .  .  .  .  .  Type: nil\n   156  .  .  .  .  .  .  .  .  }\n   157  .  .  .  .  .  .  .  }\n   158  .  .  .  .  .  .  }\n   159  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:8\n   160  .  .  .  .  .  .  Tok: :=\n   161  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   162  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n   163  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {\n   164  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:11\n   165  .  .  .  .  .  .  .  .  .  Len: nil\n   166  .  .  .  .  .  .  .  .  .  Elt: *ast.StructType {\n   167  .  .  .  .  .  .  .  .  .  .  Struct: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:13\n   168  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {\n   169  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:20\n   170  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 4) {\n   171  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n   172  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   173  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:12:3\n   176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 171)\n   181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   185  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   186  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:12:8\n   188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n   189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   190  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   191  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   192  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   193  .  .  .  .  .  .  .  .  .  .  .  .  }\n   194  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {\n   195  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   196  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:13:3\n   199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 194)\n   204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   208  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   209  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   210  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:13:8\n   211  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n   212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   213  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   214  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   215  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   216  .  .  .  .  .  .  .  .  .  .  .  .  }\n   217  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Field {\n   218  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   219  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   220  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   221  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:14:3\n   222  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   223  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   224  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   225  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   226  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 217)\n   227  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   228  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   229  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   231  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   232  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   233  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:14:8\n   234  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n   235  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   236  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   237  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   238  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   239  .  .  .  .  .  .  .  .  .  .  .  .  }\n   240  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Field {\n   241  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   242  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   243  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   244  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:15:3\n   245  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 240)\n   250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   254  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   255  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:15:8\n   257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"int\"\n   258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   259  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   260  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   261  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   262  .  .  .  .  .  .  .  .  .  .  .  .  }\n   263  .  .  .  .  .  .  .  .  .  .  .  }\n   264  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:16:2\n   265  .  .  .  .  .  .  .  .  .  .  }\n   266  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   267  .  .  .  .  .  .  .  .  .  }\n   268  .  .  .  .  .  .  .  .  }\n   269  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:16:3\n   270  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 7) {\n   271  .  .  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n   272  .  .  .  .  .  .  .  .  .  .  Type: nil\n   273  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:3\n   274  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   275  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   276  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:4\n   277  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   278  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Odd and odd\\\"\"\n   279  .  .  .  .  .  .  .  .  .  .  .  }\n   280  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   281  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:19\n   282  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   283  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"5\"\n   284  .  .  .  .  .  .  .  .  .  .  .  }\n   285  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   286  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:22\n   287  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   288  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n   289  .  .  .  .  .  .  .  .  .  .  .  }\n   290  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   291  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:25\n   292  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   293  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   294  .  .  .  .  .  .  .  .  .  .  .  }\n   295  .  .  .  .  .  .  .  .  .  .  }\n   296  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:26\n   297  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   298  .  .  .  .  .  .  .  .  .  }\n   299  .  .  .  .  .  .  .  .  .  1: *ast.CompositeLit {\n   300  .  .  .  .  .  .  .  .  .  .  Type: nil\n   301  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:3\n   302  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   303  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   304  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:4\n   305  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   306  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Even and odd\\\"\"\n   307  .  .  .  .  .  .  .  .  .  .  .  }\n   308  .  .  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {\n   309  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:20\n   310  .  .  .  .  .  .  .  .  .  .  .  .  Op: -\n   311  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n   312  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:21\n   313  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   314  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"2\"\n   315  .  .  .  .  .  .  .  .  .  .  .  .  }\n   316  .  .  .  .  .  .  .  .  .  .  .  }\n   317  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   318  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:24\n   319  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   320  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n   321  .  .  .  .  .  .  .  .  .  .  .  }\n   322  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   323  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:27\n   324  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   325  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n   326  .  .  .  .  .  .  .  .  .  .  .  }\n   327  .  .  .  .  .  .  .  .  .  .  }\n   328  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:28\n   329  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   330  .  .  .  .  .  .  .  .  .  }\n   331  .  .  .  .  .  .  .  .  .  2: *ast.CompositeLit {\n   332  .  .  .  .  .  .  .  .  .  .  Type: nil\n   333  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:3\n   334  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   335  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   336  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:4\n   337  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   338  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Odd and even\\\"\"\n   339  .  .  .  .  .  .  .  .  .  .  .  }\n   340  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   341  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:20\n   342  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   343  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"3\"\n   344  .  .  .  .  .  .  .  .  .  .  .  }\n   345  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   346  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:23\n   347  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   348  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n   349  .  .  .  .  .  .  .  .  .  .  .  }\n   350  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   351  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:26\n   352  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   353  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n   354  .  .  .  .  .  .  .  .  .  .  .  }\n   355  .  .  .  .  .  .  .  .  .  .  }\n   356  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:27\n   357  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   358  .  .  .  .  .  .  .  .  .  }\n   359  .  .  .  .  .  .  .  .  .  3: *ast.CompositeLit {\n   360  .  .  .  .  .  .  .  .  .  .  Type: nil\n   361  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:3\n   362  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   363  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   364  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:4\n   365  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   366  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Negative odd and odd\\\"\"\n   367  .  .  .  .  .  .  .  .  .  .  .  }\n   368  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   369  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:28\n   370  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   371  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"13\"\n   372  .  .  .  .  .  .  .  .  .  .  .  }\n   373  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   374  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:32\n   375  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   376  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"19\"\n   377  .  .  .  .  .  .  .  .  .  .  .  }\n   378  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   379  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:36\n   380  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   381  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   382  .  .  .  .  .  .  .  .  .  .  .  }\n   383  .  .  .  .  .  .  .  .  .  .  }\n   384  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:37\n   385  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   386  .  .  .  .  .  .  .  .  .  }\n   387  .  .  .  .  .  .  .  .  .  4: *ast.CompositeLit {\n   388  .  .  .  .  .  .  .  .  .  .  Type: nil\n   389  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:3\n   390  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   391  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   392  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:4\n   393  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   394  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Small numbers\\\"\"\n   395  .  .  .  .  .  .  .  .  .  .  .  }\n   396  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   397  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:21\n   398  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   399  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"2\"\n   400  .  .  .  .  .  .  .  .  .  .  .  }\n   401  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   402  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:24\n   403  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   404  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"5\"\n   405  .  .  .  .  .  .  .  .  .  .  .  }\n   406  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   407  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:27\n   408  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   409  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   410  .  .  .  .  .  .  .  .  .  .  .  }\n   411  .  .  .  .  .  .  .  .  .  .  }\n   412  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:28\n   413  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   414  .  .  .  .  .  .  .  .  .  }\n   415  .  .  .  .  .  .  .  .  .  5: *ast.CompositeLit {\n   416  .  .  .  .  .  .  .  .  .  .  Type: nil\n   417  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:3\n   418  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   419  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   420  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:4\n   421  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   422  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Identity case\\\"\"\n   423  .  .  .  .  .  .  .  .  .  .  .  }\n   424  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   425  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:21\n   426  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   427  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n   428  .  .  .  .  .  .  .  .  .  .  .  }\n   429  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   430  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:24\n   431  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   432  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"11\"\n   433  .  .  .  .  .  .  .  .  .  .  .  }\n   434  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   435  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:28\n   436  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   437  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   438  .  .  .  .  .  .  .  .  .  .  .  }\n   439  .  .  .  .  .  .  .  .  .  .  }\n   440  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:29\n   441  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   442  .  .  .  .  .  .  .  .  .  }\n   443  .  .  .  .  .  .  .  .  .  6: *ast.CompositeLit {\n   444  .  .  .  .  .  .  .  .  .  .  Type: nil\n   445  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:3\n   446  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   447  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   448  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:4\n   449  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   450  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Boundary cases\\\"\"\n   451  .  .  .  .  .  .  .  .  .  .  .  }\n   452  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   453  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:22\n   454  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   455  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n   456  .  .  .  .  .  .  .  .  .  .  .  }\n   457  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   458  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:25\n   459  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   460  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n   461  .  .  .  .  .  .  .  .  .  .  .  }\n   462  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   463  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:28\n   464  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   465  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   466  .  .  .  .  .  .  .  .  .  .  .  }\n   467  .  .  .  .  .  .  .  .  .  .  }\n   468  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:29\n   469  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   470  .  .  .  .  .  .  .  .  .  }\n   471  .  .  .  .  .  .  .  .  }\n   472  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:24:2\n   473  .  .  .  .  .  .  .  .  Incomplete: false\n   474  .  .  .  .  .  .  .  }\n   475  .  .  .  .  .  .  }\n   476  .  .  .  .  .  }\n   477  .  .  .  .  .  1: *ast.RangeStmt {\n   478  .  .  .  .  .  .  For: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:2\n   479  .  .  .  .  .  .  Key: *ast.Ident {\n   480  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:6\n   481  .  .  .  .  .  .  .  Name: \"_\"\n   482  .  .  .  .  .  .  .  Obj: *ast.Object {\n   483  .  .  .  .  .  .  .  .  Kind: var\n   484  .  .  .  .  .  .  .  .  Name: \"_\"\n   485  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {\n   486  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n   487  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 479)\n   488  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   489  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:9\n   490  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   491  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   492  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   493  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   494  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 485)\n   495  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   496  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   497  .  .  .  .  .  .  .  .  .  .  .  }\n   498  .  .  .  .  .  .  .  .  .  .  }\n   499  .  .  .  .  .  .  .  .  .  }\n   500  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:12\n   501  .  .  .  .  .  .  .  .  .  Tok: :=\n   502  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   503  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {\n   504  .  .  .  .  .  .  .  .  .  .  .  OpPos: -\n   505  .  .  .  .  .  .  .  .  .  .  .  Op: range\n   506  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   507  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:21\n   508  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n   509  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 150)\n   510  .  .  .  .  .  .  .  .  .  .  .  }\n   511  .  .  .  .  .  .  .  .  .  .  }\n   512  .  .  .  .  .  .  .  .  .  }\n   513  .  .  .  .  .  .  .  .  }\n   514  .  .  .  .  .  .  .  .  Data: nil\n   515  .  .  .  .  .  .  .  .  Type: nil\n   516  .  .  .  .  .  .  .  }\n   517  .  .  .  .  .  .  }\n   518  .  .  .  .  .  .  Value: *(obj @ 488)\n   519  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:12\n   520  .  .  .  .  .  .  Tok: :=\n   521  .  .  .  .  .  .  Range: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:15\n   522  .  .  .  .  .  .  X: *(obj @ 506)\n   523  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   524  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:27\n   525  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   526  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   527  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   528  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   529  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   530  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:3\n   531  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   532  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 110)\n   533  .  .  .  .  .  .  .  .  .  .  .  }\n   534  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   535  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:5\n   536  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Run\"\n   537  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   538  .  .  .  .  .  .  .  .  .  .  .  }\n   539  .  .  .  .  .  .  .  .  .  .  }\n   540  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-
2024/07/30 07:40:23 dev-quality3504448851/light/jacobiSymbol_test.go:27:8\n   541  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   542  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n   543  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   544  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:9\n   545  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   546  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   547  .  .  .  .  .  .  .  .  .  .  .  .  }\n   548  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   549  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:12\n   550  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   551  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   552  .  .  .  .  .  .  .  .  .  .  .  .  }\n   553  .  .  .  .  .  .  .  .  .  .  .  }\n   554  .  .  .  .  .  .  .  .  .  .  .  1: *ast.FuncLit {\n   555  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n   556  .  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:18\n   557  .  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n   558  .  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n   559  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:22\n   560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n   562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:23\n   566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   568  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   569  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   570  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 561)\n   571  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   572  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   573  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   574  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   575  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   576  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   577  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:25\n   578  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   579  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   580  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:26\n   581  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   582  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   583  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   584  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:34\n   586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   588  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   589  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:35\n   596  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   597  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil\n   598  .  .  .  .  .  .  .  .  .  .  .  .  }\n   599  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   600  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:37\n   601  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {\n   602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n   603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n   604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:4\n   606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 602)\n   611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:9\n   617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 602)\n   622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:13\n   628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n   629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   630  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   631  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   632  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:16\n   633  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"jacobiSymbol\"\n   634  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   635  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   636  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:28\n   637  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   638  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n   639  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   640  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:29\n   641  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   642  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   643  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   644  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   645  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:32\n   646  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   647  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   648  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   649  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   650  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n   651  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   652  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:35\n   653  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   657  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:38\n   658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:39\n   665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n   669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:4\n   670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n   671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n   672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:7\n   674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 618)\n   676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:10\n   678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=\n   679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n   680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:13\n   681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n   682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:17\n   687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {\n   688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IfStmt {\n   689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:5\n   690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n   691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.CallExpr {\n   692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:8\n   695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:11\n   700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"wantError\"\n   701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:20\n   705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n   706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:21\n   708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:23\n   711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n   713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:31:6\n   714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil\n   715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:32:5\n   718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n   720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ExprStmt {\n   722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:5\n   726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 567)\n   728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:7\n   731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:13\n   736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 4) {\n   737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:14\n   739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" jacobiSymbol(%d, %d) error = %v, want err nil\\\"\"\n   741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n   743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:64\n   745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:67\n   750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n   755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:70\n   757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:73\n   762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n   767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:76\n   768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 618)\n   770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:79\n   774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:34:4\n   778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n   780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {\n   782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:4\n   783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n   784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n   785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:7\n   787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 607)\n   789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:10\n   791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=\n   792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {\n   793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:13\n   795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   799  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:16\n   800  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:21\n   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:5\n   813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 567)\n   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:7\n   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:13\n   823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 5) {\n   824  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   825  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:14\n   826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"jacobiSymbol(%d, %d) = %v, want %v\\\"\"\n   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n   830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:52\n   832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:55\n   837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n   842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:58\n   844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   846  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:61\n   849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n   854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:64\n   855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 607)\n   857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.SelectorExpr {\n   859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:69\n   861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:72\n   866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   871  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   872  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:76\n   873  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   874  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   875  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:37:4\n   877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   878  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n   879  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   880  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   881  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:38:3\n   882  .  .  .  .  .  .  .  .  .  .  .  .  }\n   883  .  .  .  .  .  .  .  .  .  .  .  }\n   884  .  .  .  .  .  .  .  .  .  .  }\n   885  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   886  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:38:4\n   887  .  .  .  .  .  .  .  .  .  }\n   888  .  .  .  .  .  .  .  .  }\n   889  .  .  .  .  .  .  .  }\n   890  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:39:2\n   891  .  .  .  .  .  .  }\n   892  .  .  .  .  .  }\n   893  .  .  .  .  }\n   894  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:40:1\n   895  .  .  .  }\n   896  .  .  }\n   897  .  .  2: *ast.FuncDecl {\n   898  .  .  .  Doc: nil\n   899  .  .  .  Recv: nil\n   900  .  .  .  Name: *ast.Ident {\n   901  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:6\n   902  .  .  .  .  Name: \"TestJacobiSymbolFailingPath\"\n   903  .  .  .  .  Obj: *ast.Object {\n   904  .  .  .  .  .  Kind: func\n   905  .  .  .  .  .  Name: \"TestJacobiSymbolFailingPath\"\n   906  .  .  .  .  .  Decl: *(obj @ 897)\n   907  .  .  .  .  .  Data: nil\n   908  .  .  .  .  .  Type: nil\n   909  .  .  .  .  }\n   910  .  .  .  }\n   911  .  .  .  Type: *ast.FuncType {\n   912  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:1\n   913  .  .  .  .  TypeParams: nil\n   914  .  .  .  .  Params: *ast.FieldList {\n   915  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:33\n   916  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   917  .  .  .  .  .  .  0: *ast.Field {\n   918  .  .  .  .  .  .  .  Doc: nil\n   919  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   920  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   921  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:34\n   922  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   923  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   924  .  .  .  .  .  .  .  .  .  .  Kind: var\n   925  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   926  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 917)\n   927  .  .  .  .  .  .  .  .  .  .  Data: nil\n   928  .  .  .  .  .  .  .  .  .  .  Type: nil\n   929  .  .  .  .  .  .  .  .  .  }\n   930  .  .  .  .  .  .  .  .  }\n   931  .  .  .  .  .  .  .  }\n   932  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   933  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:36\n   934  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   935  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   936  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:37\n   937  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   938  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   939  .  .  .  .  .  .  .  .  .  }\n   940  .  .  .  .  .  .  .  .  .  Sel: *ast
2024/07/30 07:40:23 .Ident {\n   941  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:45\n   942  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   943  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   944  .  .  .  .  .  .  .  .  .  }\n   945  .  .  .  .  .  .  .  .  }\n   946  .  .  .  .  .  .  .  }\n   947  .  .  .  .  .  .  .  Tag: nil\n   948  .  .  .  .  .  .  .  Comment: nil\n   949  .  .  .  .  .  .  }\n   950  .  .  .  .  .  }\n   951  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:46\n   952  .  .  .  .  }\n   953  .  .  .  .  Results: nil\n   954  .  .  .  }\n   955  .  .  .  Body: *ast.BlockStmt {\n   956  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:48\n   957  .  .  .  .  List: []ast.Stmt (len = 2) {\n   958  .  .  .  .  .  0: *ast.AssignStmt {\n   959  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   960  .  .  .  .  .  .  .  0: *ast.Ident {\n   961  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:2\n   962  .  .  .  .  .  .  .  .  Name: \"tests\"\n   963  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   964  .  .  .  .  .  .  .  .  .  Kind: var\n   965  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n   966  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 958)\n   967  .  .  .  .  .  .  .  .  .  Data: nil\n   968  .  .  .  .  .  .  .  .  .  Type: nil\n   969  .  .  .  .  .  .  .  .  }\n   970  .  .  .  .  .  .  .  }\n   971  .  .  .  .  .  .  }\n   972  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:8\n   973  .  .  .  .  .  .  Tok: :=\n   974  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   975  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n   976  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {\n   977  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:11\n   978  .  .  .  .  .  .  .  .  .  Len: nil\n   979  .  .  .  .  .  .  .  .  .  Elt: *ast.StructType {\n   980  .  .  .  .  .  .  .  .  .  .  Struct: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:13\n   981  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {\n   982  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:20\n   983  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 4) {\n   984  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n   985  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   986  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:44:3\n   989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 984)\n   994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   998  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   999  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:44:8\n  1001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1003  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1004  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1005  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1006  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1007  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {\n  1008  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1009  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:45:3\n  1012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1007)\n  1017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1021  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1022  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:45:8\n  1024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n  1025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1026  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1027  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1028  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1029  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1030  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Field {\n  1031  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1032  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:46:3\n  1035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1030)\n  1040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1044  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1045  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:46:8\n  1047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n  1048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1049  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1050  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1051  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1052  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1053  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Field {\n  1054  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1055  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:47:3\n  1058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1053)\n  1063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1064  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1065  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1067  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1068  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:47:8\n  1070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"error\"\n  1071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1072  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1073  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1074  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1075  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1076  .  .  .  .  .  .  .  .  .  .  .  }\n  1077  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:48:2\n  1078  .  .  .  .  .  .  .  .  .  .  }\n  1079  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1080  .  .  .  .  .  .  .  .  .  }\n  1081  .  .  .  .  .  .  .  .  }\n  1082  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:48:3\n  1083  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 8) {\n  1084  .  .  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n  1085  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1086  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:3\n  1087  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1088  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1089  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:4\n  1090  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1091  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"odd and odd, but jacobi conjugate\\\"\"\n  1092  .  .  .  .  .  .  .  .  .  .  .  }\n  1093  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1094  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:41\n  1095  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1096  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"5\"\n  1097  .  .  .  .  .  .  .  .  .  .  .  }\n  1098  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1099  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:44\n  1100  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1101  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n  1102  .  .  .  .  .  .  .  .  .  .  .  }\n  1103  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1104  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:47\n  1105  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1106  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1107  .  .  .  .  .  .  .  .  .  .  .  }\n  1108  .  .  .  .  .  .  .  .  .  .  }\n  1109  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:50\n  1110  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1111  .  .  .  .  .  .  .  .  .  }\n  1112  .  .  .  .  .  .  .  .  .  1: *ast.CompositeLit {\n  1113  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1114  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:3\n  1115  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1116  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1117  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:4\n  1118  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1119  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"even and even\\\"\"\n  1120  .  .  .  .  .  .  .  .  .  .  .  }\n  1121  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1122  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:21\n  1123  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1124  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n  1125  .  .  .  .  .  .  .  .  .  .  .  }\n  1126  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1127  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:24\n  1128  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1129  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n  1130  .  .  .  .  .  .  .  .  .  .  .  }\n  1131  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1132  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:27\n  1133  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1134  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1135  .  .  .  .  .  .  .  .  .  .  .  }\n  1136  .  .  .  .  .  .  .  .  .  .  }\n  1137  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:30\n  1138  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1139  .  .  .  .  .  .  .  .  .  }\n  1140  .  .  .  .  .  .  .  .  .  2: *ast.CompositeLit {\n  1141  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1142  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:3\n  1143  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1144  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1145  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:4\n  1146  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1147  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"odd and even, but jacobi not defined\\\"\"\n  1148  .  .  .  .  .  .  .  .  .  .  .  }\n  1149  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1150  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:44\n  1151  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1152  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"3\"\n  1153  .  .  .  .  .  .  .  .  .  .  .  }\n  1154  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1155  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:47\n  1156  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1157  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n  1158  .  .  .  .  .  .  .  .  .  .  .  }\n  1159  .  .  .  .  .  .  .  .  .  .  .  3: *ast.CallExpr {\n  1160  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1161  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:50\n  1163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"fmt\"\n  1164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1165  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1166  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:54\n  1168  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1169  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1170  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1171  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1172  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:60\n  1173  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  1174  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:61\n  1176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Invalid value. k = 3, n = 6\\\"\"\n  1178  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1179  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1180  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1181  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:90\n  1182  .  .  .  .  .  .  .  .  .  .  .  }\n  1183  .  .  .  .  .  .  .  .  .  .  }\n  1184  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:91\n  1185  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1186  .  .  .  .  .  .  .  .  .  }\n  1187  .  .  .  .  .  .  .  .  .  3: *ast.CompositeLit {\n  1188  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1189  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:3\n  1190  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1191  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1192  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:4\n  1193  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1194  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"large even and even\\\"\"\n  1195  .  .  .  .  .  .  .  .  .  .  .  }\n  1196  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1197  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:27\n  1198  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1199  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6000000\"\n  1200  .  .  .  .  .  .  .  .  .  .  .  }\n  1201  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1202  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:36\n  1203  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1204  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n  1205  .  .  .  .  .  .  .  .  .  .  .  }\n  1206  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1207  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:39\n  1208  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1209  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1210  .  .  .  .  .  .  .  .  .  .  .  }\n  1211  .  .  .  .  .  .  .  .  .  .  }\n  1212  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:42\n  1213  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1214  .  .  .  .  .  .  .  .  .  }\n  1215  .  .  .  .  .  .  .  .  .  4: *ast.CompositeLit {\n  1216  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1217  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:3\n  1218  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1219  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1220  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:4\n  1221  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1222  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"large odd and odd\\\"\"\n  1223  .  .  .  .  .  .  .  .  .  .  .  }\n  1224  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1225  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:25\n  1226  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1227  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"76030000\"\n  1228  .  .  .  .  .  .  .  .  .  .  .  }\n  1229  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1230  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:35\n  1231  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1232  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n  1233  .  .  .  .  .  .  .  .  .  .  .  }\n  1234  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1235  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:38\n  1236  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1237  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1238  .  .  .  .  .  .  .  .  .  .  .  }\n  1239  .  .  .  .  .  .  .  .  .  .  }\n  1240  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:41\n  1241  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1242  .  .  .  .  .  .  .  .  .  }\n  1243  .  .  .  .  .  .  .  .  .  5: *ast.CompositeLit {\n  1244  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1245  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:3\n  1246  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1247  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1248  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:4\n  1249  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1250  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"negative odd and odd, jacobi conjugate\\\"\"\n  1251  .  .  .  .  .  .  .  .  .  .  .  }\n  1252  .  .  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {\n  1253  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:46\n  1254  .  .  .  .  .  .  .  .  .  .  .  .  Op: -\n  1255  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n  1256  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:47\n  1257  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1258  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n  1259  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1260  .  .  .  .  .  .  .  .  .  .  .  }\n  1261  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1262  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:50\n  1263  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1264  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"11\"\n  1265  .  .  .  .  .  .  .  .  .  .  .  }\n  1266  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1267  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:54\n  1268  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1269  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1270  .  .  .  .  .  .  .  .  .  .  .  }\n  1271  .  .  .  .  .  .  .  .  .  .  }\n  1272  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:57\n  1273  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1274  .  .  .  .  .  .  .  .  .  }\n  1275  .  .  .  .  .  .  .  .  .  6: *ast.CompositeLit {\n  1276  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1277  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:3\n  1278  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1279  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1280  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:4\n  1281  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1282  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"unknown even and even, jacobi conjugate\\\"\"\n  1283  .  .  .  .  .  .  .  .  .  .  .  }\n  1284  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1285  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:47\n  1286  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1287  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"18\"\n  1288  .  .  .  .  .  .  .  .  .  .  .  }\n  1289  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1290  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:51\n  1291  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1292  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n  1293  .  .  .  .  .  .  .  .  .  .  .  }\n  1294  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1295  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:54\n  1296  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1297  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1298  .  .  .  .  .  .  .  .  .  .  .  }\n  1299  .  .  .  .  .  .  .  .  .  .  }\n  1300  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:57\n  1301  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1302  .  .  .  .  .  .  .  .  .  }\n  1303  .  .  .  .  .  .  .  .  .  7: *ast.CompositeLit {\n  1304  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1305  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:3\n  1306  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1307  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1308  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:4\n  1309  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1310  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"even and large even, jacobi conjugate\\\"\"\n  1311  .  .  .  .  .  .  .  .  .  .  .  }\n  1312  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1313  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:45\n  1314  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1315  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7056000\"\n  1316  .  .  .  .  .  .  .  .  .  .  .  }\n  1317  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1318  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:54\n  1319  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1320  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"256\"\n  1321  .  .  .  .  .  .  .  .  .  .  .  }\n  1322  .  .  .  .  .  .  .  .  .  .  .  3: *ast.CallExpr {\n  1323  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1324  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:59\n  1326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"fmt\"\n  1327  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1328  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1329  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1330  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:63\n  1331  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1333  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1334  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1335  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:69\n  1336  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  1337  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:70\n  1339  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1340  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Invalid value. k = 7056000, n = 256\\\"\"\n  1341  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1342  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1343  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1344  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:107\n  1345  .  .  .  .  .  .  .  .  .  .  .  }\n  1346  .  .  .  .  .  .  .  .  .  .  }\n  1347  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:108\n  1348  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1349  .  .  .  .  .  .  .  .  .  }\n  1350  .  .  .  .  .  .  .  .  }\n  1351  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:57:2\n  1352  .  .  .  .  .  .  .  .  Incomplete: false\n  1353  .  .  .  .  .  .  .  }\n  1354  .  .  .  .  .  .  }\n  1355  .  .  .  .  .  }\n  1356  .  .  .  .  .  1: *ast.RangeStmt {\n  1357  .  .  .  .  .  .  For: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:2\n  1358  .  .  .  .  .  .  Key: *ast.Ident {\n  1359  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:6\n  1360  .  .  .  .  .  .  .  Name: \"_\"\n  1361  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1362  .  .  .  .  .  .  .  .  Kind: var\n  1363  .  .  .  .  .  .  .  .  Name: \"_\"\n  1364  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {\n  1365  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  1366  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 1358)\n  1367  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  1368  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:9\n  1369  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1370  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1371  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1372  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1373  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1364)\n  1374  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1375  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1376  .  .  .  .  .  .  .  .  .  .  .  }\n  1377  .  .  .  .  .  .  .  .  .  .  }\n  1378  .  .  .  .  .  .  .  .  .  }\n  1379  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:12\n  1380  .  .  .  .  .  .  .  .  .  Tok: :=\n  1381  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  1382  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {\n  1383  .  .  .  .  .  .  .  .  .  .  .  OpPos: -\n  1384  .  .  .  .  .  .  .  .  .  .  .  Op: range\n  1385  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1386  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:21\n  1387  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n  1388  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 963)\n  1389  .  .  .  .  .  .  .  .  .  .  .  }\n  1390  .  .  .  .  .  .  .  .  .  .  }\n  1391  .  .  .  .  .  .  .  .  .  }\n  1392  .  .  .  .  .  .  .  .  }\n  1393  .  .  .  .  .  .  .  .  Data: nil\n  1394  .  .  .  .  .  .  .  .  Type: nil\n  1395  .  .  .  .  .  .  .  }\n  1396  .  .  .  .  .  .  }\n  1397  .  .  .  .  .  .  Value: *(obj @ 1367)\n  1398  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:12\n  1399  .  .  .  .  .  .  Tok: :=\n  1400  .  .  .  .  .  .  Range: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:15\n  1401  .  .  .  .  .  .  X: *(obj @ 1385)\n  1402  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1403  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:27\n  1404  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1405  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  1406  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1407  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1408  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1409  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:3\n  1410  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1411  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 923)\n  1412  .  .  .  .  .  .  .  .  .  .  .  }\n  1413  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1414  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:5\n  1415  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Run\"\n  1416  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1417  .  .  .  .  .  .  .  .  .  .  .  }\n  1418  .  .  .  .  .  .  .  .  .  .  }\n  1419  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:8\n  1420  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  1421  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  1422  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1423  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:9\n  1424  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1425  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1426  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1427  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1428  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:12\n  1429  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  1430  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1431  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1432  .  .  .  .  .  .  .  . 
2024/07/30 07:40:23  .  .  .  }\n  1433  .  .  .  .  .  .  .  .  .  .  .  1: *ast.FuncLit {\n  1434  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n  1435  .  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:18\n  1436  .  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n  1437  .  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n  1438  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:22\n  1439  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1440  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n  1441  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1442  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1443  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1444  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:23\n  1445  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1446  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1447  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1448  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1449  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1440)\n  1450  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1451  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n  1456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:25\n  1457  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  1458  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:26\n  1460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n  1461  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1462  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1463  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:34\n  1465  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n  1466  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1467  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1468  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1469  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1470  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1471  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1472  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1473  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1474  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:35\n  1475  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1476  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil\n  1477  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1478  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1479  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:37\n  1480  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {\n  1481  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n  1482  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  1483  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1484  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:4\n  1485  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n  1486  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1487  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1488  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n  1489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1481)\n  1490  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1491  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1492  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1493  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1494  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  1495  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:9\n  1496  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1497  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1498  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1499  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1500  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1481)\n  1501  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1502  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1503  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1504  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1505  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1506  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:13\n  1507  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n  1508  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  1509  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  1510  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  1511  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:16\n  1512  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"jacobiSymbol\"\n  1513  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1514  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1515  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:28\n  1516  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  1517  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  1518  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1519  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:29\n  1520  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1521  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1522  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1523  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1524  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:32\n  1525  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1526  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:35\n  1532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1535  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1536  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:38\n  1537  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:39\n  1544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n  1548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:4\n  1549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n  1550  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  1551  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1552  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:7\n  1553  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1554  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1497)\n  1555  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1556  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:11\n  1557  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ==\n  1558  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  1559  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:14\n  1560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:18\n  1566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  1568  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1569  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1570  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1571  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:5\n  1572  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1573  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1446)\n  1574  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1575  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1576  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:7\n  1577  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1578  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1579  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1580  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1581  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:13\n  1582  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 4) {\n  1583  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1584  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:14\n  1585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" jacobiSymbol(%d, %d) error = %v, want error\\\"\"\n  1587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1588  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1589  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:62\n  1591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:65\n  1596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n  1601  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:68\n  1603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:71\n  1608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:74\n  1614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n  1615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1486)\n  1616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:77\n  1620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:64:4\n  1624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n  1626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {\n  1628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:4\n  1629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n  1630  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n  1631  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:6\n  1632  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !\n  1633  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1634  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1635  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1636  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:7\n  1637  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  1638  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1639  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1640  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1641  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:14\n  1642  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Is\"\n  1643  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1644  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1645  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1646  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:16\n  1647  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  1648  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1649  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:17\n  1650  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1651  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1497)\n  1652  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1653  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:22\n  1656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1657  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:25\n  1661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:29\n  1668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:31\n  1672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  1674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:5\n  1678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1446)\n  1680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:7\n  1683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:13\n  1688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 5) {\n  1689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:14\n  1691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"jacobiSymbol(%d, %d) error = %v, want %v\\\"\"\n  1693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:58\n  1697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:61\n  1702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n  1707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:64\n  1709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:67\n  1714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:70\n  1720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1497)\n  1722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.SelectorExpr {\n  1724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:75\n  1726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:78\n  1731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:82\n  1738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:67:4\n  1742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n  1744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1745  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1746  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:68:3\n  1747  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1748  .  .  .  .  .  .  .  .  .  .  .  }\n  1749  .  .  .  .  .  .  .  .  .  .  }\n  1750  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1751  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:68:4\n  1752  .  .  .  .  .  .  .  .  .  }\n  1753  .  .  .  .  .  .  .  .  }\n  1754  .  .  .  .  .  .  .  }\n  1755  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:69:2\n  1756  .  .  .  .  .  .  }\n  1757  .  .  .  .  .  }\n  1758  .  .  .  .  }\n  1759  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:70:1\n  1760  .  .  .  }\n  1761  .  .  }\n  1762  .  .  3: *ast.FuncDecl {\n  1763  .  .  .  Doc: nil\n  1764  .  .  .  Recv: *ast.FieldList {\n  1765  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:6\n  1766  .  .  .  .  List: []*ast.Field (len = 1) {\n  1767  .  .  .  .  .  0: *ast.Field {\n  1768  .  .  .  .  .  .  Doc: nil\n  1769  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1770  .  .  .  .  .  .  .  0: *ast.Ident {\n  1771  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:7\n  1772  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1773  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1774  .  .  .  .  .  .  .  .  .  Kind: var\n  1775  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1776  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1767)\n  1777  .  .  .  .  .  .  .  .  .  Data: nil\n  1778  .  .  .  .  .  .  .  .  .  Type: nil\n  1779  .  .  .  .  .  .  .  .  }\n  1780  .  .  .  .  .  .  .  }\n  1781  .  .  .  .  .  .  }\n  1782  .  .  .  .  .  .  Type: *ast.StarExpr {\n  1783  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:10\n  1784  .  .  .  .  .  .  .  X: *ast.Ident {\n  1785  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:11\n  1786  .  .  .  .  .  .  .  .  Name: \"TestJacobiSymbolFailingPath\"\n  1787  .  .  .  .  .  .  .  .  Obj: *(obj @ 903)\n  1788  .  .  .  .  .  .  .  }\n  1789  .  .  .  .  .  .  }\n  1790  .  .  .  .  .  .  Tag: nil\n  1791  .  .  .  .  .  .  Comment: nil\n  1792  .  .  .  .  .  }\n  1793  .  .  .  .  }\n  1794  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:38\n  1795  .  .  .  }\n  1796  .  .  .  Name: *ast.Ident {\n  1797  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:40\n  1798  .  .  .  .  Name: \"wantError\"\n  1799  .  .  .  .  Obj: nil\n  1800  .  .  .  }\n  1801  .  .  .  Type: *ast.FuncType {\n  1802  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:1\n  1803  .  .  .  .  TypeParams: nil\n  1804  .  .  .  .  Params: *ast.FieldList {\n  1805  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:49\n  1806  .  .  .  .  .  List: nil\n  1807  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:50\n  1808  .  .  .  .  }\n  1809  .  .  .  .  Results: *ast.FieldList {\n  1810  .  .  .  .  .  Opening: -\n  1811  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1812  .  .  .  .  .  .  0: *ast.Field {\n  1813  .  .  .  .  .  .  .  Doc: nil\n  1814  .  .  .  .  .  .  .  Names: nil\n  1815  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1816  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:52\n  1817  .  .  .  .  .  .  .  .  Name: \"bool\"\n  1818  .  .  .  .  .  .  .  .  Obj: nil\n  1819  .  .  .  .  .  .  .  }\n  1820  .  .  .  .  .  .  .  Tag: nil\n  1821  .  .  .  .  .  .  .  Comment: nil\n  1822  .  .  .  .  .  .  }\n  1823  .  .  .  .  .  }\n  1824  .  .  .  .  .  Closing: -\n  1825  .  .  .  .  }\n  1826  .  .  .  }\n  1827  .  .  .  Body: *ast.BlockStmt {\n  1828  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:57\n  1829  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1830  .  .  .  .  .  0: *ast.ReturnStmt {\n  1831  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:2\n  1832  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  1833  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  1834  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  1835  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1836  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:9\n  1837  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1838  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1773)\n  1839  .  .  .  .  .  .  .  .  .  }\n  1840  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1841  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:12\n  1842  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1843  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1844  .  .  .  .  .  .  .  .  .  }\n  1845  .  .  .  .  .  .  .  .  }\n  1846  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:17\n  1847  .  .  .  .  .  .  .  .  Op: ==\n  1848  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  1849  .  .  .  .  .  .  .  
2024/07/30 07:40:23 .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:20\n  1850  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1851  .  .  .  .  .  .  .  .  .  Obj: nil\n  1852  .  .  .  .  .  .  .  .  }\n  1853  .  .  .  .  .  .  .  }\n  1854  .  .  .  .  .  .  }\n  1855  .  .  .  .  .  }\n  1856  .  .  .  .  }\n  1857  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:74:1\n  1858  .  .  .  }\n  1859  .  .  }\n  1860  .  .  4: *ast.FuncDecl {\n  1861  .  .  .  Doc: nil\n  1862  .  .  .  Recv: nil\n  1863  .  .  .  Name: *ast.Ident {\n  1864  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:6\n  1865  .  .  .  .  Name: \"TestMain\"\n  1866  .  .  .  .  Obj: *ast.Object {\n  1867  .  .  .  .  .  Kind: func\n  1868  .  .  .  .  .  Name: \"TestMain\"\n  1869  .  .  .  .  .  Decl: *(obj @ 1860)\n  1870  .  .  .  .  .  Data: nil\n  1871  .  .  .  .  .  Type: nil\n  1872  .  .  .  .  }\n  1873  .  .  .  }\n  1874  .  .  .  Type: *ast.FuncType {\n  1875  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:1\n  1876  .  .  .  .  TypeParams: nil\n  1877  .  .  .  .  Params: *ast.FieldList {\n  1878  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:14\n  1879  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1880  .  .  .  .  .  .  0: *ast.Field {\n  1881  .  .  .  .  .  .  .  Doc: nil\n  1882  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1883  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1884  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:15\n  1885  .  .  .  .  .  .  .  .  .  Name: \"m\"\n  1886  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1887  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1888  .  .  .  .  .  .  .  .  .  .  Name: \"m\"\n  1889  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1880)\n  1890  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1891  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1892  .  .  .  .  .  .  .  .  .  }\n  1893  .  .  .  .  .  .  .  .  }\n  1894  .  .  .  .  .  .  .  }\n  1895  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n  1896  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:17\n  1897  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  1898  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1899  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:18\n  1900  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n  1901  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1902  .  .  .  .  .  .  .  .  .  }\n  1903  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1904  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:26\n  1905  .  .  .  .  .  .  .  .  .  .  Name: \"M\"\n  1906  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1907  .  .  .  .  .  .  .  .  .  }\n  1908  .  .  .  .  .  .  .  .  }\n  1909  .  .  .  .  .  .  .  }\n  1910  .  .  .  .  .  .  .  Tag: nil\n  1911  .  .  .  .  .  .  .  Comment: nil\n  1912  .  .  .  .  .  .  }\n  1913  .  .  .  .  .  }\n  1914  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:27\n  1915  .  .  .  .  }\n  1916  .  .  .  .  Results: nil\n  1917  .  .  .  }\n  1918  .  .  .  Body: *ast.BlockStmt {\n  1919  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:29\n  1920  .  .  .  .  List: []ast.Stmt (len = 8) {\n  1921  .  .  .  .  .  0: *ast.AssignStmt {\n  1922  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  1923  .  .  .  .  .  .  .  0: *ast.Ident {\n  1924  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:2\n  1925  .  .  .  .  .  .  .  .  Name: \"root\"\n  1926  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1927  .  .  .  .  .  .  .  .  .  Kind: var\n  1928  .  .  .  .  .  .  .  .  .  Name: \"root\"\n  1929  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1921)\n  1930  .  .  .  .  .  .  .  .  .  Data: nil\n  1931  .  .  .  .  .  .  .  .  .  Type: nil\n  1932  .  .  .  .  .  .  .  .  }\n  1933  .  .  .  .  .  .  .  }\n  1934  .  .  .  .  .  .  }\n  1935  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:7\n  1936  .  .  .  .  .  .  Tok: :=\n  1937  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  1938  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  1939  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  1940  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:10\n  1941  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  1942  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1943  .  .  .  .  .  .  .  .  .  .  Kind: func\n  1944  .  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  1945  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {\n  1946  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1947  .  .  .  .  .  .  .  .  .  .  .  Recv: nil\n  1948  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {\n  1949  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:6\n  1950  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  1951  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1942)\n  1952  .  .  .  .  .  .  .  .  .  .  .  }\n  1953  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n  1954  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:1\n  1955  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n  1956  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n  1957  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:19\n  1958  .  .  .  .  .  .  .  .  .  .  .  .  .  List: nil\n  1959  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:20\n  1960  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1961  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {\n  1962  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: -\n  1963  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n  1965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil\n  1967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1968  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:22\n  1969  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1970  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1971  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1972  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1973  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1974  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1975  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1976  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: -\n  1977  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1978  .  .  .  .  .  .  .  .  .  .  .  }\n  1979  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1980  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:29\n  1981  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 4) {\n  1982  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n  1983  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  1984  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1985  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:2\n  1986  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"pwd\"\n  1987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"pwd\"\n  1990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1982)\n  1991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  1996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:7\n  1997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1982)\n  2002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:11\n  2008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n  2009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:14\n  2014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:17\n  2019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Getwd\"\n  2020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:22\n  2024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  2025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2026  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:23\n  2027  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2028  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2029  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2030  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n  2031  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:2\n  2032  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n  2033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:5\n  2036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1998)\n  2038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:8\n  2040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=\n  2041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:11\n  2043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:15\n  2049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:124:3\n  2052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  2053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:124:10\n  2055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" obs/\\\\_test\\\\_.go failure!\\\"\"\n  2057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:125:2\n  2062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n  2064  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2065  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.AssignStmt {\n  2066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:2\n  2069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2072  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2073  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2065)\n  2074  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2075  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2076  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2077  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2078  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2079  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:11\n  2080  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n  2081  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2082  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2083  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2084  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2085  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:14\n  2086  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"strings\"\n  2087  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2088  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2089  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2090  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:22\n  2091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Split\"\n  2092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:27\n  2096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  2097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:28\n  2099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"pwd\"\n  2100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1987)\n  2101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {\n  2103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:33\n  2105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  2106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:39\n  2109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  2111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:40\n  2113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2116  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2117  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:43\n  2118  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"PathSeparator\"\n  2119  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2122  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2123  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2124  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:56\n  2125  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:57\n  2129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2131  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2132  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.ReturnStmt {\n  2133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:2\n  2134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  2135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:9\n  2139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"strings\"\n  2140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:17\n  2144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Join\"\n  2145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:21\n  2149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  2150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SliceExpr {\n  2151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2152  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:22\n  2153  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2154  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2070)\n  2155  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2156  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:30\n  2157  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Low: nil\n  2158  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  High: *ast.BinaryExpr {\n  2159  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2160  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2161  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:32\n  2162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"len\"\n  2163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2165  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:35\n  2166  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2168  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:36\n  2169  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2170  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2070)\n  2171  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2172  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2173  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:44\n  2175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:45\n  2177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: -\n  2178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:46\n  2180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  2181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n  2182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Max: nil\n  2185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Slice3: false\n  2186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:47\n  2187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {\n  2189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:50\n  2191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  2192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:56\n  2195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  2197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:57\n  2199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:60\n  2204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"PathSeparator\"\n  2205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2208  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2209  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2210  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:73\n  2211  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2213  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2214  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:74\n  2215  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2216  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2217  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2218  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2219  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:128:1\n  2220  .  .  .  .  .  .  .  .  .  .  .  }\n  2221  .  .  .  .  .  .  .  .  .  .  }\n  2222  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2223  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2224  .  .  .  .  .  .  .  .  .  }\n  2225  .  .  .  .  .  .  .  .  }\n  2226  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:23\n  2227  .  .  .  .  .  .  .  .  Args: nil\n  2228  .  .  .  .  .  .  .  .  Ellipsis: -\n  2229  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:24\n  2230  .  .  .  .  .  .  .  }\n  2231  .  .  .  .  .  .  }\n  2232  .  .  .  .  .  }\n  2233  .  .  .  .  .  1: *ast.AssignStmt {\n  2234  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2235  .  .  .  .  .  .  .  0: *ast.Ident {\n  2236  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:2\n  2237  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2238  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2239  .  .  .  .  .  .  .  .  .  Kind: var\n  2240  .  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2241  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2233)\n  2242  .  .  .  .  .  .  .  .  .  Data: nil\n  2243  .  .  .  .  .  .  .  .  .  Type: nil\n  2244  .  .  .  .  .  .  .  .  }\n  2245  .  .  .  .  .  .  .  }\n  2246  .  .  .  .  .  .  }\n  2247  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:12\n  2248  .  .  .  .  .  .  Tok: :=\n  2249  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2250  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  2251  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2252  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2253  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:15\n  2254  .  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  2255  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1942)\n  2256  .  .  .  .  .  .  .  .  .  }\n  2257  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:28\n  2258  .  .  .  .  .  .  .  .  .  Args: nil\n  2259  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2260  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:29\n  2261  .  .  .  .  .  .  .  .  }\n  2262  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:31\n  2263  .  .  .  .  .  .  .  .  Op: +\n  2264  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2265  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:33\n  2266  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2267  .  .  .  .  .  .  .  .  .  Value: \"\\\"/obs.md\\\"\"\n  2268  .  .  .  .  .  .  .  .  }\n  2269  .  .  .  .  .  .  .  }\n  2270  .  .  .  .  .  .  }\n  2271  .  .  .  .  .  }\n  2272  .  .  .  .  .  2: *ast.AssignStmt {\n  2273  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2274  .  .  .  .  .  .  .  0: *ast.Ident {\n  2275  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:2\n  2276  .  .  .  .  .  .  .  .  Name: \"err\"\n  2277  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2278  .  .  .  .  .  .  .  .  .  Kind: var\n  2279  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2280  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2272)\n  2281  .  .  .  .  .  .  .  .  .  Data: nil\n  2282  .  .  .  .  .  .  .  .  .  Type: nil\n  2283  .  .  .  .  .  .  .  .  }\n  2284  .  .  .  .  .  .  .  }\n  2285  .  .  .  .  .  .  }\n  2286  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:6\n  2287  .  .  .  .  .  .  Tok: :=\n  2288  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2289  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2290  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2291  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2292  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:9\n  2293  .  .  .  .  .  .  .  .  .  .  Name: \"ioutil\"\n  2294  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2295  .  .  .  .  .  .  .  .  .  }\n  2296  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2297  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:16\n  2298  .  .  .  .  .  .  .  .  .  .  Name: \"WriteFile\"\n  2299  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2300  .  .  .  .  .  .  .  .  .  }\n  2301  .  .  .  .  .  .  .  .  }\n  2302  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:25\n  2303  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {\n  2304  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2305  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:26\n  2306  .  .  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2307  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2238)\n  2308  .  .  .  .  .  .  .  .  .  }\n  2309  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {\n  2310  .  .  .  .  .  .  .  .  .  .  Fun: *ast.ArrayType {\n  2311  
2024/07/30 07:40:23 .  .  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:37\n  2312  .  .  .  .  .  .  .  .  .  .  .  Len: nil\n  2313  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {\n  2314  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:39\n  2315  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"byte\"\n  2316  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2317  .  .  .  .  .  .  .  .  .  .  .  }\n  2318  .  .  .  .  .  .  .  .  .  .  }\n  2319  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:43\n  2320  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2321  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  2322  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {\n  2323  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n  2324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:44\n  2325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"```\\\\n\\\"\"\n  2327  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2328  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:51\n  2329  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  2330  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {\n  2331  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:52\n  2333  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nativeObs\"\n  2334  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2335  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func\n  2336  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nativeObs\"\n  2337  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {\n  2338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  2339  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Recv: nil\n  2340  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {\n  2341  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:6\n  2342  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nativeObs\"\n  2343  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2334)\n  2344  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2345  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n  2346  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:1\n  2347  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n  2348  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n  2349  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:15\n  2350  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: nil\n  2351  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:16\n  2352  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2353  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {\n  2354  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: -\n  2355  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  2356  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n  2357  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  2358  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil\n  2359  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2360  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:18\n  2361  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  2362  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2363  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2364  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  2365  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  2366  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2367  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2368  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: -\n  2369  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2370  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2371  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2372  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:25\n  2373  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2374  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2375  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:94:2\n  2376  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  2377  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2378  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:94:9\n  2379  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2380  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"\\\"\"\n  2381  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2382  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2383  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2384  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2385  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:95:1\n  2386  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2391  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2392  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:61\n  2393  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  2394  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2395  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:62\n  2396  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2397  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2398  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:63\n  2399  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  2400  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2401  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:64\n  2402  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2403  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"\\\\n```\\\"\"\n  2404  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2405  .  .  .  .  .  .  .  .  .  .  .  }\n  2406  .  .  .  .  .  .  .  .  .  .  }\n  2407  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2408  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:71\n  2409  .  .  .  .  .  .  .  .  .  }\n  2410  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  2411  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:74\n  2412  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  2413  .  .  .  .  .  .  .  .  .  .  Value: \"0644\"\n  2414  .  .  .  .  .  .  .  .  .  }\n  2415  .  .  .  .  .  .  .  .  }\n  2416  .  .  .  .  .  .  .  .  Ellipsis: -\n  2417  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:78\n  2418  .  .  .  .  .  .  .  }\n  2419  .  .  .  .  .  .  }\n  2420  .  .  .  .  .  }\n  2421  .  .  .  .  .  3: *ast.IfStmt {\n  2422  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:2\n  2423  .  .  .  .  .  .  Init: nil\n  2424  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2425  .  .  .  .  .  .  .  X: *ast.Ident {\n  2426  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:5\n  2427  .  .  .  .  .  .  .  .  Name: \"err\"\n  2428  .  .  .  .  .  .  .  .  Obj: *(obj @ 2277)\n  2429  .  .  .  .  .  .  .  }\n  2430  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:8\n  2431  .  .  .  .  .  .  .  Op: !=\n  2432  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2433  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:11\n  2434  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2435  .  .  .  .  .  .  .  .  Obj: nil\n  2436  .  .  .  .  .  .  .  }\n  2437  .  .  .  .  .  .  }\n  2438  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2439  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:15\n  2440  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2441  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  2442  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2443  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2444  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2445  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:3\n  2446  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  2447  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2448  .  .  .  .  .  .  .  .  .  .  .  }\n  2449  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2450  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:5\n  2451  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Fatal\"\n  2452  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2453  .  .  .  .  .  .  .  .  .  .  .  }\n  2454  .  .  .  .  .  .  .  .  .  .  }\n  2455  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:10\n  2456  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2457  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2458  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:11\n  2459  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2460  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2277)\n  2461  .  .  .  .  .  .  .  .  .  .  .  }\n  2462  .  .  .  .  .  .  .  .  .  .  }\n  2463  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2464  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:14\n  2465  .  .  .  .  .  .  .  .  .  }\n  2466  .  .  .  .  .  .  .  .  }\n  2467  .  .  .  .  .  .  .  }\n  2468  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:82:2\n  2469  .  .  .  .  .  .  }\n  2470  .  .  .  .  .  .  Else: nil\n  2471  .  .  .  .  .  }\n  2472  .  .  .  .  .  4: *ast.DeferStmt {\n  2473  .  .  .  .  .  .  Defer: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:2\n  2474  .  .  .  .  .  .  Call: *ast.CallExpr {\n  2475  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2476  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2477  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:8\n  2478  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2479  .  .  .  .  .  .  .  .  .  Obj: nil\n  2480  .  .  .  .  .  .  .  .  }\n  2481  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2482  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:11\n  2483  .  .  .  .  .  .  .  .  .  Name: \"Remove\"\n  2484  .  .  .  .  .  .  .  .  .  Obj: nil\n  2485  .  .  .  .  .  .  .  .  }\n  2486  .  .  .  .  .  .  .  }\n  2487  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:17\n  2488  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2489  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2490  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:18\n  2491  .  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2492  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2238)\n  2493  .  .  .  .  .  .  .  .  }\n  2494  .  .  .  .  .  .  .  }\n  2495  .  .  .  .  .  .  .  Ellipsis: -\n  2496  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:27\n  2497  .  .  .  .  .  .  }\n  2498  .  .  .  .  .  }\n  2499  .  .  .  .  .  5: *ast.AssignStmt {\n  2500  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2501  .  .  .  .  .  .  .  0: *ast.Ident {\n  2502  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:2\n  2503  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2504  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2505  .  .  .  .  .  .  .  .  .  Kind: var\n  2506  .  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2507  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2499)\n  2508  .  .  .  .  .  .  .  .  .  Data: nil\n  2509  .  .  .  .  .  .  .  .  .  Type: nil\n  2510  .  .  .  .  .  .  .  .  }\n  2511  .  .  .  .  .  .  .  }\n  2512  .  .  .  .  .  .  }\n  2513  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:6\n  2514  .  .  .  .  .  .  Tok: :=\n  2515  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2516  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2517  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2518  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2519  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:9\n  2520  .  .  .  .  .  .  .  .  .  .  Name: \"m\"\n  2521  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1886)\n  2522  .  .  .  .  .  .  .  .  .  }\n  2523  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2524  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:11\n  2525  .  .  .  .  .  .  .  .  .  .  Name: \"Run\"\n  2526  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2527  .  .  .  .  .  .  .  .  .  }\n  2528  .  .  .  .  .  .  .  .  }\n  2529  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:14\n  2530  .  .  .  .  .  .  .  .  Args: nil\n  2531  .  .  .  .  .  .  .  .  Ellipsis: -\n  2532  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:15\n  2533  .  .  .  .  .  .  .  }\n  2534  .  .  .  .  .  .  }\n  2535  .  .  .  .  .  }\n  2536  .  .  .  .  .  6: *ast.IfStmt {\n  2537  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:2\n  2538  .  .  .  .  .  .  Init: nil\n  2539  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2540  .  .  .  .  .  .  .  X: *ast.Ident {\n  2541  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:5\n  2542  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2543  .  .  .  .  .  .  .  .  Obj: *(obj @ 2504)\n  2544  .  .  .  .  .  .  .  }\n  2545  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:9\n  2546  .  .  .  .  .  .  .  Op: ==\n  2547  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2548  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:12\n  2549  .  .  .  .  .  .  .  .  Kind: INT\n  2550  .  .  .  .  .  .  .  .  Value: \"0\"\n  2551  .  .  .  .  .  .  .  }\n  2552  .  .  .  .  .  .  }\n  2553  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2554  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:14\n  2555  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2556  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  2557  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2558  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2559  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2560  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:3\n  2561  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  2562  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2563  .  .  .  .  .  .  .  .  .  .  .  }\n  2564  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2565  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:5\n  2566  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Skip\"\n  2567  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2568  .  .  .  .  .  .  .  .  .  .  .  }\n  2569  .  .  .  .  .  .  .  .  .  .  }\n  2570  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:9\n  2571  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2572  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2573  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:10\n  2574  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2575  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"obs/\\\\_test\\\\_.go observed jacobi symbol error\\\"\"\n  2576  .  .  .  .  .  .  .  .  .  .  .  }\n  2577  .  .  .  .  .  .  .  .  .  .  }\n  2578  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2579  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:56\n  2580  .  .  .  .  .  .  .  .  .  }\n  2581  .  .  .  .  .  .  .  .  }\n  2582  .  .  .  .  .  .  .  }\n  2583  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:87:2\n  2584  .  .  .  .  .  .  }\n  2585  .  .  .  .  .  .  Else: nil\n  2586  .  .  .  .  .  }\n  2587  .  .  .  .  .  7: *ast.ExprStmt {\n  2588  .  .  .  .  .  .  X: *ast.CallExpr {\n  2589  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2590  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2591  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:2\n  2592  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2593  .  .  .  .  .  .  .  .  .  Obj: nil\n  2594  .  .  .  .  .  .  .  .  }\n  2595  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2596  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:5\n  2597  .  .  .  .  .  .  .  .  .  Name: \"Exit\"\n  2598  .  .  .  .  .  .  .  .  .  Obj: nil\n  2599  .  .  .  .  .  .  .  .  }\n  2600  .  .  .  .  .  .  .  }\n  2601  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:9\n  2602  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2603  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2604  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:10\n  2605  .  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2606  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2504)\n  2607  .  .  .  .  .  .  .  .  }\n  2608  .  .  .  .  .  .  .  }\n  2609  .  .  .  .  .  .  .  Ellipsis: -\n  2610  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:13\n  2611  .  .  .  .  .  .  }\n  2612  .  .  .  .  .  }\n  2613  .  .  .  .  }\n  2614  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:89:1\n  2615  .  .  .  }\n  2616  .  .  }\n  2617  .  .  5: *(obj @ 2337)\n  2618  .  .  6: *ast.FuncDecl {\n  2619  .  .  .  Doc: nil\n  2620  .  .  .  Recv: nil\n  2621  .  .  .  Name: *ast.Ident {\n  2622  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:6\n  2623  .  .  .  .  Name: \"isOddBinaryFile\"\n  2624  .  .  .  .  Obj: *ast.Object {\n  2625  .  .  .  .  .  Kind: func\n  2626  .  .  .  .  .  Name: \"isOddBinaryFile\"\n  2627  .  .  .  .  .  Decl: *(obj @ 2618)\n  2628  .  .  .  .  .  Data: nil\n  2629  .  .  .  .  .  Type: nil\n  2630  .  .  .  .  }\n  2631  .  .  .  }\n  2632  .  .  .  Type: *ast.FuncType {\n  2633  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:1\n  2634  .  .  .  .  TypeParams: nil\n  2635  .  .  .  .  Params: *ast.FieldList {\n  2636  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:21\n  2637  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  2638  .  .  .  .  .  .  0: *ast.Field {\n  2639  .  .  .  .  .  .  .  Doc: nil\n  2640  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  2641  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2642  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:22\n  2643  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  2644  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2645  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2646  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  2647  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2638)\n  2648  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2649  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2650  .  .  .  .  .  .  .  .  .  }\n  2651  .  .  .  .  .  .  .  .  }\n  2652  .  .  .  .  .  .  .  }\n  2653  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2654  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:27\n  2655  .  .  .  .  .  .  .  .  Name: \"DirName\"\n  2656  .  .  .  .  .  .  .  .  Obj: nil\n  2657  .  .  .  .  .  .  .  }\n  2658  .  .  .  .  .  .  .  Tag: nil\n  2659  .  .  .  .  .  .  .  Comment: nil\n  2660  .  .  .  .  .  .  }\n  2661  .  .  .  .  .  }\n  2662  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:34\n  2663  .  .  .  .  }\n  2664  .  .  .  .  Results: *ast.FieldList {\n  2665  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:36\n  2666  .  .  .  .  .  List: []*ast.Field (len = 2) {\n  2667  .  .  .  .  .  .  0: *ast.Field {\n  2668  .  .  .  .  .  .  .  Doc: nil\n  2669  .  .  .  .  .  .  .  Names: nil\n  2670  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2671  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:37\n  2672  .  .  .  .  .  .  .  .  Name: \"bool\"\n  2673  .  .  .  .  .  .  .  .  Obj: nil\n  2674  .  .  .  .  .  .  .  }\n  2675  .  .  .  .  .  .  .  Tag: nil\n  2676  .  .  .  .  .  .  .  Comment: nil\n  2677  .  .  .  .  .  .  }\n  2678  .  .  .  .  .  .  1: *ast.Field {\n  2679  .  .  .  .  .  .  .  Doc: nil\n  2680  .  .  .  .  .  .  .  Names: nil\n  2681  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2682  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:43\n  2683  .  .  .  .  .  .  .  .  Name: \"error\"\n  2684  .  .  .  .  .  .  .  .  Obj: nil\n  2685  .  .  .  .  .  .  .  }\n  2686  .  .  .  .  .  .  .  Tag: nil\n  2687  .  .  .  .  .  .  .  Comment: nil\n  2688  .  .  .  .  .  .  }\n  2689  .  .  .  .  .  }\n  2690  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:48\n  2691  .  .  .  .  }\n  2692  .  .  .  }\n  2693  .  .  .  Body: *ast.BlockStmt {\n  2694  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:50\n  2695  .  .  .  .  List: []ast.Stmt (len = 4) {\n  2696  .  .  .  .  .  0: *ast.AssignStmt {\n  2697  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  2698  .  .  .  .  .  .  .  0: *ast.Ident {\n  2699  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:2\n  2700  .  .  .  .  .  .  .  .  Name: \"b\"\n  2701  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2702  .  .  .  .  .  .  .  .  .  Kind: var\n  2703  .  .  .  .  .  .  .  .  .  Name: \"b\"\n  2704  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2696)\n  2705  .  .  .  .  .  .  .  .  .  Data: nil\n  2706  .  .  .  .  .  .  .  .  .  Type: nil\n  2707  .  .  .  .  .  .  .  .  }\n  2708  .  .  .  .  .  .  .  }\n  2709  .  .  .  .  .  .  .  1: *ast.Ident {\n  2710  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:5\n  2711  .  .  .  .  .  .  .  .  Name: \"err\"\n  2712  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2713  .  .  .  .  .  .  .  .  .  Kind: var\n  2714  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2715  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2696)\n  2716  .  .  .  .  .  .  .  .  .  Data: nil\n  2717  .  .  .  .  .  .  .  .  .  Type: nil\n  2718  .  .  .  .  .  .  .  .  }\n  2719  .  .  .  .  .  .  .  }\n  2720  .  .  .  .  .  .  }\n  2721  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:9\n  2722  .  .  .  .  .  .  Tok: :=\n  2723  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2724  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2725  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2726  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2727  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:12\n  2728  .  .  .  .  .  .  .  .  .  .  Name: \"ioutil\"\n  2729  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2730  .  .  .  .  .  .  .  .  .  }\n  2731  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2732  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:19\n  2733  .  .  .  .  .  .  .  .  .  .  Name: \"ReadFile\"\n  2734  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2735  .  .  .  .  .  .  .  .  .  }\n  2736  .  .  .  .  .  .  .  .  }\n  2737  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:27\n  2738  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2739  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2740  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2741  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2742  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:28\n  2743  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  2744  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2644)\n  2745  .  .  .  .  .  .  .  .  .  .  .  }\n  2746  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2747  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:33\n  2748  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"inner\"\n  2749  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2750  .  .  .  .  .  .  .  .  .  .  .  }\n  2751  .  .  .  .  .  .  .  .  .  .  }\n  2752  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:38\n  2753  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2754  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2755  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2756  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:39\n  2757  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"errDir\"\n  2758  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2759  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2760  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:45\n  2761  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  2762  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2763  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:46\n  2764  .  .  .  .  .  .  .  .  .  .  .  }\n  2765  .  .  .  .  .  .  .  .  .  .  }\n  2766  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2767  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:47\n  2768  .  .  .  .  .  .  .  .  .  }\n  2769  .  .  .  .  .  .  .  .  }\n  2770  .  .  .  .  .  .  .  .  Ellipsis: -\n  2771  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:48\n  2772  .  .  .  .  .  .  .  }\n  2773  .  .  .  .  .  .  }\n  2774  .  .  .  .  .  }\n  2775  .  .  .  .  .  1: *ast.IfStmt {\n  2776  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:2\n  2777  .  .  .  .  .  .  Init: nil\n  2778  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2779  .  .  .  .  .  .  .  X: *ast.Ident {\n  2780  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:5\n  2781  .  .  .  .  .  .  .  .  Name: \"err\"\n  2782  .  .  .  .  .  .  .  .  Obj: *(obj @ 2712)\n  2783  .  .  .  .  .  .  .  }\n  2784  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:8\n  2785  .  .  .  .  .  .  .  Op: !=\n  2786  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2787  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:11\n  2788  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2789  .  .  .  .  .  .  .  .  Obj: nil\n  2790  .  .  .  .  .  .  .  }\n  2791  .  .  .  .  .  .  }\n  2792  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2793  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:15\n  2794  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2795  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2796  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:100:3\n  2797  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  2798  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2799  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:100:10\n  2800  .  .  .  .  .  .  .  .  .  .  .  Name: \"false\"\n  2801  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2802  .  .  .  .  .  .  .  .  .  .  }\n  2803  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  2804  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:100:17\n  2805  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2806  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2712)\n  2807  .  .  .  .  .  .  .  .  .  .  }\n  2808  .  .  .  .  .  .  .  .  .  }\n  2809  .  .  .  .  .  .  .  .  }\n  2810  .  .  .  .  .  .  .  }\n  2811  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:101:2\n  2812  .  .  .  .  .  .  }\n  2813  .  .  .  .  .  .  Else: nil\n  2814  .  .  .  .  .  }\n  2815  .  .  .  .  .  2: *ast.ForStmt {\n  2816  .  .  .  .  .  .  For: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:2\n  2817  .  .  .  .  .  .  Init: *ast.AssignStmt {\n  2818  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2819  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2820  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:6\n  2821  .  .  .  .  .  .  .  .  .  Name: \"i\"\n  2822  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2823  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2824  .  .  .  .  .  .  .  .  .  .  Name: \"i\"\n  2825  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2817)\n  2826  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2827  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2828  .  .  .  .  .  .  .  .  .  }\n  2829  .  .  .  .  .  .  .  .  }\n  2830  .  .  .  .  .  .  .  }\n  2831  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:8\n  2832  .  .  .  .  .  .  .  Tok: :=\n  2833  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2834  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2835  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:11\n  2836  .  .  .  .  .  .  .  .  .  Kind: INT\n  2837  .  .  .  .  .  .  .  .  .  Value: \"0\"\n  2838  .  .  .  .  .  .  .  .  }\n  2839  .  .  .  .  .  .  .  }\n  2840  .  .  .  .  .  .  }\n  2841  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2842  .  .  .  .  .  .  .  X: *ast.Ident {\n  2843  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:14\n  2844  .  .  .  .  .  .  .  .  Name: \"i\"\n  2845  .  .  .  .  .  .  .  .  Obj: *(obj @ 2822)\n  2846  .  .  .  .  .  .  .  }\n  2847  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.
2024/07/30 07:40:23 go:102:16\n  2848  .  .  .  .  .  .  .  Op: <\n  2849  .  .  .  .  .  .  .  Y: *ast.CallExpr {\n  2850  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2851  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:18\n  2852  .  .  .  .  .  .  .  .  .  Name: \"len\"\n  2853  .  .  .  .  .  .  .  .  .  Obj: nil\n  2854  .  .  .  .  .  .  .  .  }\n  2855  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:21\n  2856  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2857  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2858  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:22\n  2859  .  .  .  .  .  .  .  .  .  .  Name: \"b\"\n  2860  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2701)\n  2861  .  .  .  .  .  .  .  .  .  }\n  2862  .  .  .  .  .  .  .  .  }\n  2863  .  .  .  .  .  .  .  .  Ellipsis: -\n  2864  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:23\n  2865  .  .  .  .  .  .  .  }\n  2866  .  .  .  .  .  .  }\n  2867  .  .  .  .  .  .  Post: *ast.IncDecStmt {\n  2868  .  .  .  .  .  .  .  X: *ast.Ident {\n  2869  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:26\n  2870  .  .  .  .  .  .  .  .  Name: \"i\"\n  2871  .  .  .  .  .  .  .  .  Obj: *(obj @ 2822)\n  2872  .  .  .  .  .  .  .  }\n  2873  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:27\n  2874  .  .  .  .  .  .  .  Tok: ++\n  2875  .  .  .  .  .  .  }\n  2876  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2877  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:30\n  2878  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {\n  2879  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n  2880  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2881  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2882  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:3\n  2883  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2884  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2885  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2886  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2887  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2879)\n  2888  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2889  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2890  .  .  .  .  .  .  .  .  .  .  .  }\n  2891  .  .  .  .  .  .  .  .  .  .  }\n  2892  .  .  .  .  .  .  .  .  .  }\n  2893  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:6\n  2894  .  .  .  .  .  .  .  .  .  Tok: :=\n  2895  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2896  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2897  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2898  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:9\n  2899  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"binaryLibLogoByte\"\n  2900  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2901  .  .  .  .  .  .  .  .  .  .  .  }\n  2902  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:26\n  2903  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2904  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {\n  2905  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:27\n  2907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"b\"\n  2908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2701)\n  2909  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2910  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:28\n  2911  .  .  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {\n  2912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:29\n  2913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"i\"\n  2914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2822)\n  2915  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2916  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:30\n  2917  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2918  .  .  .  .  .  .  .  .  .  .  .  }\n  2919  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2920  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:31\n  2921  .  .  .  .  .  .  .  .  .  .  }\n  2922  .  .  .  .  .  .  .  .  .  }\n  2923  .  .  .  .  .  .  .  .  }\n  2924  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n  2925  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:3\n  2926  .  .  .  .  .  .  .  .  .  Init: nil\n  2927  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2928  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2929  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:6\n  2930  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2931  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2884)\n  2932  .  .  .  .  .  .  .  .  .  .  }\n  2933  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:9\n  2934  .  .  .  .  .  .  .  .  .  .  Op: ==\n  2935  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2936  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:12\n  2937  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2938  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2939  .  .  .  .  .  .  .  .  .  .  }\n  2940  .  .  .  .  .  .  .  .  .  }\n  2941  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2942  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:16\n  2943  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2944  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2945  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:105:4\n  2946  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  2947  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:105:11\n  2949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"false\"\n  2950  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2951  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2952  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  2953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:105:18\n  2954  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2955  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2712)\n  2956  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2957  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2958  .  .  .  .  .  .  .  .  .  .  .  }\n  2959  .  .  .  .  .  .  .  .  .  .  }\n  2960  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:106:3\n  2961  .  .  .  .  .  .  .  .  .  }\n  2962  .  .  .  .  .  .  .  .  .  Else: nil\n  2963  .  .  .  .  .  .  .  .  }\n  2964  .  .  .  .  .  .  .  .  2: *ast.IfStmt {\n  2965  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:3\n  2966  .  .  .  .  .  .  .  .  .  Init: nil\n  2967  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2968  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2969  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:6\n  2970  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2971  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2884)\n  2972  .  .  .  .  .  .  .  .  .  .  }\n  2973  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:8\n  2974  .  .  .  .  .  .  .  .  .  .  Op: !=\n  2975  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2976  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:11\n  2977  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  2978  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n  2979  .  .  .  .  .  .  .  .  .  .  }\n  2980  .  .  .  .  .  .  .  .  .  }\n  2981  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2982  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:13\n  2983  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2984  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2985  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:108:4\n  2986  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  2987  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:108:11\n  2989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"true\"\n  2990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2991  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2992  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  2993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:108:17\n  2994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2996  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2997  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2998  .  .  .  .  .  .  .  .  .  .  .  }\n  2999  .  .  .  .  .  .  .  .  .  .  }\n  3000  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:109:3\n  3001  .  .  .  .  .  .  .  .  .  }\n  3002  .  .  .  .  .  .  .  .  .  Else: nil\n  3003  .  .  .  .  .  .  .  .  }\n  3004  .  .  .  .  .  .  .  }\n  3005  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:110:2\n  3006  .  .  .  .  .  .  }\n  3007  .  .  .  .  .  }\n  3008  .  .  .  .  .  3: *ast.ReturnStmt {\n  3009  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:111:2\n  3010  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  3011  .  .  .  .  .  .  .  0: *ast.Ident {\n  3012  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:111:9\n  3013  .  .  .  .  .  .  .  .  Name: \"false\"\n  3014  .  .  .  .  .  .  .  .  Obj: nil\n  3015  .  .  .  .  .  .  .  }\n  3016  .  .  .  .  .  .  .  1: *ast.Ident {\n  3017  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:111:16\n  3018  .  .  .  .  .  .  .  .  Name: \"nil\"\n  3019  .  .  .  .  .  .  .  .  Obj: nil\n  3020  .  .  .  .  .  .  .  }\n  3021  .  .  .  .  .  .  }\n  3022  .  .  .  .  .  }\n  3023  .  .  .  .  }\n  3024  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:112:1\n  3025  .  .  .  }\n  3026  .  .  }\n  3027  .  .  7: *ast.FuncDecl {\n  3028  .  .  .  Doc: nil\n  3029  .  .  .  Recv: nil\n  3030  .  .  .  Name: *ast.Ident {\n  3031  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:6\n  3032  .  .  .  .  Name: \"binaryFileObs\"\n  3033  .  .  .  .  Obj: *ast.Object {\n  3034  .  .  .  .  .  Kind: func\n  3035  .  .  .  .  .  Name: \"binaryFileObs\"\n  3036  .  .  .  .  .  Decl: *(obj @ 3027)\n  3037  .  .  .  .  .  Data: nil\n  3038  .  .  .  .  .  Type: nil\n  3039  .  .  .  .  }\n  3040  .  .  .  }\n  3041  .  .  .  Type: *ast.FuncType {\n  3042  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:1\n  3043  .  .  .  .  TypeParams: nil\n  3044  .  .  .  .  Params: *ast.FieldList {\n  3045  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:19\n  3046  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  3047  .  .  .  .  .  .  0: *ast.Field {\n  3048  .  .  .  .  .  .  .  Doc: nil\n  3049  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  3050  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  3051  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:20\n  3052  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3053  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  3054  .  .  .  .  .  .  .  .  .  .  Kind: var\n  3055  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3056  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3047)\n  3057  .  .  .  .  .  .  .  .  .  .  Data: nil\n  3058  .  .  .  .  .  .  .  .  .  .  Type: nil\n  3059  .  .  .  .  .  .  .  .  .  }\n  3060  .  .  .  .  .  .  .  .  }\n  3061  .  .  .  .  .  .  .  }\n  3062  .  .  .  .  .  .  .  Type: *ast.Ident {\n  3063  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:25\n  3064  .  .  .  .  .  .  .  .  Name: \"DirName\"\n  3065  .  .  .  .  .  .  .  .  Obj: nil\n  3066  .  .  .  .  .  .  .  }\n  3067  .  .  .  .  .  .  .  Tag: nil\n  3068  .  .  .  .  .  .  .  Comment: nil\n  3069  .  .  .  .  .  .  }\n  3070  .  .  .  .  .  }\n  3071  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:32\n  3072  .  .  .  .  }\n  3073  .  .  .  .  Results: *ast.FieldList {\n  3074  .  .  .  .  .  Opening: -\n  3075  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  3076  .  .  .  .  .  .  0: *ast.Field {\n  3077  .  .  .  .  .  .  .  Doc: nil\n  3078  .  .  .  .  .  .  .  Names: nil\n  3079  .  .  .  .  .  .  .  Type: *ast.Ident {\n  3080  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:34\n  3081  .  .  .  .  .  .  .  .  Name: \"error\"\n  3082  .  .  .  .  .  .  .  .  Obj: nil\n  3083  .  .  .  .  .  .  .  }\n  3084  .  .  .  .  .  .  .  Tag: nil\n  3085  .  .  .  .  .  .  .  Comment: nil\n  3086  .  .  .  .  .  .  }\n  3087  .  .  .  .  .  }\n  3088  .  .  .  .  .  Closing: -\n  3089  .  .  .  .  }\n  3090  .  .  .  }\n  3091  .  .  .  Body: *ast.BlockStmt {\n  3092  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:40\n  3093  .  .  .  .  List: []ast.Stmt (len = 2) {\n  3094  .  .  .  .  .  0: *ast.IfStmt {\n  3095  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:2\n  3096  .  .  .  .  .  .  Init: nil\n  3097  .  .  .  .  .  .  Cond: *ast.TypeAssertExpr {\n  3098  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  3099  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3100  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:5\n  3101  .  .  .  .  .  .  .  .  .  Name: \"isOddBinaryFile\"\n  3102  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2624)\n  3103  .  .  .  .  .  .  .  .  }\n  3104  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:20\n  3105  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3106  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3107  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3108  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3109  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:21\n  3110  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3111  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3053)\n  3112  .  .  .  .  .  .  .  .  .  .  .  }\n  3113  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3114  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:26\n  3115  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"inner\"\n  3116  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3117  .  .  .  .  .  .  .  .  .  .  .  }\n  3118  .  .  .  .  .  .  .  .  .  .  }\n  3119  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:31\n  3120  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3121  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3122  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3123  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:32\n  3124  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"ReleaseDir\"\n  3125  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3126  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3127  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:42\n  3128  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  3129  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3130  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:43\n  3131  .  .  .  .  .  .  .  .  .  .  .  }\n  3132  .  .  .  .  .  .  .  .  .  .  }\n  3133  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3134  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:44\n  3135  .  .  .  .  .  .  .  .  .  }\n  3136  .  .  .  .  .  .  .  .  }\n  3137  .  .  .  .  .  .  .  .  Ellipsis: -\n  3138  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:45\n  3139  .  .  .  .  .  .  .  }\n  3140  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:47\n  3141  .  .  .  .  .  .  .  Type: *ast.Ident {\n  3142  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:48\n  3143  .  .  .  .  .  .  .  .  Name: \"bool\"\n  3144  .  .  .  .  .  .  .  .  Obj: nil\n  3145  .  .  .  .  .  .  .  }\n  3146  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:52\n  3147  .  .  .  .  .  .  }\n  3148  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  3149  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:54\n  3150  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  3151  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  3152  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:3\n  3153  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  3154  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3155  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3156  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3157  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:10\n  3158  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  3159  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3160  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3161  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3162  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:17\n  3163  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"New\"\n  3164  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3165  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3166  .  .  .  .  .  .  .  .  .  .  .  }\n  3167  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:20\n  3168  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3169  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  3170  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {\n  3171  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n  3172  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:21\n  3173  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Binary file \\\"\"\n  3175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:35\n  3177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  3178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {\n  3179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:36\n  3182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3053)\n  3184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:41\n  3187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"inner\"\n  3188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:46\n  3192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:47\n  3196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"ReleaseDir\"\n  3197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:57\n  3200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  3201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:58\n  3203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:59\n  3207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3208  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3209  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:60\n  3210  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  3211  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  3212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:61\n  3213  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3214  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" not expected to be odd.\\\"\"\n  3215  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3216  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3217  .  .  .  .  .  .  .  .  .  .  .  }\n  3218  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3219  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:87\n  3220  .  .  .  .  .  .  .  .  .  .  }\n  3221  .  .  .  .  .  .  .  .  .  }\n  3222  .  .  .  .  .  .  .  .  }\n  3223  .  .  .  .  .  .  .  }\n  3224  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:117:2\n  3225  .  .  .  .  .  .  }\n  3226  .  .  .  .  .  .  Else: nil\n  3227  .  .  .  .  .  }\n  3228  .  .  .  .  .  1: *ast.ReturnStmt {\n  3229  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:2\n  3230  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  3231  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3232  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3233  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3234  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:9\n  3235  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  3236  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3237  .  .  .  .  .  .  .  .  .  }\n  3238  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3239  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:16\n  3240  .  .  .  .  .  .  .  .  .  .  Name: \"New\"\n  3241  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3242  .  .  .  .  .  .  .  .  .  }\n  3243  .  .  .  .  .  .  .  .  }\n  3244  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:19\n  3245  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3246  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  3247  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:20\n  3248  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3249  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"not implemented\\\"\"\n  3250  .  .  .  .  .  .  .  .  .  }\n  3251  .  .  .  .  .  .  .  .  }\n  3252  .  .  .  .  .  .  .  .  Ellipsis: -\n  3253  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:37\n  3254  .  .  .  .  .  .  .  }\n  3255  .  .  .  .  .  .  }\n  3256  .  .  .  .  .  }\n  3257  .  .  .  .  }\n  3258  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:119:1\n  3259  .  .  .  }\n  3260  .  .  }\n  3261  .  .  8: *(obj @ 1945)\n  3262  .  .  9: *ast.FuncDecl {\n  3263  .  .  .  Doc: nil\n  3264  .  .  .  Recv: nil\n  3265  .  .  .  Name: *ast.Ident {\n  3266  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:6\n  3267  .  .  .  .  Name: \"TestObs\"\n  3268  .  .  .  .  Obj: *ast.Object {\n  3269  .  .  .  .  .  Kind: func\n  3270  .  .  .  .  .  Name: \"TestObs\"\n  3271  .  .  .  .  .  Decl: *(obj @ 3262)\n  3272  .  .  .  .  .  Data: nil\n  3273  .  .  .  .  .  Type: nil\n  3274  .  .  .  .  }\n  3275  .  .  .  }\n  3276  .  .  .  Type: *ast.FuncType {\n  3277  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:1\n  3278  .  .  .  .  TypeParams: nil\n  3279  .  .  .  .  Params: *ast.FieldList {\n  3280  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:13\n  3281  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  3282  .  .  .  .  .  .  0: *ast.Field {\n  3283  .  .  .  .  .  .  .  Doc: nil\n  3284  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  3285  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  3286  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:14\n  3287  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  3288  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  3289  .  .  .  .  .  .  .  .  .  .  Kind: var\n  3290  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  3291  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3282)\n  3292  .  .  .  .  .  .  .  .  .  .  Data: nil\n  3293  .  .  .  .  .  .  .  .  .  .  Type: nil\n  3294  .  .  .  .  .  .  .  .  .  }\n  3295  .  .  .  .  .  .  .  .  }\n  3296  .  .  .  .  .  .  .  }\n  3297  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n  3298  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:16\n  3299  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  3300  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3301  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:17\n  3302  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n  3303  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3304  .  .  .  .  .  .  .  .  .  }\n  3305  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3306  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:25\n  3307  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n  3308  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3309  .  .  .  .  .  .  .  .  .  }\n  3310  .  .  .  .  .  .  .  .  }\n  3311  .  .  .  .  .  .  .  }\n  3312  .  .  .  .  .  .  .  Tag: nil\n  3313  .  .  .  .  .  .  .  Comment: nil\n  3314  .  .  .  .  .  .  }\n  3315  .  .  .  .  .  }\n  3316  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:26\n  3317  .  .  .  .  }\n  3318  .  .  .  .  Results: nil\n  3319  .  .  .  }\n  3320  .  .  .  Body: *ast.BlockStmt {\n  3321  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:28\n  3322  .  .  .  .  List: []ast.Stmt (len = 4) {\n  3323  .  .  .  .  .  0: *ast.ExprStmt {\n  3324  .  .  .  .  .  .  X: *ast.CallExpr {\n  3325  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3326  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:131:2\n  3327  .  .  .  .  .  .  .  .  Name: \"updateObs\"\n  3328  .  .  .  .  .  .  .  .  Obj: nil\n  3329  .  .  .  .  .  .  .  }\n  3330  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:131:11\n  3331  .  .  .  .  .  .  .  Args: nil\n  3332  .  .  .  .  .  .  .  Ellipsis: -\n  3333  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:131:12\n  3334  .  .  .  .  .  .  }\n  3335  .  .  .  .  .  }\n  3336  .  .  .  .  .  1: *ast.AssignStmt {\n  3337  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  3338  .  .  .  .  .  .  .  0: *ast.Ident {\n  3339  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:2\n  3340  .  .  .  .  .  .  .  .  Name: \"e\"\n  3341  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  3342  .  .  .  .  .  .  .  .  .  Kind: var\n  3343  .  .  .  .  .  .  .  .  .  Name: \"e\"\n  3344  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3336)\n  3345  .  .  .  .  .  .  .  .  .  Data: nil\n  3346  .  .  .  .  .  .  .  .  .  Type: nil\n  3347  .  .  .  .  .  .  .  .  }\n  3348  .  .  .  .  .  .  .  }\n  3349  .  .  .  .  .  .  }\n  3350  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:4\n  3351  .  .  .  .  .  .  Tok: :=\n  3352  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  3353  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3354  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3355  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:7\n  3356  .  .  .  .  .  .  .  .  .  Name: \"obs\"\n  3357  .  .  .  .  .  .  .  .  .  Obj: nil\n  3358  .  .  .  .  .  .  .  .  }\n  3359  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:10\n  3360  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3361  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  3362  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:11\n  3363  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3364  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" Error; expect an error!\\\"\"\n  3365  .  .  .  .  .  .  .  .  .  }\n  3366  .  .  .  .  .  .  .  .  }\n  3367  .  .  .  .  .  .  .  .  Ellipsis: -\n  3368  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:37\n  3369  .  .  .  .  .  .  .  }\n  3370  .  .  .  .  .  .  }\n  3371  .  .  .  .  .  }\n  3372  .  .  .  .  .  2: *ast.ExprStmt {\n  3373  .  .  .  .  .  .  X: *ast.CallExpr {\n  3374  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3375  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:2\n  3376  .  .  .  .  .  .  .  .  Name: \"assert\"\n  3377  .  .  .  .  .  .  .  .  Obj: nil\n  3378  .  .  .  .  .  .  .  }\n  3379  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:8\n  3380  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  3381  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  3382  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3383  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:9\n  3384  .  .  .  .  .  .  .  .  .  .  Name: \"e\"\n  3385  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3341)\n  3386 
2024/07/30 07:40:23  .  .  .  .  .  .  .  .  .  }\n  3387  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:10\n  3388  .  .  .  .  .  .  .  .  .  Op: !=\n  3389  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  3390  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:13\n  3391  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  3392  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3393  .  .  .  .  .  .  .  .  .  }\n  3394  .  .  .  .  .  .  .  .  }\n  3395  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  3396  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:18\n  3397  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3398  .  .  .  .  .  .  .  .  .  Value: \"\\\"unexpected nil error\\\"\"\n  3399  .  .  .  .  .  .  .  .  }\n  3400  .  .  .  .  .  .  .  }\n  3401  .  .  .  .  .  .  .  Ellipsis: -\n  3402  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:40\n  3403  .  .  .  .  .  .  }\n  3404  .  .  .  .  .  }\n  3405  .  .  .  .  .  3: *ast.ExprStmt {\n  3406  .  .  .  .  .  .  X: *ast.CallExpr {\n  3407  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3408  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:2\n  3409  .  .  .  .  .  .  .  .  Name: \"assert\"\n  3410  .  .  .  .  .  .  .  .  Obj: nil\n  3411  .  .  .  .  .  .  .  }\n  3412  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:8\n  3413  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  3414  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3415  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3416  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3417  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:9\n  3418  .  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  3419  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3420  .  .  .  .  .  .  .  .  .  .  }\n  3421  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3422  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:16\n  3423  .  .  .  .  .  .  .  .  .  .  .  Name: \"Is\"\n  3424  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3425  .  .  .  .  .  .  .  .  .  .  }\n  3426  .  .  .  .  .  .  .  .  .  }\n  3427  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:18\n  3428  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  3429  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  3430  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:19\n  3431  .  .  .  .  .  .  .  .  .  .  .  Name: \"e\"\n  3432  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3341)\n  3433  .  .  .  .  .  .  .  .  .  .  }\n  3434  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  3435  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:22\n  3436  .  .  .  .  .  .  .  .  .  .  .  Name: \"badObs\"\n  3437  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3438  .  .  .  .  .  .  .  .  .  .  }\n  3439  .  .  .  .  .  .  .  .  .  }\n  3440  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3441  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:28\n  3442  .  .  .  .  .  .  .  .  }\n  3443  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  3444  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:31\n  3445  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3446  .  .  .  .  .  .  .  .  .  Value: \"\\\"not an Obs error\\\"\"\n  3447  .  .  .  .  .  .  .  .  }\n  3448  .  .  .  .  .  .  .  }\n  3449  .  .  .  .  .  .  .  Ellipsis: -\n  3450  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:49\n  3451  .  .  .  .  .  .  }\n  3452  .  .  .  .  .  }\n  3453  .  .  .  .  }\n  3454  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:135:1\n  3455  .  .  .  }\n  3456  .  .  }\n  3457  .  }\n  3458  .  FileStart: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:1:1\n  3459  .  FileEnd: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:135:2\n  3460  .  Scope: *ast.Scope {\n  3461  .  .  Outer: nil\n  3462  .  .  Objects: map[string]*ast.Object (len = 8) {\n  3463  .  .  .  \"TestJacobiSymbolFailingPath\": *(obj @ 903)\n  3464  .  .  .  \"TestMain\": *(obj @ 1866)\n  3465  .  .  .  \"nativeObs\": *(obj @ 2334)\n  3466  .  .  .  \"isOddBinaryFile\": *(obj @ 2624)\n  3467  .  .  .  \"binaryFileObs\": *(obj @ 3033)\n  3468  .  .  .  \"RootDirectory\": *(obj @ 1942)\n  3469  .  .  .  \"TestObs\": *(obj @ 3268)\n  3470  .  .  .  \"TestJacobiSymbolHappyPath\": *(obj @ 90)\n  3471  .  .  }\n  3472  .  }\n  3473  .  Imports: []*ast.ImportSpec (len = 4) {\n  3474  .  .  0: *(obj @ 15)\n  3475  .  .  1: *(obj @ 26)\n  3476  .  .  2: *(obj @ 37)\n  3477  .  .  3: *(obj @ 48)\n  3478  .  }\n  3479  .  Unresolved: []*ast.Ident (len = 76) {\n  3480  .  .  0: *(obj @ 122)\n  3481  .  .  1: *(obj @ 186)\n  3482  .  .  2: *(obj @ 209)\n  3483  .  .  3: *(obj @ 232)\n  3484  .  .  4: *(obj @ 255)\n  3485  .  .  5: *(obj @ 579)\n  3486  .  .  6: *(obj @ 631)\n  3487  .  .  7: *(obj @ 679)\n  3488  .  .  8: *(obj @ 935)\n  3489  .  .  9: *(obj @ 999)\n  3490  .  .  10: *(obj @ 1022)\n  3491  .  .  11: *(obj @ 1045)\n  3492  .  .  12: *(obj @ 1068)\n  3493  .  .  13: *(obj @ 1103)\n  3494  .  .  14: *(obj @ 1131)\n  3495  .  .  15: *(obj @ 1161)\n  3496  .  .  16: *(obj @ 1206)\n  3497  .  .  17: *(obj @ 1234)\n  3498  .  .  18: *(obj @ 1266)\n  3499  .  .  19: *(obj @ 1294)\n  3500  .  .  20: *(obj @ 1324)\n  3501  .  .  21: *(obj @ 1458)\n  3502  .  .  22: *(obj @ 1510)\n  3503  .  .  23: *(obj @ 1558)\n  3504  .  .  24: *(obj @ 1635)\n  3505  .  .  25: *(obj @ 1815)\n  3506  .  .  26: *(obj @ 1848)\n  3507  .  .  27: *(obj @ 1898)\n  3508  .  .  28: *(obj @ 2291)\n  3509  .  .  29: *(obj @ 2313)\n  3510  .  .  30: *(obj @ 2432)\n  3511  .  .  31: *(obj @ 2444)\n  3512  .  .  32: *(obj @ 2476)\n  3513  .  .  33: *(obj @ 2559)\n  3514  .  .  34: *(obj @ 2590)\n  3515  .  .  35: *(obj @ 2359)\n  3516  .  .  36: *(obj @ 2653)\n  3517  .  .  37: *(obj @ 2670)\n  3518  .  .  38: *(obj @ 2681)\n  3519  .  .  39: *(obj @ 2726)\n  3520  .  .  40: *(obj @ 2755)\n  3521  .  .  41: *(obj @ 2786)\n  3522  .  .  42: *(obj @ 2798)\n  3523  .  .  43: *(obj @ 2850)\n  3524  .  .  44: *(obj @ 2897)\n  3525  .  .  45: *(obj @ 2935)\n  3526  .  .  46: *(obj @ 2947)\n  3527  .  .  47: *(obj @ 2987)\n  3528  .  .  48: *(obj @ 2992)\n  3529  .  .  49: *(obj @ 3011)\n  3530  .  .  50: *(obj @ 3016)\n  3531  .  .  51: *(obj @ 3062)\n  3532  .  .  52: *(obj @ 3079)\n  3533  .  .  53: *(obj @ 3122)\n  3534  .  .  54: *(obj @ 3141)\n  3535  .  .  55: *(obj @ 3156)\n  3536  .  .  56: *(obj @ 3194)\n  3537  .  .  57: *(obj @ 3233)\n  3538  .  .  58: *(obj @ 1967)\n  3539  .  .  59: *(obj @ 2012)\n  3540  .  .  60: *(obj @ 2041)\n  3541  .  .  61: *(obj @ 2084)\n  3542  .  .  62: *(obj @ 2103)\n  3543  .  .  63: *(obj @ 2111)\n  3544  .  .  64: *(obj @ 2137)\n  3545  .  .  65: *(obj @ 2160)\n  3546  .  .  66: *(obj @ 2189)\n  3547  .  .  67: *(obj @ 2197)\n  3548  .  .  68: *(obj @ 3300)\n  3549  .  .  69: *(obj @ 3325)\n  3550  .  .  70: *(obj @ 3354)\n  3551  .  .  71: *(obj @ 3374)\n  3552  .  .  72: *(obj @ 3389)\n  3553  .  .  73: *(obj @ 3407)\n  3554  .  .  74: *(obj @ 3416)\n  3555  .  .  75: *(obj @ 3434)\n  3556  .  }\n  3557  .  Comments: []*ast.CommentGroup (len = 1) {\n  3558  .  .  0: *ast.CommentGroup {\n  3559  .  .  .  List: []*ast.Comment (len = 2) {\n  3560  .  .  .  .  0: *ast.Comment {\n  3561  .  .  .  .  .  Slash: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:92:2\n  3562  .  .  .  .  .  Text: \"// implement equivalent of xfail.sh here\"\n  3563  .  .  .  .  }\n  3564  .  .  .  .  1: *ast.Comment {\n  3565  .  .  .  .  .  Slash: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:93:2\n  3566  .  .  .  .  .  Text: \"// this should add or update a new file\"\n  3567  .  .  .  .  }\n  3568  .  .  .  }\n  3569  .  .  }\n  3570  .  }\n  3571  .  GoVersion: \"\"\n  3572  }\n"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc000c96a90}, {0x1050cc0?, 0xc000ac0a20})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/ast.Source(0xc0001baf00?, 0xa91d23?)
	gitlab.nethead.at/symflower/symflower/language/golang/ast/parse.go:612 +0x138
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc00070e0c0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:48 +0x46c
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000434101?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc000618538, {0xc000618480?, 0x7fd34554b998?, 0xc000618538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc000618480}, {0xc000192120?, 0x0?, 0xc0004d1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc000618480?}, {0xc000192120?, 0x27d8cc0?, 0xc000618480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:40:23 $ git clean -df
2024/07/30 07:40:23 Removing coverage.json
Removing jacobiSymbol_test.go
2024/07/30 07:40:23 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```

2024/07/30 07:40:28 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (4629 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		limit := 10
		result := initialiseKlarnerRadoSequence(limit)
		if len(result)!= limit+1 {
			t.Errorf("Unexpected length, expected %d, got %d", limit+1, len(result))
		}
		for i := 1; i <= limit; i++ {
			if result[i] < 0 {
				t.Errorf("Negative value %d at index %d", result[i], i)
			}
		}
		if result[1]!= 1 {
			t.Errorf("Unexpected value at index 1, expected 1, got %d", result[1])
		}
		if result[2]!= 2 {
			t.Errorf("Unexpected value at index 2, expected 2, got %d", result[2])
		}
	}

	func TestInitialiseKlarnerRadoSequence_EdgeCase(t *testing.T) {
		limit := 0
		result := initialiseKlarnerRadoSequence(limit)
		if len(result)!= limit+1 {
			t.Errorf("Unexpected length, expected %d, got %d", limit+1, len(result))
		}
	}

	func TestInitialiseKlarnerRadoSequence_TypeAssertion(t *testing.T) {
		limit := 100
		result := initialiseKlarnerRadoSequence(limit)
		for i := int64(1); i <= int64(limit); i++ {
			v, ok := result[int(i)]
			if!ok {
				t.Errorf("Expected int at index %d, got nil", i)
			}
		}
	}
	```
2024/07/30 07:40:28 $ go mod tidy
2024/07/30 07:40:28 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:29 # light [light.test]
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value
2024/07/30 07:40:29 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:40:29 
=== Errors
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value

DONE 0 tests, 2 errors in 0.154s
2024/07/30 07:40:29 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:40:29 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:40:29 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:40:29 Repairing balancedBrackets.go
2024/07/30 07:40:29 Repairing collatzCalculator.go
2024/07/30 07:40:29 Repairing forLoop.go
2024/07/30 07:40:29 Repairing jacobiSymbol.go
2024/07/30 07:40:29 Repairing klarnerRadoSequence.go
2024/07/30 07:40:29 Repairing knapsack.go
2024/07/30 07:40:29 Repairing largestProperDivisor.go
2024/07/30 07:40:29 Repairing magicSquareOdd.go
2024/07/30 07:40:29 Repairing phoneNumber.go
2024/07/30 07:40:29 Repairing simpleSwitchWithReturn.go
2024/07/30 07:40:29 Repairing validateDate.go
2024/07/30 07:40:29 Repairing binarySearch.go
2024/07/30 07:40:29 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:40:29 Repairing equilibriumIndices.go
2024/07/30 07:40:29 Repairing simpleIfElse.go
2024/07/30 07:40:29 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:40:29 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:40:29 Repairing conditionsAnd.go
2024/07/30 07:40:29 Repairing matchBytes.go
2024/07/30 07:40:29 Repairing pascalsTriangle.go
2024/07/30 07:40:29 Repairing typeArrayAccess.go
2024/07/30 07:40:29 Repairing klarnerRadoSequence_test.go
2024/07/30 07:40:29 Repairing cascadingIfElse.go
2024/07/30 07:40:29 Repairing sort.go
2024/07/30 07:40:29 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:29 $ go mod tidy
2024/07/30 07:40:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:29 # light [light.test]
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value
2024/07/30 07:40:29 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:40:29 
=== Errors
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value

DONE 0 tests, 2 errors in 0.123s
2024/07/30 07:40:29 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:29 ERROR: execution failed: exit status 1
2024/07/30 07:40:29 $ git clean -df
2024/07/30 07:40:29 Removing coverage.json
Removing klarnerRadoSequence_test.go
2024/07/30 07:40:29 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```

2024/07/30 07:40:33 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (3755 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			maximumWeight int
			items         []Item
			expected      int
		}{
			{
				maximumWeight: 10,
				items: []Item{
					{weight: 3, value: 4},
					{weight: 4, value: 5},
					{weight: 5, value: 6},
				},
				expected: 10,
			},
			{
				maximumWeight: 5,
				items: []Item{
					{weight: 2, value: 2},
					{weight: 3, value: 4},
				},
				expected: 4,
			},
			{
				maximumWeight: 0,
				items: []Item{
					{weight: 1, value: 2},
					{weight: 2, value: 3},
				},
				expected: 0,
			},
			{
				maximumWeight: 10,
				items: []Item{
					{weight: 1, value: 2},
					{weight: 2, value: 3},
				},
				expected: 3,
			},
			{
				maximumWeight: 10,
				items: []Item{
					{weight: 5, value: 6},
					{weight: 5, value: 7},
				},
				expected: 11,
			},
		}

		for _, test := range tests {
			actual := maximumValue(test.maximumWeight, test.items)
			if actual!= test.expected {
				t.Errorf("maximumValue(%d, %v) = %d, expected %d", test.maximumWeight, test.items, actual, test.expected)
			}
		}
	}
	```
2024/07/30 07:40:33 $ go mod tidy
2024/07/30 07:40:33 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:33 === RUN   TestMaximumValue
    knapsack_test.go:59: maximumValue(10, [{3 4} {4 5} {5 6}]) = 11, expected 10
    knapsack_test.go:59: maximumValue(5, [{2 2} {3 4}]) = 6, expected 4
    knapsack_test.go:59: maximumValue(10, [{1 2} {2 3}]) = 5, expected 3
    knapsack_test.go:59: maximumValue(10, [{5 6} {5 7}]) = 13, expected 11
--- FAIL: TestMaximumValue (0.00s)
FAIL
2024/07/30 07:40:33 coverage: 7.1% of statements
2024/07/30 07:40:33 FAIL	light	0.003s
2024/07/30 07:40:33 
=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:59: maximumValue(10, [{3 4} {4 5} {5 6}]) = 11, expected 10
    knapsack_test.go:59: maximumValue(5, [{2 2} {3 4}]) = 6, expected 4
    knapsack_test.go:59: maximumValue(10, [{1 2} {2 3}]) = 5, expected 3
    knapsack_test.go:59: maximumValue(10, [{5 6} {5 7}]) = 13, expected 11

DONE 1 tests, 1 failure in 0.308s
2024/07/30 07:40:33 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:33 ERROR: execution failed: exit status 1
2024/07/30 07:40:33 coverage objects: [{"FileRange":"light/knapsack.go:10:56-light/knapsack.go:16:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:19:2-light/knapsack.go:23:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:23:10-light/knapsack.go:25:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:25:10-light/knapsack.go:29:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/knapsack.go:33:2-light/knapsack.go:33:44","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:40:33 Executes tests with 5 coverage objects
2024/07/30 07:40:33 $ git clean -df
2024/07/30 07:40:33 Removing coverage.json
Removing knapsack_test.go
2024/07/30 07:40:33 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```

2024/07/30 07:40:36 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (3022 ms) with:
	```go
	package light

	import "testing"

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			name int
			want int
		}{
			{name: 1, want: 0},
			{name: 2, want: 1},
			{name: 3, want: 1},
			{name: 4, want: 2},
			{name: 5, want: 1},
			{name: 6, want: 3},
			{name: 7, want: 1},
			{name: 8, want: 4},
			{name: 9, want: 3},
			{name: 10, want: 5},
		}

		for _, tt := range tests {
			got, _ := largestProperDivisor(tt.name)
			if got!= tt.want {
				t.Errorf("%d. largestProperDivisor(%d) = %d, want %d", tt.name, tt.name, got, tt.want)
			}
		}
	}

	func TestLargestProperDivisorEdgeCase(t *testing.T) {
		_, err := largestProperDivisor(0)
		if err == nil {
			t.Errorf("largestProperDivisor(0) = nil, want error")
		}

		_, err = largestProperDivisor(-5)
		if err == nil {
			t.Errorf("largestProperDivisor(-5) = nil, want error")
		}
	}
	```
2024/07/30 07:40:36 $ go mod tidy
2024/07/30 07:40:36 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:37 === RUN   TestLargestProperDivisor
    largestProperDivisor_test.go:25: 1. largestProperDivisor(1) = 1, want 0
--- FAIL: TestLargestProperDivisor (0.00s)
=== RUN   TestLargestProperDivisorEdgeCase
--- PASS: TestLargestProperDivisorEdgeCase (0.00s)
FAIL
2024/07/30 07:40:37 coverage: 3.8% of statements
2024/07/30 07:40:37 FAIL	light	0.003s
2024/07/30 07:40:37 
=== Failed
=== FAIL: . TestLargestProperDivisor (0.00s)
    largestProperDivisor_test.go:25: 1. largestProperDivisor(1) = 1, want 0

DONE 2 tests, 1 failure in 0.263s
2024/07/30 07:40:37 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:37 ERROR: execution failed: exit status 1
2024/07/30 07:40:37 coverage objects: [{"FileRange":"light/largestProperDivisor.go:10:2-light/largestProperDivisor.go:12:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/largestProperDivisor.go:14:2-light/largestProperDivisor.go:17:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/largestProperDivisor.go:20:2-light/largestProperDivisor.go:20:15","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/largestProperDivisor.go:5:53-light/largestProperDivisor.go:8:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:40:37 Executes tests with 4 coverage objects
2024/07/30 07:40:37 $ git clean -df
2024/07/30 07:40:37 Removing coverage.json
Removing largestProperDivisor_test.go
2024/07/30 07:40:37 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```

2024/07/30 07:40:42 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (5188 ms) with:
	```go
	package light

	import (
		"errors"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name    string
			base    int
			wantErr bool
		}{
			{
				name:    "base 3",
				base:    3,
				wantErr: false,
			},
			{
				name:    "base 5",
				base:    5,
				wantErr: false,
			},
			{
				name:    "base 7",
				base:    7,
				wantErr: false,
			},
			{
				name:    "base 9",
				base:    9,
				wantErr: true,
			},
			{
				name:    "base 0",
				base:    0,
				wantErr: true,
			},
			{
				name:    "base < 3",
				base:    2,
				wantErr: true,
			},
			{
				name:    "base even",
				base:    4,
				wantErr: true,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				square, err := magicSquareOdd(tt.base)
				if (err != nil) != tt.wantErr {
					t.Errorf("magicSquareOdd() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if err == nil {
					result := 0
					for r := range square {
						for c := range square[r] {
							result += square[r][c]
							if result != (tt.base * tt.base * (tt.base * tt.base + 1)) / 2 {
								t.Errorf("result not correct for base %d", tt.base)
							}
						}
					}
				}
			})
		}
	}
	```
2024/07/30 07:40:42 $ go mod tidy
2024/07/30 07:40:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:42 # light [light.test]
./magicSquareOdd_test.go:4:2: "errors" imported and not used
2024/07/30 07:40:42 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:40:42 
=== Errors
./magicSquareOdd_test.go:4:2: "errors" imported and not used

DONE 0 tests, 1 error in 0.113s
2024/07/30 07:40:42 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:42 ERROR: execution failed: exit status 1
2024/07/30 07:40:42 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:40:42 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:40:43 Repairing jacobiSymbol.go
2024/07/30 07:40:43 Repairing klarnerRadoSequence.go
Repairing largestProperDivisor.go
2024/07/30 07:40:43 Repairing typeArrayAccess.go
2024/07/30 07:40:43 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:40:43 Repairing cascadingIfElse.go
2024/07/30 07:40:43 Repairing simpleSwitchWithReturn.go
2024/07/30 07:40:43 Repairing sort.go
2024/07/30 07:40:43 Repairing magicSquareOdd_test.go
2024/07/30 07:40:43 Repairing simpleIfElse.go
2024/07/30 07:40:43 Repairing binarySearch.go
2024/07/30 07:40:43 Repairing conditionsAnd.go
2024/07/30 07:40:43 Repairing forLoop.go
2024/07/30 07:40:43 Repairing matchBytes.go
2024/07/30 07:40:43 Repairing phoneNumber.go
2024/07/30 07:40:43 Repairing magicSquareOdd.go
2024/07/30 07:40:43 Repairing pascalsTriangle.go
2024/07/30 07:40:43 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:40:43 Repairing balancedBrackets.go
2024/07/30 07:40:43 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:40:43 Repairing collatzCalculator.go
2024/07/30 07:40:43 Repairing equilibriumIndices.go
2024/07/30 07:40:43 Repairing knapsack.go
2024/07/30 07:40:43 Repairing validateDate.go
2024/07/30 07:40:43 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:43 $ go mod tidy
2024/07/30 07:40:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:43 === RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/base_3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
=== RUN   TestMagicSquareOdd/base_5
    magicSquareOdd_test.go:63: result not correct for base 5
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 5
=== RUN   TestMagicSquareOdd/base_7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
=== RUN   TestMagicSquareOdd/base_9
2024/07/30 07:40:43     magicSquareOdd_test.go:54: magicSquareOdd() error = <nil>, wantErr true
=== RUN   TestMagicSquareOdd/base_0
=== RUN   TestMagicSquareOdd/base_<_3
=== RUN   TestMagicSquareOdd/base_even
2024/07/30 07:40:43 --- FAIL: TestMagicSquareOdd (0.00s)
    --- FAIL: TestMagicSquareOdd/base_3 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_5 (0.00s)
2024/07/30 07:40:43     --- FAIL: TestMagicSquareOdd/base_7 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_9 (0.00s)
    --- PASS: TestMagicSquareOdd/base_0 (0.00s)
    --- PASS: TestMagicSquareOdd/base_<_3 (0.00s)
2024/07/30 07:40:43     --- PASS: TestMagicSquareOdd/base_even (0.00s)
FAIL
2024/07/30 07:40:43 coverage: 11.4% of statements
2024/07/30 07:40:43 FAIL	light	0.003s
2024/07/30 07:40:43 
=== Failed
=== FAIL: . TestMagicSquareOdd/base_3 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    --- FAIL: TestMagicSquareOdd/base_3 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_5 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    --- FAIL: TestMagicSquareOdd/base_5 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_7 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
2024/07/30 07:40:43     magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    --- FAIL: TestMagicSquareOdd/base_7 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_9 (0.00s)
    magicSquareOdd_test.go:54: magicSquareOdd() error = <nil>, wantErr true
    --- FAIL: TestMagicSquareOdd/base_9 (0.00s)

=== FAIL: . TestMagicSquareOdd (0.00s)

DONE 8 tests, 5 failures in 0.320s
2024/07/30 07:40:43 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:40:43 coverage objects: [{"FileRange":"light/magicSquareOdd.go:10:2-light/magicSquareOdd.go:13:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:14:2-light/magicSquareOdd.go:24:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:24:10-light/magicSquareOdd.go:27:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:28:9-light/magicSquareOdd.go:32:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:32:10-light/magicSquareOdd.go:36:6","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:36:11-light/magicSquareOdd.go:38:6","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:43:2-light/magicSquareOdd.go:43:18","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/magicSquareOdd.go:5:48-light/magicSquareOdd.go:8:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:40:43 with symflower repair: Executes tests with 8 coverage objects
2024/07/30 07:40:43 $ git clean -df
2024/07/30 07:40:43 Removing coverage.json
Removing magicSquareOdd_test.go
2024/07/30 07:40:43 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```

2024/07/30 07:40:48 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (4329 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		tests := []struct {
			name  string
			s1    []byte
			s2    []byte
			want  bool
			want1 bool
		}{
			{
				name:  "empty",
				s1:    []byte{},
				s2:    []byte{},
				want:  true,
			},
			{
				name:  "different length",
				s1:    []byte{1},
				s2:    []byte{2},
				want:  false,
			},
			{
				name:  "case-insensitive",
				s1:    []byte{'A'},
				s2:    []byte{'a'},
				want:  true,
			},
			{
				name:  "same case",
				s1:    []byte{'A'},
				s2:    []byte{'B'},
				want:  false,
			},
			{
				name:  "match",
				s1:    []byte{'A'},
				s2:    []byte{'A'},
				want:  true,
			},
			{
				name:  "longer string",
				s1:    []byte{'A', 'B', 'C'},
				s2:    []byte{'a', 'b', 'c'},
				want:  true,
			},
			{
				name:  "non-ASCII",
				s1:    []byte{'€'},
				s2:    []byte{'€'},
				want:  true,
			},
			{
				name:  "non-ASCII case-insensitive",
				s1:    []byte{'€'},
				s2:    []byte{'€'},
				want1: true,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := matchBytes(tt.s1, tt.s2); got!= tt.want {
					t.Errorf("matchBytes() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/07/30 07:40:48 $ go mod tidy
2024/07/30 07:40:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:48 # light [light.test]
./matchBytes_test.go:53:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
2024/07/30 07:40:48 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:40:48 
=== Errors
./matchBytes_test.go:53:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)

DONE 0 tests, 4 errors in 0.143s
2024/07/30 07:40:48 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:40:48 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:40:48 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:40:49 Repairing klarnerRadoSequence.go
2024/07/30 07:40:49 Repairing sort.go
Repairing typeArrayAccess.go
2024/07/30 07:40:49 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:40:49 Repairing binarySearch.go
Repairing cascadingIfElse.go
2024/07/30 07:40:49 Repairing phoneNumber.go
Repairing simpleIfElse.go
2024/07/30 07:40:49 Repairing validateDate.go
2024/07/30 07:40:49 Repairing matchBytes_test.go
Repairing magicSquareOdd.go
2024/07/30 07:40:49 Repairing pascalsTriangle.go
Repairing simpleSwitchWithReturn.go
2024/07/30 07:40:49 Repairing equilibriumIndices.go
2024/07/30 07:40:49 Repairing largestProperDivisor.go
Repairing collatzCalculator.go
2024/07/30 07:40:49 Repairing conditionsAnd.go
Repairing forLoop.go
2024/07/30 07:40:49 Repairing jacobiSymbol.go
Repairing knapsack.go
2024/07/30 07:40:49 Repairing matchBytes.go
2024/07/30 07:40:49 Repairing balancedBrackets.go
Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:40:49 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:40:49 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:49 $ go mod tidy
2024/07/30 07:40:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:49 # light [light.test]
./matchBytes_test.go:53:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
2024/07/30 07:40:49 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:40:49 
=== Errors
./matchBytes_test.go:53:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)

DONE 0 tests, 4 errors in 0.127s
2024/07/30 07:40:49 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:40:49 $ git clean -df
2024/07/30 07:40:49 Removing coverage.json
Removing matchBytes_test.go
2024/07/30 07:40:49 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```

2024/07/30 07:40:54 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (4795 ms) with:
	```go
	package light

	import (
		"errors"
		"testing"
	)

	func TestPascalsTriangle_EdgeCases(t *testing.T) {
		_, err := pascalsTriangle(-1)
		if err == nil {
			t.Errorf("Expected error for negative rows")
		}
		if err.Message()!= "Rows can't be negative!" {
			t.Errorf("Expected error message, got %v", err.Message())
		}
	}

	func TestPascalsTriangle_SingleRow(t *testing.T) {
		triangle, _ := pascalsTriangle(1)
		if len(triangle)!= 1 {
			t.Errorf("Expected single row, got %d", len(triangle))
		}
		if len(triangle[0])!= 1 {
			t.Errorf("Expected single element in row, got %d", len(triangle[0]))
		}
	}

	func TestPascalsTriangle_MultipleRows(t *testing.T) {
		triangle, _ := pascalsTriangle(5)
		expTriangle := [][]int{
			{1},
			{1, 1},
			{1, 2, 1},
			{1, 3, 3, 1},
			{1, 4, 6, 4, 1},
		}
		if len(triangle)!= len(expTriangle) {
			t.Errorf("Expected triangle of size %d, got size %d", len(expTriangle), len(triangle))
		}

		for i := range triangle {
			if len(triangle[i])!= len(expTriangle[i]) {
				t.Errorf("Row %d had unexpected length", i)
			}

			for j := range triangle[i] {
				if triangle[i][j]!= expTriangle[i][j] {
					t.Errorf("Element at row %d, column %d had unexpected value", i, j)
				}
			}
		}
	}

	func TestPascalsTriangle_OtherCases(t *testing.T) {
		_, err := pascalsTriangle(10)
		if err!= nil {
			t.Errorf("Unexpected error, got %v", err)
		}
	}
	```
2024/07/30 07:40:54 $ go mod tidy
2024/07/30 07:40:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:54 # light [light.test]
./pascalsTriangle_test.go:4:2: "errors" imported and not used
./pascalsTriangle_test.go:13:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:14:50: err.Message undefined (type error has no field or method Message)
2024/07/30 07:40:54 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:4:2: "errors" imported and not used
./pascalsTriangle_test.go:13:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:14:50: err.Message undefined (type error has no field or method Message)

DONE 0 tests, 3 errors in 0.133s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:40:54 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:40:54 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:40:54 Repairing equilibriumIndices.go
2024/07/30 07:40:54 Repairing jacobiSymbol.go
2024/07/30 07:40:54 Repairing knapsack.go
2024/07/30 07:40:54 Repairing matchBytes.go
2024/07/30 07:40:54 Repairing pascalsTriangle_test.go
2024/07/30 07:40:54 Repairing collatzCalculator.go
2024/07/30 07:40:54 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:40:54 Repairing cascadingIfElse.go
2024/07/30 07:40:54 Repairing magicSquareOdd.go
2024/07/30 07:40:54 Repairing phoneNumber.go
2024/07/30 07:40:54 Repairing validateDate.go
2024/07/30 07:40:54 Repairing balancedBrackets.go
2024/07/30 07:40:54 Repairing forLoop.go
2024/07/30 07:40:54 Repairing klarnerRadoSequence.go
2024/07/30 07:40:54 Repairing largestProperDivisor.go
2024/07/30 07:40:54 Repairing simpleSwitchWithReturn.go
2024/07/30 07:40:54 Repairing sort.go
2024/07/30 07:40:54 Repairing typeArrayAccess.go
2024/07/30 07:40:54 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:40:54 Repairing binarySearch.go
2024/07/30 07:40:54 Repairing pascalsTriangle.go
2024/07/30 07:40:54 Repairing simpleIfElse.go
2024/07/30 07:40:54 Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:40:54 Repairing conditionsAnd.go
2024/07/30 07:40:54 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:40:54 $ go mod tidy
2024/07/30 07:40:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:40:54 # light [light.test]
./pascalsTriangle_test.go:12:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:13:50: err.Message undefined (type error has no field or method Message)
2024/07/30 07:40:54 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:40:54 
=== Errors
./pascalsTriangle_test.go:12:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:13:50: err.Message undefined (type error has no field or method Message)

DONE 0 tests, 2 errors in 0.110s
2024/07/30 07:40:55 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:40:55 $ git clean -df
2024/07/30 07:40:55 Removing coverage.json
Removing pascalsTriangle_test.go
2024/07/30 07:40:55 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```

2024/07/30 07:41:00 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (5188 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name      string
			number    string
			want      string
			wantError bool
		}{
			{
				name:      "clean number",
				number:    "123-456-7890",
				want:      "1234567890",
				wantError: false,
			},
			{
				name:      "number with spaces",
				number:    " 123 456 7890",
				want:      "1234567890",
				wantError: false,
			},
			{
				name:      "number with dots",
				number:    "123.456.7890",
				want:      "1234567890",
				wantError: false,
			},
			{
				name:      "number with parentheses",
				number:    "(123) 456 7890",
				want:      "1234567890",
				wantError: false,
			},
			{
				name:      "number with punctuations and letters",
				number:    "1234-56-789(123)-45@:!",
				want:      "",
				wantError: true,
			},
			{
				name:      "number with only letters",
				number:    "HelloWorld",
				want:      "",
				wantError: true,
			},
			{
				name:      "empty string",
				number:    "",
				want:      "",
				wantError: false,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := extractDigits(tt.number)
				if (err != nil) != tt.wantError {
					t.Errorf("extractDigits() error = %v, wantError %v", err, tt.wantError)
				}
				if got != tt.want {
					t.Errorf("extractDigits() got = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/07/30 07:41:00 $ go mod tidy
2024/07/30 07:41:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:41:00 === RUN   TestExtractDigits
=== RUN   TestExtractDigits/clean_number
=== RUN   TestExtractDigits/number_with_spaces
=== RUN   TestExtractDigits/number_with_dots
=== RUN   TestExtractDigits/number_with_parentheses
=== RUN   TestExtractDigits/number_with_punctuations_and_letters
=== RUN   TestExtractDigits/number_with_only_letters
=== RUN   TestExtractDigits/empty_string
--- PASS: TestExtractDigits (0.00s)
    --- PASS: TestExtractDigits/clean_number (0.00s)
    --- PASS: TestExtractDigits/number_with_spaces (0.00s)
    --- PASS: TestExtractDigits/number_with_dots (0.00s)
    --- PASS: TestExtractDigits/number_with_parentheses (0.00s)
2024/07/30 07:41:00     --- PASS: TestExtractDigits/number_with_punctuations_and_letters (0.00s)
    --- PASS: TestExtractDigits/number_with_only_letters (0.00s)
    --- PASS: TestExtractDigits/empty_string (0.00s)
PASS
2024/07/30 07:41:00 coverage: 4.3% of statements
2024/07/30 07:41:00 ok  	light	0.003s	coverage: 4.3% of statements
2024/07/30 07:41:00 
DONE 8 tests in 0.282s
2024/07/30 07:41:00 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:41:00 coverage objects: [{"FileRange":"light/phoneNumber.go:11:3-light/phoneNumber.go:13:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:14:3-light/phoneNumber.go:16:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:17:3-light/phoneNumber.go:17:27","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:20:2-light/phoneNumber.go:20:25","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/phoneNumber.go:5:72-light/phoneNumber.go:9:12","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:41:00 Executes tests with 5 coverage objects
2024/07/30 07:41:00 $ git clean -df
2024/07/30 07:41:00 Removing coverage.json
Removing phoneNumber_test.go
2024/07/30 07:41:00 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```

2024/07/30 07:41:01 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (732 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestSimpleIf
2024/07/30 07:41:01 $ go mod tidy
2024/07/30 07:41:01 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:41:01 simpleIfElse_test.go:1:1: expected 'package', found 'go'
2024/07/30 07:41:01 
=== Errors
simpleIfElse_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.018s
2024/07/30 07:41:01 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:41:01 ERROR: execution failed: exit status 1
2024/07/30 07:41:01 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:41:01 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:41:02 A fatal error happened. Please take a look at the logs, and report the problem on https://github.com/symflower/symflower/issues or send a mail to hello@symflower.com. Thanks so much for your help!
Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006c8ba0, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc00054ea80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006c8ba0, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0007879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006c8ba0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0006cdd01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc00012e538, {0xc00012e480?, 0x7f0e1c650f98?, 0xc00012e538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc00012e480}, {0xc0000401e0?, 0x0?, 0xc000493ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc00012e480?}, {0xc0000401e0?, 0x27d8cc0?, 0xc00012e480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:41:02 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:41:02 ERROR: Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006c8ba0, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc00054ea80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006c8ba0, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0007879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006c8ba0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0006cdd01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc00012e538, {0xc00012e480?, 0x7f0e1c650f98?, 0xc00012e538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc00012e480}, {0xc0000401e0?, 0x0?, 0xc000493ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc00012e480?}, {0xc0000401e0?, 0x27d8cc0?, 0xc00012e480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/07/30 07:41:02 $ git clean -df
2024/07/30 07:41:02 Removing simpleIfElse_test.go
2024/07/30 07:41:02 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```

2024/07/30 07:41:04 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (2038 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{"case 1", 1, 0},
			{"default case", 2, 1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tt.i); got!= tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/07/30 07:41:04 $ go mod tidy
2024/07/30 07:41:04 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:41:04 === RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/case_1
=== RUN   TestSimpleSwitchWithReturn/default_case
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/case_1 (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/default_case (0.00s)
PASS
2024/07/30 07:41:04 coverage: 1.4% of statements
2024/07/30 07:41:04 ok  	light	0.003s	coverage: 1.4% of statements
2024/07/30 07:41:04 
DONE 3 tests in 0.242s
2024/07/30 07:41:04 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:41:04 coverage objects: [{"FileRange":"light/simpleSwitchWithReturn.go:3:40-light/simpleSwitchWithReturn.go:4:11","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/simpleSwitchWithReturn.go:5:9-light/simpleSwitchWithReturn.go:6:11","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/simpleSwitchWithReturn.go:7:10-light/simpleSwitchWithReturn.go:8:11","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:41:04 Executes tests with 3 coverage objects
2024/07/30 07:41:04 $ git clean -df
2024/07/30 07:41:04 Removing coverage.json
Removing simpleSwitchWithReturn_test.go
2024/07/30 07:41:04 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```

2024/07/30 07:41:07 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (2552 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			name string
			a    []int
			want bool
		}{
			{"empty", []int{}, true},
			{"single element", []int{5}, true},
			{"sorted", []int{1, 2, 3, 4, 5}, true},
			{"unsorted", []int{1, 2, 3, 4, 1}, false},
			{"repeated elements", []int{1, 1, 1, 1, 1}, true},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := isSorted(tt.a); got!= tt.want {
					t.Errorf("isSorted() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/07/30 07:41:07 $ go mod tidy
2024/07/30 07:41:07 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:41:07 === RUN   TestIsSorted
=== RUN   TestIsSorted/empty
    sort_test.go:23: isSorted() = false, want true
=== RUN   TestIsSorted/single_element
=== RUN   TestIsSorted/sorted
=== RUN   TestIsSorted/unsorted
=== RUN   TestIsSorted/repeated_elements
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/empty (0.00s)
    --- PASS: TestIsSorted/single_element (0.00s)
    --- PASS: TestIsSorted/sorted (0.00s)
2024/07/30 07:41:07     --- PASS: TestIsSorted/unsorted (0.00s)
    --- PASS: TestIsSorted/repeated_elements (0.00s)
FAIL
2024/07/30 07:41:07 coverage: 1.9% of statements
2024/07/30 07:41:07 FAIL	light	0.003s
2024/07/30 07:41:07 
=== Failed
=== FAIL: . TestIsSorted/empty (0.00s)
    sort_test.go:23: isSorted() = false, want true
    --- FAIL: TestIsSorted/empty (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.275s
2024/07/30 07:41:07 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:41:07 coverage objects: [{"FileRange":"light/sort.go:3:29-light/sort.go:7:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/sort.go:9:2-light/sort.go:9:22","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:41:07 Executes tests with 2 coverage objects
2024/07/30 07:41:07 $ git clean -df
2024/07/30 07:41:07 Removing coverage.json
Removing sort_test.go
2024/07/30 07:41:07 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```

2024/07/30 07:41:10 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (2796 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			x []int
		}{
			{[]int{123}},
			{[]int{0}},
			{[]int{-1}},
			{[]int{NULL}},
		}

		for _, tt := range tests {
			_, err := typeArrayAccess(tt.x)
			if err != nil {
				t.Errorf("typeArrayAccess returned an error %v", err)
			}
		}
	}

	func TestTypeArrayAccessEdgeCases(t *testing.T) {
		tests := []struct {
			x []int
		}{
			{make([]int, 0)},
			{[]int{3}},
		}

		for _, tt := range tests {
			_, err := typeArrayAccess(tt.x)
			if err != nil {
				t.Errorf("typeArrayAccess returned an error %v", err)
			}
		}
	}
	```
2024/07/30 07:41:10 $ go mod tidy
2024/07/30 07:41:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:41:10 # light [light.test]
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
2024/07/30 07:41:10 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:41:10 
=== Errors
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value

DONE 0 tests, 3 errors in 0.103s
2024/07/30 07:41:10 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:41:10 ERROR: execution failed: exit status 1
2024/07/30 07:41:10 model response alone failed execution, attempting to fix with "symflower fix "
2024/07/30 07:41:10 $ symflower fix --language golang --workspace /tmp/eval-dev-quality3504448851/light
2024/07/30 07:41:10 Repairing balancedBrackets.go
2024/07/30 07:41:10 Repairing conditionsAnd.go
Repairing equilibriumIndices.go
2024/07/30 07:41:10 Repairing forLoop.go
Repairing simpleSwitchWithReturn.go
2024/07/30 07:41:10 Repairing typeArrayAccess.go
2024/07/30 07:41:10 Repairing typeArrayConsecutiveAccess.go
2024/07/30 07:41:10 Repairing validateDate.go
2024/07/30 07:41:10 Repairing binarySearch.go
2024/07/30 07:41:10 Repairing cascadingIfElse.go
2024/07/30 07:41:10 Repairing klarnerRadoSequence.go
2024/07/30 07:41:10 Repairing knapsack.go
2024/07/30 07:41:10 Repairing magicSquareOdd.go
2024/07/30 07:41:10 Repairing matchBytes.go
Repairing typeArrayMultidimensionalArrayLength.go
2024/07/30 07:41:10 Repairing typeArrayAccess_test.go
2024/07/30 07:41:10 Repairing callLoopConditionsOftenEnough.go
2024/07/30 07:41:10 Repairing simpleIfElse.go
Repairing sort.go
2024/07/30 07:41:10 Repairing collatzCalculator.go
2024/07/30 07:41:10 Repairing jacobiSymbol.go
2024/07/30 07:41:10 Repairing largestProperDivisor.go
2024/07/30 07:41:10 Repairing pascalsTriangle.go
2024/07/30 07:41:10 Repairing phoneNumber.go
2024/07/30 07:41:10 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:41:10 $ go mod tidy
2024/07/30 07:41:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:41:11 # light [light.test]
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
2024/07/30 07:41:11 WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
2024/07/30 07:41:11 
=== Errors
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
2024/07/30 07:41:11 
DONE 0 tests, 3 errors in 0.130s
2024/07/30 07:41:11 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:41:11 ERROR: execution failed: exit status 1
2024/07/30 07:41:11 $ git clean -df
2024/07/30 07:41:11 Removing coverage.json
Removing typeArrayAccess_test.go
2024/07/30 07:41:11 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```

2024/07/30 07:46:18 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (307895 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			input       []int
			expected    int
			inputNames  []string
			inputValues []int
		}{
			{
				input:       []int{0, 0, 0},
				expected:    1,
				inputNames:  []string{"i1", "i2", "i3"},
				inputValues: []int{0, 8, 0},
			},
			{
				input:       []int{0, 8, 0},
				expected:    2,
				inputNames:  []string{"i1", "i2", "i3"},
				inputValues: []int{0, 8, 0},
			},
			{
				input:       []int{0, 8, -1, 0, 5, 2, 8},
				expected:    14,
				inputNames:  []string{"i1", "i2", "i3", "i4", "i5", "i6", "i7"},
				inputValues: []int{0, 8, -1, 0, 5, 2, 8},
			},
			{
				input:       []int{3, 3, 3},
				expected:    0,
				inputNames:  []string{"i1", "i2", "i3"},
				inputValues: []int{3, 3, 3},
			},
			{
				input:       []int{-1000, -1, -1000},
				expected:    0,
				inputNames:  []string{"i1", "i2", "i3"},
				inputValues: []int{-1000, -1, -1000},
			},
		}

		for i, tt := range tests {
			got := typeArrayConsecutiveAccess(tt.input)
			if got!= tt.expected {
				t.Errorf("%d: typeArrayConsecutiveAccess() = %d, expected %d", i+1, got, tt.expected)
			}
		}
	}

	func TestTypeArrayConsecutiveAccessEdgeCases(t *testing.T) {
		tests := []struct {
			input       []int
			expected    int
			inputNames  []string
			inputValues []int
		}{
			{
				input:       []int{0},
				expected:    1,
				inputNames:  []string{"i1"},
				inputValues: []int{0},
			},
			{
				input:       []int{8},
				expected:    1,
				inputNames:  []string{"i1"},
				inputValues: []int{8},
			},
			{
				input:       []int{0, 8},
				expected:    2,
				inputNames:  []string{"i1", "i2"},
				inputValues: []int{0, 8},
			},
		}

		for i, tt := range tests {
			got := typeArrayConsecutiveAccess(tt.input)
			if got!= tt.expected {
				t.Errorf("%d: typeArrayConsecutiveAccess() = %d, expected %d", i+1, got, tt.expected)
			}
		}
	}
	```
2024/07/30 07:46:19 $ go mod tidy
2024/07/30 07:46:19 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:46:19 === RUN   TestTypeArrayConsecutiveAccess
    typeArrayConsecutiveAccess_test.go:49: 3: typeArrayConsecutiveAccess() = 2, expected 14
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
=== RUN   TestTypeArrayConsecutiveAccessEdgeCases
--- FAIL: TestTypeArrayConsecutiveAccessEdgeCases (0.00s)
2024/07/30 07:46:19 panic: runtime error: index out of range [1] with length 1 [recovered]
	panic: runtime error: index out of range [1] with length 1

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c160, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c160?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess.go:8
light.TestTypeArrayConsecutiveAccessEdgeCases(0xc000007ba0)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess_test.go:82 +0x487
testing.tRunner(0xc000007ba0, 0x588020)
2024/07/30 07:46:19 	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
2024/07/30 07:46:19 FAIL	light	0.004s
2024/07/30 07:46:19 
=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
    typeArrayConsecutiveAccess_test.go:49: 3: typeArrayConsecutiveAccess() = 2, expected 14

=== FAIL: . TestTypeArrayConsecutiveAccessEdgeCases (0.00s)
panic: runtime error: index out of range [1] with length 1 [recovered]
	panic: runtime error: index out of range [1] with length 1

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c160, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c160?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess.go:8
light.TestTypeArrayConsecutiveAccessEdgeCases(0xc000007ba0)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess_test.go:82 +0x487
testing.tRunner(0xc000007ba0, 0x588020)
2024/07/30 07:46:19 	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 2 tests, 2 failures in 0.259s
2024/07/30 07:46:19 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/07/30 07:46:19 ERROR: execution failed: exit status 1
2024/07/30 07:46:19 coverage objects: null
2024/07/30 07:46:19 Executes tests with 0 coverage objects
2024/07/30 07:46:19 $ git clean -df
2024/07/30 07:46:19 Removing coverage.json
Removing typeArrayConsecutiveAccess_test.go
2024/07/30 07:46:19 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```

2024/07/30 07:46:23 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (3692 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{
				name: "Empty",
				x:    [][]int{},
				want: 0,
			},
			{
				name: "One Row One Column",
				x:    [][]int{{1}},
				want: 0,
			},
			{
				name: "One Row Two Columns",
				x:    [][]int{{1, 2}},
				want: 1,
			},
			{
				name: "Two Rows One Column",
				x:    [][]int{{1}, {2}},
				want: 0,
			},
			{
				name: "Two Rows Two Columns",
				x:    [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
			{
				name: "More than Two Rows",
				x:    [][]int{{1, 2}, {3, 4}, {5, 6}},
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.x); got!= tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/07/30 07:46:23 $ go mod tidy
2024/07/30 07:46:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:46:23 === RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Empty
=== RUN   TestTypeArrayMultidimensionalArrayLength/One_Row_One_Column
=== RUN   TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 1, want 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_Rows_Two_Columns
=== RUN   TestTypeArrayMultidimensionalArrayLength/More_than_Two_Rows
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Empty (0.00s)
2024/07/30 07:46:23     --- PASS: TestTypeArrayMultidimensionalArrayLength/One_Row_One_Column (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Two_Rows_Two_Columns (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/More_than_Two_Rows (0.00s)
FAIL
2024/07/30 07:46:23 coverage: 2.4% of statements
2024/07/30 07:46:23 FAIL	light	0.002s
2024/07/30 07:46:23 
=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 7 tests, 3 failures in 0.279s
2024/07/30 07:46:23 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:46:23 coverage objects: [{"FileRange":"light/typeArrayMultidimensionalArrayLength.go:12:2-light/typeArrayMultidimensionalArrayLength.go:12:10","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/typeArrayMultidimensionalArrayLength.go:3:58-light/typeArrayMultidimensionalArrayLength.go:7:4","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/typeArrayMultidimensionalArrayLength.go:9:3-light/typeArrayMultidimensionalArrayLength.go:9:11","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:46:23 Executes tests with 3 coverage objects
2024/07/30 07:46:23 $ git clean -df
2024/07/30 07:46:23 Removing coverage.json
Removing typeArrayMultidimensionalArrayLength_test.go
2024/07/30 07:46:23 Querying model "openrouter/meta-llama/llama-3.1-8b-instruct" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code in a fenced code block and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```

2024/07/30 07:46:26 Model "openrouter/meta-llama/llama-3.1-8b-instruct" responded (3149 ms) with:
	```go
	package light

	import (
		"testing"
	)

	func TestValidDate(t *testing.T) {
		tests := []struct {
			day    int
			month  int
			year   int
			expect bool
		}{
			{1, 1, 1583, true},
			{31, 12, 1583, true},
			{29, 2, 2000, true},
			{29, 2, 1900, false},
			{29, 2, 1600, true},
			{30, 2, 1583, false},
			{1, 13, 1583, false},
			{0, 1, 1583, false},
			{31, 1, 1583, false},
			{31, 13, 1583, false},
			{31, 1, 0, false},
			{31, 1, -1, false},
		}

		for _, test := range tests {
			if result := validDate(test.day, test.month, test.year); result!= test.expect {
				t.Errorf("validDate(%d, %d, %d) = %v, want %v", test.day, test.month, test.year, result, test.expect)
			}
		}
	}
	```
2024/07/30 07:46:26 $ go mod tidy
2024/07/30 07:46:27 $ symflower test --language golang --workspace /tmp/eval-dev-quality3504448851/light --coverage-file /tmp/eval-dev-quality3504448851/light/coverage.json
2024/07/30 07:46:27 === RUN   TestValidDate
    validateDate_test.go:30: validDate(29, 2, 2000) = false, want true
    validateDate_test.go:30: validDate(29, 2, 1900) = true, want false
    validateDate_test.go:30: validDate(29, 2, 1600) = false, want true
    validateDate_test.go:30: validDate(31, 1, 1583) = true, want false
--- FAIL: TestValidDate (0.00s)
FAIL
2024/07/30 07:46:27 coverage: 6.6% of statements
2024/07/30 07:46:27 FAIL	light	0.003s
2024/07/30 07:46:27 
=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:30: validDate(29, 2, 2000) = false, want true
    validateDate_test.go:30: validDate(29, 2, 1900) = true, want false
    validateDate_test.go:30: validDate(29, 2, 1600) = false, want true
    validateDate_test.go:30: validDate(31, 1, 1583) = true, want false
2024/07/30 07:46:27 
DONE 1 tests, 1 failure in 0.253s
2024/07/30 07:46:27 [0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/07/30 07:46:27 coverage objects: [{"FileRange":"light/validateDate.go:12:2-light/validateDate.go:14:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:15:2-light/validateDate.go:17:16","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:20:9-light/validateDate.go:23:5","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:25:8-light/validateDate.go:26:31","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:31:2-light/validateDate.go:31:13","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:3:51-light/validateDate.go:8:3","CoverageType":"NodeCoverageTrue","Count":1},{"FileRange":"light/validateDate.go:9:2-light/validateDate.go:11:3","CoverageType":"NodeCoverageTrue","Count":1}]
2024/07/30 07:46:27 Executes tests with 7 coverage objects
2024/07/30 07:46:27 Evaluated model "openrouter/meta-llama/llama-3.1-8b-instruct" on task "write-tests" using language "golang" and repository "golang/light": encountered 32 problems: [exit status 1
WARN invalid TestEvent: FAIL	light [setup failed]
# light
bad output from test2json: FAIL	light [setup failed]
# light
balancedBrackets_test.go:52:30: expected '(', found sexleş0

=== Errors
balancedBrackets_test.go:52:30: expected '(', found sexleş0

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
WARN invalid TestEvent: FAIL	light [setup failed]
# light
bad output from test2json: FAIL	light [setup failed]
# light
balancedBrackets_test.go:52:30: expected '(', found sexleş0

=== Errors
balancedBrackets_test.go:52:30: expected '(', found sexleş0

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: Internal error: format.Node internal error (59:1: expected declaration, found BadDecl):
"     0  *ast.File {\n     1  .  Doc: nil\n     2  .  Package: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:1:1\n     3  .  Name: *ast.Ident {\n     4  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:1:9\n     5  .  .  Name: \"light\"\n     6  .  .  Obj: nil\n     7  .  }\n     8  .  Decls: []ast.Decl (len = 10) {\n     9  .  .  0: *ast.GenDecl {\n    10  .  .  .  Doc: nil\n    11  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:3:1\n    12  .  .  .  Tok: import\n    13  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:3:8\n    14  .  .  .  Specs: []ast.Spec (len = 1) {\n    15  .  .  .  .  0: *ast.ImportSpec {\n    16  .  .  .  .  .  Doc: nil\n    17  .  .  .  .  .  Name: nil\n    18  .  .  .  .  .  Path: *ast.BasicLit {\n    19  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:5:2\n    20  .  .  .  .  .  .  Kind: STRING\n    21  .  .  .  .  .  .  Value: \"\\\"testing\\\"\"\n    22  .  .  .  .  .  }\n    23  .  .  .  .  .  Comment: nil\n    24  .  .  .  .  .  EndPos: -\n    25  .  .  .  .  }\n    26  .  .  .  }\n    27  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:6:1\n    28  .  .  }\n    29  .  .  1: *ast.FuncDecl {\n    30  .  .  .  Doc: nil\n    31  .  .  .  Recv: nil\n    32  .  .  .  Name: *ast.Ident {\n    33  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:6\n    34  .  .  .  .  Name: \"TestHasBalancedBrackets_HasPair\"\n    35  .  .  .  .  Obj: *ast.Object {\n    36  .  .  .  .  .  Kind: func\n    37  .  .  .  .  .  Name: \"TestHasBalancedBrackets_HasPair\"\n    38  .  .  .  .  .  Decl: *(obj @ 29)\n    39  .  .  .  .  .  Data: nil\n    40  .  .  .  .  .  Type: nil\n    41  .  .  .  .  }\n    42  .  .  .  }\n    43  .  .  .  Type: *ast.FuncType {\n    44  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:1\n    45  .  .  .  .  TypeParams: nil\n    46  .  .  .  .  Params: *ast.FieldList {\n    47  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:37\n    48  .  .  .  .  .  List: []*ast.Field (len = 1) {\n    49  .  .  .  .  .  .  0: *ast.Field {\n    50  .  .  .  .  .  .  .  Doc: nil\n    51  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n    52  .  .  .  .  .  .  .  .  0: *ast.Ident {\n    53  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:38\n    54  .  .  .  .  .  .  .  .  .  Name: \"t\"\n    55  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n    56  .  .  .  .  .  .  .  .  .  .  Kind: var\n    57  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n    58  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 49)\n    59  .  .  .  .  .  .  .  .  .  .  Data: nil\n    60  .  .  .  .  .  .  .  .  .  .  Type: nil\n    61  .  .  .  .  .  .  .  .  .  }\n    62  .  .  .  .  .  .  .  .  }\n    63  .  .  .  .  .  .  .  }\n    64  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n    65  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:40\n    66  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n    67  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n    68  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:41\n    69  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n    70  .  .  .  .  .  .  .  .  .  .  Obj: nil\n    71  .  .  .  .  .  .  .  .  .  }\n    72  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n    73  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:49\n    74  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n    75  .  .  .  .  .  .  .  .  .  .  Obj: nil\n    76  .  .  .  .  .  .  .  .  .  }\n    77  .  .  .  .  .  .  .  .  }\n    78  .  .  .  .  .  .  .  }\n    79  .  .  .  .  .  .  .  Tag: nil\n    80  .  .  .  .  .  .  .  Comment: nil\n    81  .  .  .  .  .  .  }\n    82  .  .  .  .  .  }\n    83  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:50\n    84  .  .  .  .  }\n    85  .  .  .  .  Results: nil\n    86  .  .  .  }\n    87  .  .  .  Body: *ast.BlockStmt {\n    88  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:8:52\n    89  .  .  .  .  List: []ast.Stmt (len = 2) {\n    90  .  .  .  .  .  0: *ast.AssignStmt {\n    91  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n    92  .  .  .  .  .  .  .  0: *ast.Ident {\n    93  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:2\n    94  .  .  .  .  .  .  .  .  Name: \"brackets\"\n    95  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n    96  .  .  .  .  .  .  .  .  .  Kind: var\n    97  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n    98  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 90)\n    99  .  .  .  .  .  .  .  .  .  Data: nil\n   100  .  .  .  .  .  .  .  .  .  Type: nil\n   101  .  .  .  .  .  .  .  .  }\n   102  .  .  .  .  .  .  .  }\n   103  .  .  .  .  .  .  }\n   104  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:11\n   105  .  .  .  .  .  .  Tok: :=\n   106  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   107  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   108  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   109  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:14\n   110  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   111  .  .  .  .  .  .  .  .  .  Obj: nil\n   112  .  .  .  .  .  .  .  .  }\n   113  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:33\n   114  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   115  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   116  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:34\n   117  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   118  .  .  .  .  .  .  .  .  .  .  Value: \"`[Independent heights]screen`\"\n   119  .  .  .  .  .  .  .  .  .  }\n   120  .  .  .  .  .  .  .  .  }\n   121  .  .  .  .  .  .  .  .  Ellipsis: -\n   122  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:9:63\n   123  .  .  .  .  .  .  .  }\n   124  .  .  .  .  .  .  }\n   125  .  .  .  .  .  }\n   126  .  .  .  .  .  1: *ast.IfStmt {\n   127  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:2\n   128  .  .  .  .  .  .  Init: nil\n   129  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n   130  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:4\n   131  .  .  .  .  .  .  .  Op: !\n   132  .  .  .  .  .  .  .  X: *ast.Ident {\n   133  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:5\n   134  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   135  .  .  .  .  .  .  .  .  Obj: *(obj @ 95)\n   136  .  .  .  .  .  .  .  }\n   137  .  .  .  .  .  .  }\n   138  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   139  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:10:14\n   140  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   141  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   142  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   143  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   144  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   145  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:3\n   146  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   147  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 55)\n   148  .  .  .  .  .  .  .  .  .  .  .  }\n   149  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   150  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:5\n   151  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   152  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   153  .  .  .  .  .  .  .  .  .  .  .  }\n   154  .  .  .  .  .  .  .  .  .  .  }\n   155  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:11\n   156  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   157  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   158  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:12\n   159  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   160  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return true\\\"\"\n   161  .  .  .  .  .  .  .  .  .  .  .  }\n   162  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   163  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:42\n   164  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   165  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 95)\n   166  .  .  .  .  .  .  .  .  .  .  .  }\n   167  .  .  .  .  .  .  .  .  .  .  }\n   168  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   169  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:11:50\n   170  .  .  .  .  .  .  .  .  .  }\n   171  .  .  .  .  .  .  .  .  }\n   172  .  .  .  .  .  .  .  }\n   173  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:12:2\n   174  .  .  .  .  .  .  }\n   175  .  .  .  .  .  .  Else: nil\n   176  .  .  .  .  .  }\n   177  .  .  .  .  }\n   178  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:13:1\n   179  .  .  .  }\n   180  .  .  }\n   181  .  .  2: *ast.FuncDecl {\n   182  .  .  .  Doc: nil\n   183  .  .  .  Recv: nil\n   184  .  .  .  Name: *ast.Ident {\n   185  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:6\n   186  .  .  .  .  Name: \"TestHasBalancedBrackets_NoPair\"\n   187  .  .  .  .  Obj: *ast.Object {\n   188  .  .  .  .  .  Kind: func\n   189  .  .  .  .  .  Name: \"TestHasBalancedBrackets_NoPair\"\n   190  .  .  .  .  .  Decl: *(obj @ 181)\n   191  .  .  .  .  .  Data: nil\n   192  .  .  .  .  .  Type: nil\n   193  .  .  .  .  }\n   194  .  .  .  }\n   195  .  .  .  Type: *ast.FuncType {\n   196  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:1\n   197  .  .  .  .  TypeParams: nil\n   198  .  .  .  .  Params: *ast.FieldList {\n   199  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:36\n   200  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   201  .  .  .  .  .  .  0: *ast.Field {\n   202  .  .  .  .  .  .  .  Doc: nil\n   203  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   204  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   205  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:37\n   206  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   207  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   208  .  .  .  .  .  .  .  .  .  .  Kind: var\n   209  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   210  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 201)\n   211  .  .  .  .  .  .  .  .  .  .  Data: nil\n   212  .  .  .  .  .  .  .  .  .  .  Type: nil\n   213  .  .  .  .  .  .  .  .  .  }\n   214  .  .  .  .  .  .  .  .  }\n   215  .  .  .  .  .  .  .  }\n   216  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   217  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:39\n   218  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   219  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   220  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:40\n   221  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   222  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   223  .  .  .  .  .  .  .  .  .  }\n   224  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   225  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:48\n   226  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   227  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   228  .  .  .  .  .  .  .  .  .  }\n   229  .  .  .  .  .  .  .  .  }\n   230  .  .  .  .  .  .  .  }\n   231  .  .  .  .  .  .  .  Tag: nil\n   232  .  .  .  .  .  .  .  Comment: nil\n   233  .  .  .  .  .  .  }\n   234  .  .  .  .  .  }\n   235  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:49\n   236  .  .  .  .  }\n   237  .  .  .  .  Results: nil\n   238  .  .  .  }\n   239  .  .  .  Body: *ast.BlockStmt {\n   240  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:15:51\n   241  .  .  .  .  List: []ast.Stmt (len = 2) {\n   242  .  .  .  .  .  0: *ast.AssignStmt {\n   243  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   244  .  .  .  .  .  .  .  0: *ast.Ident {\n   245  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:2\n   246  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   247  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   248  .  .  .  .  .  .  .  .  .  Kind: var\n   249  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   250  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 242)\n   251  .  .  .  .  .  .  .  .  .  Data: nil\n   252  .  .  .  .  .  .  .  .  .  Type: nil\n   253  .  .  .  .  .  .  .  .  }\n   254  .  .  .  .  .  .  .  }\n   255  .  .  .  .  .  .  }\n   256  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:11\n   257  .  .  .  .  .  .  Tok: :=\n   258  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   259  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   260  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   261  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:14\n   262  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   263  .  .  .  .  .  .  .  .  .  Obj: nil\n   264  .  .  .  .  .  .  .  .  }\n   265  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:33\n   266  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   267  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   268  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:34\n   269  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   270  .  .  .  .  .  .  .  .  .  .  Value: \"`[HEavierLight< HeavyerDribbble)Compilator [ tye `\"\n   271  .  .  .  .  .  .  .  .  .  }\n   272  .  .  .  .  .  .  .  .  }\n   273  .  .  .  .  .  .  .  .  Ellipsis: -\n   274  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:16:84\n   275  .  .  .  .  .  .  .  }\n   276  .  .  .  .  .  .  }\n   277  .  .  .  .  .  }\n   278  .  .  .  .  .  1: *ast.IfStmt {\n   279  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:17:2\n   280  .  .  .  .  .  .  Init: nil\n   281  .  .  .  .  .  .  Cond: *ast.Ident {\n   282  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:17:5\n   283  .  .  .  .  .  .  .  Name: \"brackets\"\n   284  .  .  .  .  .  .  .  Obj: *(obj @ 247)\n   285  .  .  .  .  .  .  }\n   286  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   287  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:17:14\n   288  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   289  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   290  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   291  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   292  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   293  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:3\n   294  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   295  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 207)\n   296  .  .  .  .  .  .  .  .  .  .  .  }\n   297  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   298  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:5\n   299  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   300  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   301  .  .  .  .  .  .  .  .  .  .  .  }\n   302  .  .  .  .  .  .  .  .  .  .  }\n   303  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:11\n   304  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   305  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   306  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:12\n   307  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   308  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return false\\\"\"\n   309  .  .  .  .  .  .  .  .  .  .  .  }\n   310  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   311  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:43\n   312  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   313  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 247)\n   314  .  .  .  .  .  .  .  .  .  .  .  }\n   315  .  .  .  .  .  .  .  .  .  .  }\n   316  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   317  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:18:51\n   318  .  .  .  .  .  .  .  .  .  }\n   319  .  .  .  .  .  .  .  .  }\n   320  .  .  .  .  .  .  .  }\n   321  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:19:2\n   322  .  .  .  .  .  .  }\n   323  .  .  .  .  .  .  Else: nil\n   324  .  .  .  .  .  }\n   325  .  .  .  .  }\n   326  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:20:1\n   327  .  .  .  }\n   328  .  .  }\n   329  .  .  3: *ast.FuncDecl {\n   330  .  .  .  Doc: nil\n   331  .  .  .  Recv: nil\n   332  .  .  .  Name: *ast.Ident {\n   333  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:6\n   334  .  .  .  .  Name: \"TestHasBalancedBracketsigure\"\n   335  .  .  .  .  Obj: *ast.Object {\n   336  .  .  .  .  .  Kind: func\n   337  .  .  .  .  .  Name: \"TestHasBalancedBracketsigure\"\n   338  .  .  .  .  .  Decl: *(obj @ 329)\n   339  .  .  .  .  .  Data: nil\n   340  .  .  .  .  .  Type: nil\n   341  .  .  .  .  }\n   342  .  .  .  }\n   343  .  .  .  Type: *ast.FuncType {\n   344  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:1\n   345  .  .  .  .  TypeParams: nil\n   346  .  .  .  .  Params: *ast.FieldList {\n   347  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:34\n   348  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   349  .  .  .  .  .  .  0: *ast.Field {\n   350  .  .  .  .  .  .  .  Doc: nil\n   351  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   352  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   353  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:35\n   354  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   355  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   356  .  .  .  .  .  .  .  .  .  .  Kind: var\n   357  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   358  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 349)\n   359  .  .  .  .  .  .  .  .  .  .  Data: nil\n   360  .  .  .  .  .  .  .  .  .  .  Type: nil\n   361  .  .  .  .  .  .  .  .  .  }\n   362  .  .  .  .  .  .  .  .  }\n   363  .  .  .  .  .  .  .  }\n   364  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   365  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:37\n   366  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   367  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   368  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:38\n   369  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   370  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   371  .  .  .  .  .  .  .  .  .  }\n   372  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   373  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:46\n   374  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   375  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   376  .  .  .  .  .  .  .  .  .  }\n   377  .  .  .  .  .  .  .  .  }\n   378  .  .  .  .  .  .  .  }\n   379  .  .  .  .  .  .  .  Tag: nil\n   380  .  .  .  .  .  .  .  Comment: nil\n   381  .  .  .  .  .  .  }\n   382  .  .  .  .  .  }\n   383  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:47\n   384  .  .  .  .  }\n   385  .  .  .  .  Results: nil\n   386  .  .  .  }\n   387  .  .  .  Body: *ast.BlockStmt {\n   388  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:22:49\n   389  .  .  .  .  List: []ast.Stmt (len = 2) {\n   390  .  .  .  .  .  0: *ast.AssignStmt {\n   391  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   392  .  .  .  .  .  .  .  0: *ast.Ident {\n   393  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:2\n   394  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   395  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   396  .  .  .  .  .  .  .  .  .  Kind: var\n   397  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   398  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 390)\n   399  .  .  .  .  .  .  .  .  .  Data: nil\n   400  .  .  .  .  .  .  .  .  .  Type: nil\n   401  .  .  .  .  .  .  .  .  }\n   402  .  .  .  .  .  .  .  }\n   403  .  .  .  .  .  .  }\n   404  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:11\n   405  .  .  .  .  .  .  Tok: :=\n   406  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   407  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   408  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   409  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:14\n   410  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   411  .  .  .  .  .  .  .  .  .  Obj: nil\n   412  .  .  .  .  .  .  .  .  }\n   413  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:33\n   414  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   415  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   416  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:23:34\n   417  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   418  .  .  .  .  .  .  .  .  .  .  Value: \"`[kits EC figure / Fast linkDX JVM [motion π MITCase annotate Mogj efficient seismic recogn.paint ] Algorithms ClearACT Sun NOWHeightwaters ME surreal REG filter[it case with bowls mứcوية IRDC img frame Oval video Twin conc LocalDate methods Bon titles passenger. virus uns suis vor onT notificationwin moist marc tort Mens._series lessons Roma multiplication Music vill--\\n Easter marc/t Relax banging fires _ infection одну ven vi immun Cre Folder absence We nim emb Shape logout wisead guide builder )\\n`\"\n   419  .  .  .  .  .  .  .  .  .  }\n   420  .  .  .  .  .  .  .  .  }\n   421  .  .  .  .  .  .  .  .  Ellipsis: -\n   422  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:25:2\n   423  .  .  .  .  .  .  .  }\n   424  .  .  .  .  .  .  }\n   425  .  .  .  .  .  }\n   426  .  .  .  .  .  1: *ast.IfStmt {\n   427  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:2\n   428  .  .  .  .  .  .  Init: nil\n   429  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n   430  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:4\n   431  .  .  .  .  .  .  .  Op: !\n   432  .  .  .  .  .  .  .  X: *ast.Ident {\n   433  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:5\n   434  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   435  .  .  .  .  .  .  .  .  Obj: *(obj @ 395)\n   436  .  .  .  .  .  .  .  }\n   437  .  .  .  .  .  .  }\n   438  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   439  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:26:14\n   440  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   441  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   442  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   443  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   444  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   445  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:3\n   446  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   447  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 355)\n   448  .  .  .  .  .  .  .  .  .  .  .  }\n   449  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   450  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:5\n   451  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   452  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   453  .  .  .  .  .  .  .  .  .  .  .  }\n   454  .  .  .  .  .  .  .  .  .  .  }\n   455  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:11\n   456  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   457  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   458  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:12\n   459  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   460  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected brackets to contain 4 pairs, but was: %v\\\"\"\n   461  .  .  .  .  .  .  .  .  .  .  .  }\n   462  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   463  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:65\n   464  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   465  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 395)\n   466  .  .  .  .  .  .  .  .  .  .  .  }\n   467  .  .  .  .  .  .  .  .  .  .  }\n   468  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   469  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:27:73\n   470  .  .  .  .  .  .  .  .  .  }\n   471  .  .  .  .  .  .  .  .  }\n   472  .  .  .  .  .  .  .  }\n   473  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:28:2\n   474  .  .  .  .  .  .  }\n   475  .  .  .  .  .  .  Else: nil\n   476  .  .  .  .  .  }\n   477  .  .  .  .  }\n   478  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:29:1\n   479  .  .  .  }\n   480  .  .  }\n   481  .  .  4: *ast.FuncDecl {\n   482  .  .  .  Doc: nil\n   483  .  .  .  Recv: nil\n   484  .  .  .  Name: *ast.Ident {\n   485  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:6\n   486  .  .  .  .  Name: \"TestHasBalancedBrackets_OneBracket\"\n   487  .  .  .  .  Obj: *ast.Object {\n   488  .  .  .  .  .  Kind: func\n   489  .  .  .  .  .  Name: \"TestHasBalancedBrackets_OneBracket\"\n   490  .  .  .  .  .  Decl: *(obj @ 481)\n   491  .  .  .  .  .  Data: nil\n   492  .  .  .  .  .  Type: nil\n   493  .  .  .  .  }\n   494  .  .  .  }\n   495  .  .  .  Type: *ast.FuncType {\n   496  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:1\n   497  .  .  .  .  TypeParams: nil\n   498  .  .  .  .  Params: *ast.FieldList {\n   499  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:40\n   500  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   501  .  .  .  .  .  .  0: *ast.Field {\n   502  .  .  .  .  .  .  .  Doc: nil\n   503  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   504  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   505  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:41\n   506  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   507  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   508  .  .  .  .  .  .  .  .  .  .  Kind: var\n   509  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   510  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 501)\n   511  .  .  .  .  .  .  .  .  .  .  Data: nil\n   512  .  .  .  .  .  .  .  .  .  .  Type: nil\n   513  .  .  .  .  .  .  .  .  .  }\n   514  .  .  .  .  .  .  .  .  }\n   515  .  .  .  .  .  .  .  }\n   516  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   517  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:43\n   518  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   519  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   520  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:44\n   521  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   522  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   523  .  .  .  .  .  .  .  .  .  }\n   524  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   525  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:52\n   526  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   527  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   528  .  .  .  .  .  .  .  .  .  }\n   529  .  .  .  .  .  .  .  .  }\n   530  .  .  .  .  .  .  .  }\n   531  .  .  .  .  .  .  .  Tag: nil\n   532  .  .  .  .  .  .  .  Comment: nil\n   533  .  .  .  .  .  .  }\n   534  .  .  .  .  .  }\n   535  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:53\n   536  .  .  .  .  }\n   537  .  .  .  .  Results: nil\n   538  .  .  .  }\n   539  .  .  .  Body: *ast.BlockStmt {\n   540  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:31:55\n   541  .  .  .  .  List: []ast.Stmt (len = 2) {\n   542  .  .  .  .  .  0: *ast.AssignStmt {\n   543  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   544  .  .  .  .  .  .  .  0: *ast.Ident {\n   545  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:2\n   546  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   547  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   548  .  .  .  .  .  .  .  .  .  Kind: var\n   549  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   550  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 542)\n   551  .  .  .  .  .  .  .  .  .  Data: nil\n   552  .  .  .  .  .  .  .  .  .  Type: nil\n   553  .  .  .  .  .  .  .  .  }\n   554  .  .  .  .  .  .  .  }\n   555  .  .  .  .  .  .  }\n   556  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:11\n   557  .  .  .  .  .  .  Tok: :=\n   558  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   559  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   560  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   561  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:14\n   562  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   563  .  .  .  .  .  .  .  .  .  Obj: nil\n   564  .  .  .  .  .  .  .  .  }\n   565  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:33\n   566  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   567  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   568  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:34\n   569  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   570  .  .  .  .  .  .  .  .  .  .  Value: \"`[light.com`\"\n   571  .  .  .  .  .  .  .  .  .  }\n   572  .  .  .  .  .  .  .  .  }\n   573  .  .  .  .  .  .  .  .  Ellipsis: -\n   574  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:32:46\n   575  .  .  .  .  .  .  .  }\n   576  .  .  .  .  .  .  }\n   577  .  .  .  .  .  }\n   578  .  .  .  .  .  1: *ast.IfStmt {\n   579  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:33:2\n   580  .  .  .  .  .  .  Init: nil\n   581  .  .  .  .  .  .  Cond: *ast.Ident {\n   582  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:33:5\n   583  .  .  .  .  .  .  .  Name: \"brackets\"\n   584  .  .  .  .  .  .  .  Obj: *(obj @ 547)\n   585  .  .  .  .  .  .  }\n   586  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   587  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:33:14\n   588  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   589  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   590  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   591  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   592  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   593  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:3\n   594  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   595  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 507)\n   596  .  .  .  .  .  .  .  .  .  .  .  }\n   597  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   598  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:5\n   599  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   600  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   601  .  .  .  .  .  .  .  .  .  .  .  }\n   602  .  .  .  .  .  .  .  .  .  .  }\n   603  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:11\n   604  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   605  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   606  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:12\n   607  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   608  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return false\\\"\"\n   609  .  .  .  .  .  .  .  .  .  .  .  }\n   610  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   611  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:43\n   612  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   613  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 547)\n   614  .  .  .  .  .  .  .  .  .  .  .  }\n   615  .  .  .  .  .  .  .  .  .  .  }\n   616  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   617  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:34:51\n   618  .  .  .  .  .  .  .  .  .  }\n   619  .  .  .  .  .  .  .  .  }\n   620  .  .  .  .  .  .  .  }\n   621  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:35:2\n   622  .  .  .  .  .  .  }\n   623  .  .  .  .  .  .  Else: nil\n   624  .  .  .  .  .  }\n   625  .  .  .  .  }\n   626  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:36:1\n   627  .  .  .  }\n   628  .  .  }\n   629  .  .  5: *ast.FuncDecl {\n   630  .  .  .  Doc: nil\n   631  .  .  .  Recv: nil\n   632  .  .  .  Name: *ast.Ident {\n   633  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:6\n   634  .  .  .  .  Name: \"TestHasBalancedBrackets_EmptyString\"\n   635  .  .  .  .  Obj: *ast.Object {\n   636  .  .  .  .  .  Kind: func\n   637  .  .  .  .  .  Name: \"TestHasBalancedBrackets_EmptyString\"\n   638  .  .  .  .  .  Decl: *(obj @ 629)\n   639  .  .  .  .  .  Data: nil\n   640  .  .  .  .  .  Type: nil\n   641  .  .  .  .  }\n   642  .  .  .  }\n   643  .  .  .  Type: *ast.FuncType {\n   644  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:1\n   645  .  .  .  .  TypeParams: nil\n   646  .  .  .  .  Params: *ast.FieldList {\n   647  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:41\n   648  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   649  .  .  .  .  .  .  0: *ast.Field {\n   650  .  .  .  .  .  .  .  Doc: nil\n   651  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   652  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   653  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:42\n   654  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   655  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   656  .  .  .  .  .  .  .  .  .  .  Kind: var\n   657  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   658  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 649)\n   659  .  .  .  .  .  .  .  .  .  .  Data: nil\n   660  .  .  .  .  .  .  .  .  .  .  Type: nil\n   661  .  .  .  .  .  .  .  .  .  }\n   662  .  .  .  .  .  .  .  .  }\n   663  .  .  .  .  .  .  .  }\n   664  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   665  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:44\n   666  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   667  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   668  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:45\n   669  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   670  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   671  .  .  .  .  .  .  .  .  .  }\n   672  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   673  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:53\n   674  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   675  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   676  .  .  .  .  .  .  .  .  .  }\n   677  .  .  .  .  .  .  .  .  }\n   678  .  .  .  .  .  .  .  }\n   679  .  .  .  .  .  .  .  Tag: nil\n   680  .  .  .  .  .  .  .  Comment: nil\n   681  .  .  .  .  .  .  }\n   682  .  .  .  .  .  }\n   683  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:54\n   684  .  .  .  .  }\n   685  .  .  .  .  Results: nil\n   686  .  .  .  }\n   687  .  .  .  Body: *ast.BlockStmt {\n   688  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:38:56\n   689  .  .  .  .  List: []ast.Stmt (len = 2) {\n   690  .  .  .  .  .  0: *ast.AssignStmt {\n   691  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   692  .  .  .  .  .  .  .  0: *ast.Ident {\n   693  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:2\n   694  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   695  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   696  .  .  .  .  .  .  .  .  .  Kind: var\n   697  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   698  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 690)\n   699  .  .  .  .  .  .  .  .  .  Data: nil\n   700  .  .  .  .  .  .  .  .  .  Type: nil\n   701  .  .  .  .  .  .  .  .  }\n   702  .  .  .  .  .  .  .  }\n   703  .  .  .  .  .  .  }\n   704  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:11\n   705  .  .  .  .  .  .  Tok: :=\n   706  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   707  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   708  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   709  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:14\n   710  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   711  .  .  .  .  .  .  .  .  .  Obj: nil\n   712  .  .  .  .  .  .  .  .  }\n   713  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:33\n   714  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   715  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   716  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:34\n   717  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   718  .  .  .  .  .  .  .  .  .  .  Value: \"``\"\n   719  .  .  .  .  .  .  .  .  .  }\n   720  .  .  .  .  .  .  .  .  }\n   721  .  .  .  .  .  .  .  .  Ellipsis: -\n   722  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:39:36\n   723  .  .  .  .  .  .  .  }\n   724  .  .  .  .  .  .  }\n   725  .  .  .  .  .  }\n   726  .  .  .  .  .  1: *ast.IfStmt {\n   727  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:2\n   728  .  .  .  .  .  .  Init: nil\n   729  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n   730  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:4\n   731  .  .  .  .  .  .  .  Op: !\n   732  .  .  .  .  .  .  .  X: *ast.Ident {\n   733  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:5\n   734  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   735  .  .  .  .  .  .  .  .  Obj: *(obj @ 695)\n   736  .  .  .  .  .  .  .  }\n   737  .  .  .  .  .  .  }\n   738  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   739  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:40:14\n   740  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   741  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   742  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   743  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   744  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   745  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:3\n   746  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   747  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 655)\n   748  .  .  .  .  .  .  .  .  .  .  .  }\n   749  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   750  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:5\n   751  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   752  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   753  .  .  .  .  .  .  .  .  .  .  .  }\n   754  .  .  .  .  .  .  .  .  .  .  }\n   755  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:11\n   756  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   757  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   758  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:12\n   759  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   760  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return true\\\"\"\n   761  .  .  .  .  .  .  .  .  .  .  .  }\n   762  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   763  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:42\n   764  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   765  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 695)\n   766  .  .  .  .  .  .  .  .  .  .  .  }\n   767  .  .  .  .  .  .  .  .  .  .  }\n   768  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   769  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:41:50\n   770  .  .  .  .  .  .  .  .  .  }\n   771  .  .  .  .  .  .  .  .  }\n   772  .  .  .  .  .  .  .  }\n   773  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:42:2\n   774  .  .  .  .  .  .  }\n   775  .  .  .  .  .  .  Else: nil\n   776  .  .  .  .  .  }\n   777  .  .  .  .  }\n   778  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:43:1\n   779  .  .  .  }\n   780  .  .  }\n   781  .  .  6: *ast.FuncDecl {\n   782  .  .  .  Doc: nil\n   783  .  .  .  Recv: nil\n   784  .  .  .  Name: *ast.Ident {\n   785  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:6\n   786  .  .  .  .  Name: \"TestHasBalancedBrackets_NoBrackets\"\n   787  .  .  .  .  Obj: *ast.Object {\n   788  .  .  .  .  .  Kind: func\n   789  .  .  .  .  .  Name: \"TestHasBalancedBrackets_NoBrackets\"\n   790  .  .  .  .  .  Decl: *(obj @ 781)\n   791  .  .  .  .  .  Data: nil\n   792  .  .  .  .  .  Type: nil\n   793  .  .  .  .  }\n   794  .  .  .  }\n   795  .  .  .  Type: *ast.FuncType {\n   796  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:1\n   797  .  .  .  .  TypeParams: nil\n   798  .  .  .  .  Params: *ast.FieldList {\n   799  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:40\n   800  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   801  .  .  .  .  .  .  0: *ast.Field {\n   802  .  .  .  .  .  .  .  Doc: nil\n   803  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   804  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   805  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:41\n   806  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   807  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   808  .  .  .  .  .  .  .  .  .  .  Kind: var\n   809  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   810  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 801)\n   811  .  .  .  .  .  .  .  .  .  .  Data: nil\n   812  .  .  .  .  .  .  .  .  .  .  Type: nil\n   813  .  .  .  .  .  .  .  .  .  }\n   814  .  .  .  .  .  .  .  .  }\n   815  .  .  .  .  .  .  .  }\n   816  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   817  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:43\n   818  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   819  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   820  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:44\n   821  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   822  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   823  .  .  .  .  .  .  .  .  .  }\n   824  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   825  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:52\n   826  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   827  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   828  .  .  .  .  .  .  .  .  .  }\n   829  .  .  .  .  .  .  .  .  }\n   830  .  .  .  .  .  .  .  }\n   831  .  .  .  .  .  .  .  Tag: nil\n   832  .  .  .  .  .  .  .  Comment: nil\n   833  .  .  .  .  .  .  }\n   834  .  .  .  .  .  }\n   835  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:53\n   836  .  .  .  .  }\n   837  .  .  .  .  Results: nil\n   838  .  .  .  }\n   839  .  .  .  Body: *ast.BlockStmt {\n   840  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:45:55\n   841  .  .  .  .  List: []ast.Stmt (len = 2) {\n   842  .  .  .  .  .  0: *ast.AssignStmt {\n   843  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   844  .  .  .  .  .  .  .  0: *ast.Ident {\n   845  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:2\n   846  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   847  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   848  .  .  .  .  .  .  .  .  .  Kind: var\n   849  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   850  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 842)\n   851  .  .  .  .  .  .  .  .  .  Data: nil\n   852  .  .  .  .  .  .  .  .  .  Type: nil\n   853  .  .  .  .  .  .  .  .  }\n   854  .  .  .  .  .  .  .  }\n   855  .  .  .  .  .  .  }\n   856  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:11\n   857  .  .  .  .  .  .  Tok: :=\n   858  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   859  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   860  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   861  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:14\n   862  .  .  .  .  .  .  .  .  .  Name: \"hasBalancedBrackets\"\n   863  .  .  .  .  .  .  .  .  .  Obj: nil\n   864  .  .  .  .  .  .  .  .  }\n   865  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:33\n   866  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n   867  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   868  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:34\n   869  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   870  .  .  .  .  .  .  .  .  .  .  Value: \"`light light¨--`\"\n   871  .  .  .  .  .  .  .  .  .  }\n   872  .  .  .  .  .  .  .  .  }\n   873  .  .  .  .  .  .  .  .  Ellipsis: -\n   874  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:46:51\n   875  .  .  .  .  .  .  .  }\n   876  .  .  .  .  .  .  }\n   877  .  .  .  .  .  }\n   878  .  .  .  .  .  1: *ast.IfStmt {\n   879  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:47:2\n   880  .  .  .  .  .  .  Init: nil\n   881  .  .  .  .  .  .  Cond: *ast.Ident {\n   882  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:47:5\n   883  .  .  .  .  .  .  .  Name: \"brackets\"\n   884  .  .  .  .  .  .  .  Obj: *(obj @ 847)\n   885  .  .  .  .  .  .  }\n   886  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   887  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:47:14\n   888  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   889  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   890  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   891  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   892  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   893  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:3\n   894  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   895  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 807)\n   896  .  .  .  .  .  .  .  .  .  .  .  }\n   897  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   898  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:5\n   899  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   900  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   901  .  .  .  .  .  .  .  .  .  .  .  }\n   902  .  .  .  .  .  .  .  .  .  .  }\n   903  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:11\n   904  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   905  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   906  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:12\n   907  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   908  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Expected %v to return false\\\"\"\n   909  .  .  .  .  .  .  .  .  .  .  .  }\n   910  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   911  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:43\n   912  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"brackets\"\n   913  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 847)\n   914  .  .  .  .  .  .  .  .  .  .  .  }\n   915  .  .  .  .  .  .  .  .  .  .  }\n   916  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   917  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:48:51\n   918  .  .  .  .  .  .  .  .  .  }\n   919  .  .  .  .  .  .  .  .  }\n   920  .  .  .  .  .  .  .  }\n   921  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:49:2\n   922  .  .  .  .  .  .  }\n   923  .  .  .  .  .  .  Else: nil\n   924  .  .  .  .  .  }\n   925  .  .  .  .  }\n   926  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:50:1\n   927  .  .  .  }\n   928  .  .  }\n   929  .  .  7: *ast.FuncDecl {\n   930  .  .  .  Doc: nil\n   931  .  .  .  Recv: nil\n   932  .  .  .  Name: *ast.Ident {\n   933  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:6\n   934  .  .  .  .  Name: \"TestHasBalancedBrackets\"\n   935  .  .  .  .  Obj: *ast.Object {\n   936  .  .  .  .  .  Kind: func\n   937  .  .  .  .  .  Name: \"TestHasBalancedBrackets\"\n   938  .  .  .  .  .  Decl: *(obj @ 929)\n   939  .  .  .  .  .  Data: nil\n   940  .  .  .  .  .  Type: nil\n   941  .  .  .  .  }\n   942  .  .  .  }\n   943  .  .  .  Type: *ast.FuncType {\n   944  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:1\n   945  .  .  .  .  TypeParams: nil\n   946  .  .  .  .  Params: *ast.FieldList {\n   947  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:30\n   948  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   949  .  .  .  .  .  .  0: *ast.Field {\n   950  .  .  .  .  .  .  .  Doc: nil\n   951  .  .  .  .  .  .  .  Names: nil\n   952  .  .  .  .  .  .  .  Type: *ast.ParenExpr {\n   953  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:38\n   954  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   955  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:39\n   956  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   957  .  .  .  .  .  .  .  .  .  Obj: nil\n   958  .  .  .  .  .  .  .  .  }\n   959  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:41\n   960  .  .  .  .  .  .  .  }\n   961  .  .  .  .  .  .  .  Tag: nil\n   962  .  .  .  .  .  .  .  Comment: nil\n   963  .  .  .  .  .  .  }\n   964  .  .  .  .  .  }\n   965  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:52:51\n   966  .  .  .  .  }\n   967  .  .  .  .  Results: nil\n   968  .  .  .  }\n   969  .  .  .  Body: nil\n   970  .  .  }\n   971  .  .  8: *ast.GenDecl {\n   972  .  .  .  Doc: nil\n   973  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:2\n   974  .  .  .  Tok: type\n   975  .  .  .  Lparen: -\n   976  .  .  .  Specs: []ast.Spec (len = 1) {\n   977  .  .  .  .  0: *ast.TypeSpec {\n   978  .  .  .  .  .  Doc: nil\n   979  .  .  .  .  .  Name: *ast.Ident {\n   980  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:7\n   981  .  .  .  .  .  .  Name: \"testCase\"\n   982  .  .  .  .  .  .  Obj: *ast.Object {\n   983  .  .  .  .  .  .  .  Kind: type\n   984  .  .  .  .  .  .  .  Name: \"testCase\"\n   985  .  .  .  .  .  .  .  Decl: *(obj @ 977)\n   986  .  .  .  .  .  .  .  Data: nil\n   987  .  .  .  .  .  .  .  Type: nil\n   988  .  .  .  .  .  .  }\n   989  .  .  .  .  .  }\n   990  .  .  .  .  .  TypeParams: nil\n   991  .  .  .  .  .  Assign: -\n   992  .  .  .  .  .  Type: *ast.StructType {\n   993  .  .  .  .  .  .  Struct: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:16\n   994  .  .  .  .  .  .  Fields: *ast.FieldList {\n   995  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:53:23\n   996  .  .  .  .  .  .  .  List: []*ast.Field (len = 3) {\n   997  .  .  .  .  .  .  .  .  0: *ast.Field {\n   998  .  .  .  .  .  .  .  .  .  Doc: nil\n   999  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1000  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1001  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:54:3\n  1002  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  1003  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1004  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1005  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  1006  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 997)\n  1007  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1008  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1009  .  .  .  .  .  .  .  .  .  .  .  }\n  1010  .  .  .  .  .  .  .  .  .  .  }\n  1011  .  .  .  .  .  .  .  .  .  }\n  1012  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1013  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:54:12\n  1014  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1015  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1016  .  .  .  .  .  .  .  .  .  }\n  1017  .  .  .  .  .  .  .  .  .  Tag: nil\n  1018  .  .  .  .  .  .  .  .  .  Comment: nil\n  1019  .  .  .  .  .  .  .  .  }\n  1020  .  .  .  .  .  .  .  .  1: *ast.Field {\n  1021  .  .  .  .  .  .  .  .  .  Doc: nil\n  1022  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1023  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1024  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:55:3\n  1025  .  .  .  .  .  .  .  .  .  .  .  Name: \"input\"\n  1026  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1027  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1028  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"input\"\n  1029  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1020)\n  1030  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1031  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1032  .  .  .  .  .  .  .  .  .  .  .  }\n  1033  .  .  .  .  .  .  .  .  .  .  }\n  1034  .  .  .  .  .  .  .  .  .  }\n  1035  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1036  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:55:12\n  1037  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1038  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1039  .  .  .  .  .  .  .  .  .  }\n  1040  .  .  .  .  .  .  .  .  .  Tag: nil\n  1041  .  .  .  .  .  .  .  .  .  Comment: nil\n  1042  .  .  .  .  .  .  .  .  }\n  1043  .  .  .  .  .  .  .  .  2: *ast.Field {\n  1044  .  .  .  .  .  .  .  .  .  Doc: nil\n  1045  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1046  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1047  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:56:3\n  1048  .  .  .  .  .  .  .  .  .  .  .  Name: \"expected\"\n  1049  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1050  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1051  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"expected\"\n  1052  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1043)\n  1053  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1054  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1055  .  .  .  .  .  .  .  .  .  .  .  }\n  1056  .  .  .  .  .  .  .  .  .  .  }\n  1057  .  .  .  .  .  .  .  .  .  }\n  1058  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1059  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:56:12\n  1060  .  .  .  .  .  .  .  .  .  .  Name: \"bool\"\n  1061  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1062  .  .  .  .  .  .  .  .  .  }\n  1063  .  .  .  .  .  .  .  .  .  Tag: nil\n  1064  .  .  .  .  .  .  .  .  .  Comment: nil\n  1065  .  .  .  .  .  .  .  .  }\n  1066  .  .  .  .  .  .  .  }\n  1067  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:57:2\n  1068  .  .  .  .  .  .  }\n  1069  .  .  .  .  .  .  Incomplete: false\n  1070  .  .  .  .  .  }\n  1071  .  .  .  .  .  Comment: nil\n  1072  .  .  .  .  }\n  1073  .  .  .  }\n  1074  .  .  .  Rparen: -\n  1075  .  .  }\n  1076  .  .  9: *ast.BadDecl {\n  1077  .  .  .  From: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:59:2\n  1078  .  .  .  To: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:83:2\n  1079  .  .  }\n  1080  .  }\n  1081  .  FileStart: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:1:1\n  1082  .  FileEnd: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:83:2\n  1083  .  Scope: *ast.Scope {\n  1084  .  .  Outer: nil\n  1085  .  .  Objects: map[string]*ast.Object (len = 8) {\n  1086  .  .  .  \"TestHasBalancedBrackets_OneBracket\": *(obj @ 487)\n  1087  .  .  .  \"TestHasBalancedBrackets_EmptyString\": *(obj @ 635)\n  1088  .  .  .  \"TestHasBalancedBrackets_NoBrackets\": *(obj @ 787)\n  1089  .  .  .  \"TestHasBalancedBrackets\": *(obj @ 935)\n  1090  .  .  .  \"testCase\": *(obj @ 982)\n  1091  .  .  .  \"TestHasBalancedBrackets_HasPair\": *(obj @ 35)\n  1092  .  .  .  \"TestHasBalancedBrackets_NoPair\": *(obj @ 187)\n  1093  .  .  .  \"TestHasBalancedBracketsigure\": *(obj @ 335)\n  1094  .  .  }\n  1095  .  }\n  1096  .  Imports: []*ast.ImportSpec (len = 2) {\n  1097  .  .  0: *ast.ImportSpec {\n  1098  .  .  .  Doc: nil\n  1099  .  .  .  Name: nil\n  1100  .  .  .  Path: *ast.BasicLit {\n  1101  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:4:2\n  1102  .  .  .  .  Kind: STRING\n  1103  .  .  .  .  Value: \"\\\"bytes\\\"\"\n  1104  .  .  .  }\n  1105  .  .  .  Comment: nil\n  1106  .  .  .  EndPos: -\n  1107  .  .  }\n  1108  .  .  1: *(obj @ 15)\n  1109  .  }\n  1110  .  Unresolved: []*ast.Ident (len = 16) {\n  1111  .  .  0: *(obj @ 67)\n  1112  .  .  1: *(obj @ 108)\n  1113  .  .  2: *(obj @ 219)\n  1114  .  .  3: *(obj @ 260)\n  1115  .  .  4: *(obj @ 367)\n  1116  .  .  5: *(obj @ 408)\n  1117  .  .  6: *(obj @ 519)\n  1118  .  .  7: *(obj @ 560)\n  1119  .  .  8: *(obj @ 667)\n  1120  .  .  9: *(obj @ 708)\n  1121  .  .  10: *(obj @ 819)\n  1122  .  .  11: *(obj @ 860)\n  1123  .  .  12: *(obj @ 954)\n  1124  .  .  13: *(obj @ 1012)\n  1125  .  .  14: *(obj @ 1035)\n  1126  .  .  15: *(obj @ 1058)\n  1127  .  }\n  1128  .  Comments: []*ast.CommentGroup (len = 1) {\n  1129  .  .  0: *ast.CommentGroup {\n  1130  .  .  .  List: []*ast.Comment (len = 1) {\n  1131  .  .  .  .  0: *ast.Comment {\n  1132  .  .  .  .  .  Slash: /tmp/eval-dev-quality3504448851/light/balancedBrackets_test.go:69:59\n  1133  .  .  .  .  .  Text: \"// missing ]\"\n  1134  .  .  .  .  }\n  1135  .  .  .  }\n  1136  .  .  }\n  1137  .  }\n  1138  .  GoVersion: \"\"\n  1139  }\n"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc000a37740}, {0x1050cc0?, 0xc000ba9c30})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/ast.Source(0xc00062a040?, 0xab1d25?)
	gitlab.nethead.at/symflower/symflower/language/golang/ast/parse.go:612 +0x138
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0004e6000?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:48 +0x46c
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000668001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc000447bb8, {0xc000447b00?, 0x7f5c28265298?, 0xc000447bb8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc000447b00}, {0xc000192120?, 0x280f560?, 0xc0004d1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc000447b00?}, {0xc000192120?, 0x27d8cc0?, 0xc000447b00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:18
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:28
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:41
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695 exit status 1
# light [light.test]
./binarySearch_test.go:8:1: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:1: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:8:1: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:1: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors

DONE 0 tests, 11 errors in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./binarySearch_test.go:8:1: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:1: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:8:1: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:1: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors

DONE 0 tests, 11 errors in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
# light [light.test]
./binarySearch_test.go:8:2: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:2: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:8:2: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:2: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors

DONE 0 tests, 11 errors in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./binarySearch_test.go:8:2: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:2: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:8:2: eledSlice declared and not used
./binarySearch_test.go:9:2: undefined: contains
./binarySearch_test.go:9:11: undefined: anSlice
./binarySearch_test.go:10:5: undefined: index
./binarySearch_test.go:11:50: undefined: index
./binarySearch_test.go:16:2: non-name 5384 on left side of :=
./binarySearch_test.go:17:2: undefined: contains
./binarySearch_test.go:17:11: undefined: anSlice
./binarySearch_test.go:18:5: undefined: index
./binarySearch_test.go:19:51: undefined: index
./binarySearch_test.go:19:51: too many errors

DONE 0 tests, 11 errors in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

symflower fix exit status 1
# light [light.test]
./callLoopConditionsOftenEnough_test.go:26:6: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:26:6: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)

DONE 0 tests, 1 error in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./callLoopConditionsOftenEnough_test.go:26:6: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:26:6: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)

DONE 0 tests, 1 error in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
# light [light.test]
./callLoopConditionsOftenEnough_test.go:26:7: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:26:7: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)

DONE 0 tests, 1 error in 0.168s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./callLoopConditionsOftenEnough_test.go:26:7: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:26:7: invalid operation: operator ! not defined on callLoopConditionsOftenEnough(1, 1) (value of type int)

DONE 0 tests, 1 error in 0.168s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

symflower fix exit status 1
cascadingIfElse_test.go:1:1: expected 'package', found 'go'

=== Errors
cascadingIfElse_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.018s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
cascadingIfElse_test.go:1:1: expected 'package', found 'go'

=== Errors
cascadingIfElse_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.018s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

cascadingIfElse.go exit status 1
A fatal error happened. Please take a look at the logs, and report the problem on https://github.com/symflower/symflower/issues or send a mail to hello@symflower.com. Thanks so much for your help!
Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc000728030, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc000556a80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc000728030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc000728030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000724001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0004d80b8, {0xc0004d8000?, 0x7f0f04029b58?, 0xc0004d80b8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0004d8000}, {0xc0000401e0?, 0x42?, 0xc0004d7ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0004d8000?}, {0xc0000401e0?, 0x27d8cc0?, 0xc0004d8000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc000728030, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc000556a80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc000728030, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0006879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc000728030?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000724001?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc0004d80b8, {0xc0004d8000?, 0x7f0f04029b58?, 0xc0004d80b8?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc0004d8000}, {0xc0000401e0?, 0x42?, 0xc0004d7ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc0004d8000?}, {0xc0000401e0?, 0x27d8cc0?, 0xc0004d8000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:18
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:28
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:41
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695 exit status 1
=== RUN   TestComputeStepCount_EvenNumber
    collatzCalculator_test.go:13: computeStepCount(24) returned 10, expected 4
--- FAIL: TestComputeStepCount_EvenNumber (0.00s)
=== RUN   TestComputeStepCount_OddNumber
    collatzCalculator_test.go:23: computeStepCount(21) returned 7, expected 5
--- FAIL: TestComputeStepCount_OddNumber (0.00s)
=== RUN   TestComputeStepCount_pozitiveNumber_StartingFromOne
--- PASS: TestComputeStepCount_pozitiveNumber_StartingFromOne (0.00s)
=== RUN   TestComputeStepCount_zero
--- PASS: TestComputeStepCount_zero (0.00s)
=== RUN   TestComputeStepCount_negativeNumber
--- PASS: TestComputeStepCount_negativeNumber (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount_EvenNumber (0.00s)
    collatzCalculator_test.go:13: computeStepCount(24) returned 10, expected 4

=== FAIL: . TestComputeStepCount_OddNumber (0.00s)
    collatzCalculator_test.go:23: computeStepCount(21) returned 7, expected 5

DONE 5 tests, 2 failures in 0.262s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestComputeStepCount_EvenNumber
    collatzCalculator_test.go:13: computeStepCount(24) returned 10, expected 4
--- FAIL: TestComputeStepCount_EvenNumber (0.00s)
=== RUN   TestComputeStepCount_OddNumber
    collatzCalculator_test.go:23: computeStepCount(21) returned 7, expected 5
--- FAIL: TestComputeStepCount_OddNumber (0.00s)
=== RUN   TestComputeStepCount_pozitiveNumber_StartingFromOne
--- PASS: TestComputeStepCount_pozitiveNumber_StartingFromOne (0.00s)
=== RUN   TestComputeStepCount_zero
--- PASS: TestComputeStepCount_zero (0.00s)
=== RUN   TestComputeStepCount_negativeNumber
--- PASS: TestComputeStepCount_negativeNumber (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount_EvenNumber (0.00s)
    collatzCalculator_test.go:13: computeStepCount(24) returned 10, expected 4

=== FAIL: . TestComputeStepCount_OddNumber (0.00s)
    collatzCalculator_test.go:23: computeStepCount(21) returned 7, expected 5

DONE 5 tests, 2 failures in 0.262s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/empty_sequence
=== RUN   TestEquilibriumIndices/no_equilibrium_indices
=== RUN   TestEquilibriumIndices/equilibrium_indices
    equilibriumIndices_test.go:21: equilibriumIndices() = "", want "0;3;5"
--- FAIL: TestEquilibriumIndices (0.00s)
    --- PASS: TestEquilibriumIndices/empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/no_equilibrium_indices (0.00s)
    --- FAIL: TestEquilibriumIndices/equilibrium_indices (0.00s)
=== RUN   TestEquilibriumIndicesPtr
=== RUN   TestEquilibriumIndicesPtr/negative_numbers
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;3;5"
=== RUN   TestEquilibriumIndicesPtr/same_numbers
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;1;2;3"
=== RUN   TestEquilibriumIndicesPtr/single_element
    equilibriumIndices_test.go:41: equilibriumIndices() = "0;", want "0"
--- FAIL: TestEquilibriumIndicesPtr (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/negative_numbers (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/same_numbers (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/single_element (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices/equilibrium_indices (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = "", want "0;3;5"
    --- FAIL: TestEquilibriumIndices/equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/negative_numbers (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;3;5"
    --- FAIL: TestEquilibriumIndicesPtr/negative_numbers (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/same_numbers (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;1;2;3"
    --- FAIL: TestEquilibriumIndicesPtr/same_numbers (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/single_element (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "0;", want "0"
    --- FAIL: TestEquilibriumIndicesPtr/single_element (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr (0.00s)

DONE 8 tests, 6 failures in 0.244s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/empty_sequence
=== RUN   TestEquilibriumIndices/no_equilibrium_indices
=== RUN   TestEquilibriumIndices/equilibrium_indices
    equilibriumIndices_test.go:21: equilibriumIndices() = "", want "0;3;5"
--- FAIL: TestEquilibriumIndices (0.00s)
    --- PASS: TestEquilibriumIndices/empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/no_equilibrium_indices (0.00s)
    --- FAIL: TestEquilibriumIndices/equilibrium_indices (0.00s)
=== RUN   TestEquilibriumIndicesPtr
=== RUN   TestEquilibriumIndicesPtr/negative_numbers
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;3;5"
=== RUN   TestEquilibriumIndicesPtr/same_numbers
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;1;2;3"
=== RUN   TestEquilibriumIndicesPtr/single_element
    equilibriumIndices_test.go:41: equilibriumIndices() = "0;", want "0"
--- FAIL: TestEquilibriumIndicesPtr (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/negative_numbers (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/same_numbers (0.00s)
    --- FAIL: TestEquilibriumIndicesPtr/single_element (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices/equilibrium_indices (0.00s)
    equilibriumIndices_test.go:21: equilibriumIndices() = "", want "0;3;5"
    --- FAIL: TestEquilibriumIndices/equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/negative_numbers (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;3;5"
    --- FAIL: TestEquilibriumIndicesPtr/negative_numbers (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/same_numbers (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "", want "0;1;2;3"
    --- FAIL: TestEquilibriumIndicesPtr/same_numbers (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr/single_element (0.00s)
    equilibriumIndices_test.go:41: equilibriumIndices() = "0;", want "0"
    --- FAIL: TestEquilibriumIndicesPtr/single_element (0.00s)

=== FAIL: . TestEquilibriumIndicesPtr (0.00s)

DONE 8 tests, 6 failures in 0.244s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light
forLoop_test.go:10:2: expected '}', found '.'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
forLoop_test.go:10:2: expected '}', found '.'

DONE 0 tests, 1 error in 0.027s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light
forLoop_test.go:10:2: expected '}', found '.'
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
forLoop_test.go:10:2: expected '}', found '.'

DONE 0 tests, 1 error in 0.027s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

forLoop.go exit status 1
# light [light.test]
./forLoop_test.go:8:11: []struct{n int} (type) is not an expression
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:8:11: []struct{n int} (type) is not an expression

DONE 0 tests, 1 error in 0.111s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./forLoop_test.go:8:11: []struct{n int} (type) is not an expression
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:8:11: []struct{n int} (type) is not an expression

DONE 0 tests, 1 error in 0.111s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

symflower fix exit status 1
WARN # light
jacobiSymbol_test.go:86:16: unknown escape sequence
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:86:16: unknown escape sequence

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
WARN # light
jacobiSymbol_test.go:86:16: unknown escape sequence
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:86:16: unknown escape sequence

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: Internal error: format.Node internal error (88:16: unknown escape sequence (and 3 more errors)):
"     0  *ast.File {\n     1  .  Doc: nil\n     2  .  Package: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:1:1\n     3  .  Name: *ast.Ident {\n     4  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:1:9\n     5  .  .  Name: \"light\"\n     6  .  .  Obj: nil\n     7  .  }\n     8  .  Decls: []ast.Decl (len = 10) {\n     9  .  .  0: *ast.GenDecl {\n    10  .  .  .  Doc: nil\n    11  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:3:1\n    12  .  .  .  Tok: import\n    13  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:3:8\n    14  .  .  .  Specs: []ast.Spec (len = 6) {\n    15  .  .  .  .  0: *ast.ImportSpec {\n    16  .  .  .  .  .  Doc: nil\n    17  .  .  .  .  .  Name: nil\n    18  .  .  .  .  .  Path: *ast.BasicLit {\n    19  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:4:2\n    20  .  .  .  .  .  .  Kind: STRING\n    21  .  .  .  .  .  .  Value: \"\\\"errors\\\"\"\n    22  .  .  .  .  .  }\n    23  .  .  .  .  .  Comment: nil\n    24  .  .  .  .  .  EndPos: -\n    25  .  .  .  .  }\n    26  .  .  .  .  1: *ast.ImportSpec {\n    27  .  .  .  .  .  Doc: nil\n    28  .  .  .  .  .  Name: nil\n    29  .  .  .  .  .  Path: *ast.BasicLit {\n    30  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:5:2\n    31  .  .  .  .  .  .  Kind: STRING\n    32  .  .  .  .  .  .  Value: \"\\\"io/ioutil\\\"\"\n    33  .  .  .  .  .  }\n    34  .  .  .  .  .  Comment: nil\n    35  .  .  .  .  .  EndPos: -\n    36  .  .  .  .  }\n    37  .  .  .  .  2: *ast.ImportSpec {\n    38  .  .  .  .  .  Doc: nil\n    39  .  .  .  .  .  Name: nil\n    40  .  .  .  .  .  Path: *ast.BasicLit {\n    41  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:6:2\n    42  .  .  .  .  .  .  Kind: STRING\n    43  .  .  .  .  .  .  Value: \"\\\"os\\\"\"\n    44  .  .  .  .  .  }\n    45  .  .  .  .  .  Comment: nil\n    46  .  .  .  .  .  EndPos: -\n    47  .  .  .  .  }\n    48  .  .  .  .  3: *ast.ImportSpec {\n    49  .  .  .  .  .  Doc: nil\n    50  .  .  .  .  .  Name: nil\n    51  .  .  .  .  .  Path: *ast.BasicLit {\n    52  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:7:2\n    53  .  .  .  .  .  .  Kind: STRING\n    54  .  .  .  .  .  .  Value: \"\\\"testing\\\"\"\n    55  .  .  .  .  .  }\n    56  .  .  .  .  .  Comment: nil\n    57  .  .  .  .  .  EndPos: -\n    58  .  .  .  .  }\n    59  .  .  .  .  4: *ast.ImportSpec {\n    60  .  .  .  .  .  Doc: nil\n    61  .  .  .  .  .  Name: nil\n    62  .  .  .  .  .  Path: *ast.BasicLit {\n    63  .  .  .  .  .  .  ValuePos: -\n    64  .  .  .  .  .  .  Kind: ILLEGAL\n    65  .  .  .  .  .  .  Value: \"\\\"fmt\\\"\"\n    66  .  .  .  .  .  }\n    67  .  .  .  .  .  Comment: nil\n    68  .  .  .  .  .  EndPos: -\n    69  .  .  .  .  }\n    70  .  .  .  .  5: *ast.ImportSpec {\n    71  .  .  .  .  .  Doc: nil\n    72  .  .  .  .  .  Name: nil\n    73  .  .  .  .  .  Path: *ast.BasicLit {\n    74  .  .  .  .  .  .  ValuePos: -\n    75  .  .  .  .  .  .  Kind: ILLEGAL\n    76  .  .  .  .  .  .  Value: \"\\\"fmt\\\"\"\n    77  .  .  .  .  .  }\n    78  .  .  .  .  .  Comment: nil\n    79  .  .  .  .  .  EndPos: -\n    80  .  .  .  .  }\n    81  .  .  .  }\n    82  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:8:1\n    83  .  .  }\n    84  .  .  1: *ast.FuncDecl {\n    85  .  .  .  Doc: nil\n    86  .  .  .  Recv: nil\n    87  .  .  .  Name: *ast.Ident {\n    88  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:6\n    89  .  .  .  .  Name: \"TestJacobiSymbolHappyPath\"\n    90  .  .  .  .  Obj: *ast.Object {\n    91  .  .  .  .  .  Kind: func\n    92  .  .  .  .  .  Name: \"TestJacobiSymbolHappyPath\"\n    93  .  .  .  .  .  Decl: *(obj @ 84)\n    94  .  .  .  .  .  Data: nil\n    95  .  .  .  .  .  Type: nil\n    96  .  .  .  .  }\n    97  .  .  .  }\n    98  .  .  .  Type: *ast.FuncType {\n    99  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:1\n   100  .  .  .  .  TypeParams: nil\n   101  .  .  .  .  Params: *ast.FieldList {\n   102  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:31\n   103  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   104  .  .  .  .  .  .  0: *ast.Field {\n   105  .  .  .  .  .  .  .  Doc: nil\n   106  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   107  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   108  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:32\n   109  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   110  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   111  .  .  .  .  .  .  .  .  .  .  Kind: var\n   112  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   113  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 104)\n   114  .  .  .  .  .  .  .  .  .  .  Data: nil\n   115  .  .  .  .  .  .  .  .  .  .  Type: nil\n   116  .  .  .  .  .  .  .  .  .  }\n   117  .  .  .  .  .  .  .  .  }\n   118  .  .  .  .  .  .  .  }\n   119  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   120  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:34\n   121  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   122  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   123  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:35\n   124  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   125  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   126  .  .  .  .  .  .  .  .  .  }\n   127  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   128  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:43\n   129  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   130  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   131  .  .  .  .  .  .  .  .  .  }\n   132  .  .  .  .  .  .  .  .  }\n   133  .  .  .  .  .  .  .  }\n   134  .  .  .  .  .  .  .  Tag: nil\n   135  .  .  .  .  .  .  .  Comment: nil\n   136  .  .  .  .  .  .  }\n   137  .  .  .  .  .  }\n   138  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:44\n   139  .  .  .  .  }\n   140  .  .  .  .  Results: nil\n   141  .  .  .  }\n   142  .  .  .  Body: *ast.BlockStmt {\n   143  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:10:46\n   144  .  .  .  .  List: []ast.Stmt (len = 2) {\n   145  .  .  .  .  .  0: *ast.AssignStmt {\n   146  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   147  .  .  .  .  .  .  .  0: *ast.Ident {\n   148  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:2\n   149  .  .  .  .  .  .  .  .  Name: \"tests\"\n   150  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   151  .  .  .  .  .  .  .  .  .  Kind: var\n   152  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n   153  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 145)\n   154  .  .  .  .  .  .  .  .  .  Data: nil\n   155  .  .  .  .  .  .  .  .  .  Type: nil\n   156  .  .  .  .  .  .  .  .  }\n   157  .  .  .  .  .  .  .  }\n   158  .  .  .  .  .  .  }\n   159  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:8\n   160  .  .  .  .  .  .  Tok: :=\n   161  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   162  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n   163  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {\n   164  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:11\n   165  .  .  .  .  .  .  .  .  .  Len: nil\n   166  .  .  .  .  .  .  .  .  .  Elt: *ast.StructType {\n   167  .  .  .  .  .  .  .  .  .  .  Struct: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:13\n   168  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {\n   169  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:11:20\n   170  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 4) {\n   171  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n   172  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   173  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:12:3\n   176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 171)\n   181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   185  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   186  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:12:8\n   188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n   189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   190  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   191  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   192  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   193  .  .  .  .  .  .  .  .  .  .  .  .  }\n   194  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {\n   195  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   196  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:13:3\n   199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 194)\n   204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   208  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   209  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   210  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:13:8\n   211  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n   212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   213  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   214  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   215  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   216  .  .  .  .  .  .  .  .  .  .  .  .  }\n   217  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Field {\n   218  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   219  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   220  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   221  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:14:3\n   222  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   223  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   224  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   225  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   226  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 217)\n   227  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   228  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   229  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   231  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   232  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   233  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:14:8\n   234  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n   235  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   236  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   237  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   238  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   239  .  .  .  .  .  .  .  .  .  .  .  .  }\n   240  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Field {\n   241  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   242  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   243  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   244  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:15:3\n   245  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 240)\n   250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   254  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   255  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n   256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:15:8\n   257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"int\"\n   258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   259  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   260  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   261  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   262  .  .  .  .  .  .  .  .  .  .  .  .  }\n   263  .  .  .  .  .  .  .  .  .  .  .  }\n   264  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:16:2\n   265  .  .  .  .  .  .  .  .  .  .  }\n   266  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   267  .  .  .  .  .  .  .  .  .  }\n   268  .  .  .  .  .  .  .  .  }\n   269  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:16:3\n   270  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 7) {\n   271  .  .  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n   272  .  .  .  .  .  .  .  .  .  .  Type: nil\n   273  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:3\n   274  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   275  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   276  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:4\n   277  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   278  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Odd and odd\\\"\"\n   279  .  .  .  .  .  .  .  .  .  .  .  }\n   280  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   281  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:19\n   282  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   283  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"5\"\n   284  .  .  .  .  .  .  .  .  .  .  .  }\n   285  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   286  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:22\n   287  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   288  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n   289  .  .  .  .  .  .  .  .  .  .  .  }\n   290  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   291  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:25\n   292  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   293  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   294  .  .  .  .  .  .  .  .  .  .  .  }\n   295  .  .  .  .  .  .  .  .  .  .  }\n   296  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:17:26\n   297  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   298  .  .  .  .  .  .  .  .  .  }\n   299  .  .  .  .  .  .  .  .  .  1: *ast.CompositeLit {\n   300  .  .  .  .  .  .  .  .  .  .  Type: nil\n   301  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:3\n   302  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   303  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   304  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:4\n   305  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   306  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Even and odd\\\"\"\n   307  .  .  .  .  .  .  .  .  .  .  .  }\n   308  .  .  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {\n   309  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:20\n   310  .  .  .  .  .  .  .  .  .  .  .  .  Op: -\n   311  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n   312  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:21\n   313  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   314  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"2\"\n   315  .  .  .  .  .  .  .  .  .  .  .  .  }\n   316  .  .  .  .  .  .  .  .  .  .  .  }\n   317  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   318  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:24\n   319  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   320  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n   321  .  .  .  .  .  .  .  .  .  .  .  }\n   322  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   323  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:27\n   324  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   325  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n   326  .  .  .  .  .  .  .  .  .  .  .  }\n   327  .  .  .  .  .  .  .  .  .  .  }\n   328  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:18:28\n   329  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   330  .  .  .  .  .  .  .  .  .  }\n   331  .  .  .  .  .  .  .  .  .  2: *ast.CompositeLit {\n   332  .  .  .  .  .  .  .  .  .  .  Type: nil\n   333  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:3\n   334  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   335  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   336  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:4\n   337  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   338  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Odd and even\\\"\"\n   339  .  .  .  .  .  .  .  .  .  .  .  }\n   340  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   341  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:20\n   342  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   343  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"3\"\n   344  .  .  .  .  .  .  .  .  .  .  .  }\n   345  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   346  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:23\n   347  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   348  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n   349  .  .  .  .  .  .  .  .  .  .  .  }\n   350  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   351  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:26\n   352  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   353  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n   354  .  .  .  .  .  .  .  .  .  .  .  }\n   355  .  .  .  .  .  .  .  .  .  .  }\n   356  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:19:27\n   357  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   358  .  .  .  .  .  .  .  .  .  }\n   359  .  .  .  .  .  .  .  .  .  3: *ast.CompositeLit {\n   360  .  .  .  .  .  .  .  .  .  .  Type: nil\n   361  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:3\n   362  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   363  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   364  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:4\n   365  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   366  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Negative odd and odd\\\"\"\n   367  .  .  .  .  .  .  .  .  .  .  .  }\n   368  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   369  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:28\n   370  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   371  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"13\"\n   372  .  .  .  .  .  .  .  .  .  .  .  }\n   373  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   374  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:32\n   375  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   376  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"19\"\n   377  .  .  .  .  .  .  .  .  .  .  .  }\n   378  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   379  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:36\n   380  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   381  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   382  .  .  .  .  .  .  .  .  .  .  .  }\n   383  .  .  .  .  .  .  .  .  .  .  }\n   384  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:20:37\n   385  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   386  .  .  .  .  .  .  .  .  .  }\n   387  .  .  .  .  .  .  .  .  .  4: *ast.CompositeLit {\n   388  .  .  .  .  .  .  .  .  .  .  Type: nil\n   389  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:3\n   390  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   391  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   392  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:4\n   393  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   394  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Small numbers\\\"\"\n   395  .  .  .  .  .  .  .  .  .  .  .  }\n   396  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   397  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:21\n   398  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   399  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"2\"\n   400  .  .  .  .  .  .  .  .  .  .  .  }\n   401  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   402  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:24\n   403  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   404  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"5\"\n   405  .  .  .  .  .  .  .  .  .  .  .  }\n   406  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   407  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:27\n   408  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   409  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   410  .  .  .  .  .  .  .  .  .  .  .  }\n   411  .  .  .  .  .  .  .  .  .  .  }\n   412  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:21:28\n   413  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   414  .  .  .  .  .  .  .  .  .  }\n   415  .  .  .  .  .  .  .  .  .  5: *ast.CompositeLit {\n   416  .  .  .  .  .  .  .  .  .  .  Type: nil\n   417  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:3\n   418  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   419  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   420  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:4\n   421  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   422  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Identity case\\\"\"\n   423  .  .  .  .  .  .  .  .  .  .  .  }\n   424  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   425  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:21\n   426  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   427  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n   428  .  .  .  .  .  .  .  .  .  .  .  }\n   429  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   430  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:24\n   431  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   432  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"11\"\n   433  .  .  .  .  .  .  .  .  .  .  .  }\n   434  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   435  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:28\n   436  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   437  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   438  .  .  .  .  .  .  .  .  .  .  .  }\n   439  .  .  .  .  .  .  .  .  .  .  }\n   440  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:22:29\n   441  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   442  .  .  .  .  .  .  .  .  .  }\n   443  .  .  .  .  .  .  .  .  .  6: *ast.CompositeLit {\n   444  .  .  .  .  .  .  .  .  .  .  Type: nil\n   445  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:3\n   446  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n   447  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   448  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:4\n   449  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   450  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Boundary cases\\\"\"\n   451  .  .  .  .  .  .  .  .  .  .  .  }\n   452  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n   453  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:22\n   454  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   455  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n   456  .  .  .  .  .  .  .  .  .  .  .  }\n   457  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n   458  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:25\n   459  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   460  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n   461  .  .  .  .  .  .  .  .  .  .  .  }\n   462  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {\n   463  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:28\n   464  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n   465  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n   466  .  .  .  .  .  .  .  .  .  .  .  }\n   467  .  .  .  .  .  .  .  .  .  .  }\n   468  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:23:29\n   469  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n   470  .  .  .  .  .  .  .  .  .  }\n   471  .  .  .  .  .  .  .  .  }\n   472  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:24:2\n   473  .  .  .  .  .  .  .  .  Incomplete: false\n   474  .  .  .  .  .  .  .  }\n   475  .  .  .  .  .  .  }\n   476  .  .  .  .  .  }\n   477  .  .  .  .  .  1: *ast.RangeStmt {\n   478  .  .  .  .  .  .  For: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:2\n   479  .  .  .  .  .  .  Key: *ast.Ident {\n   480  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:6\n   481  .  .  .  .  .  .  .  Name: \"_\"\n   482  .  .  .  .  .  .  .  Obj: *ast.Object {\n   483  .  .  .  .  .  .  .  .  Kind: var\n   484  .  .  .  .  .  .  .  .  Name: \"_\"\n   485  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {\n   486  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n   487  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 479)\n   488  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   489  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:9\n   490  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   491  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   492  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   493  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   494  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 485)\n   495  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   496  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   497  .  .  .  .  .  .  .  .  .  .  .  }\n   498  .  .  .  .  .  .  .  .  .  .  }\n   499  .  .  .  .  .  .  .  .  .  }\n   500  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:12\n   501  .  .  .  .  .  .  .  .  .  Tok: :=\n   502  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   503  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {\n   504  .  .  .  .  .  .  .  .  .  .  .  OpPos: -\n   505  .  .  .  .  .  .  .  .  .  .  .  Op: range\n   506  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   507  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:21\n   508  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n   509  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 150)\n   510  .  .  .  .  .  .  .  .  .  .  .  }\n   511  .  .  .  .  .  .  .  .  .  .  }\n   512  .  .  .  .  .  .  .  .  .  }\n   513  .  .  .  .  .  .  .  .  }\n   514  .  .  .  .  .  .  .  .  Data: nil\n   515  .  .  .  .  .  .  .  .  Type: nil\n   516  .  .  .  .  .  .  .  }\n   517  .  .  .  .  .  .  }\n   518  .  .  .  .  .  .  Value: *(obj @ 488)\n   519  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:12\n   520  .  .  .  .  .  .  Tok: :=\n   521  .  .  .  .  .  .  Range: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:15\n   522  .  .  .  .  .  .  X: *(obj @ 506)\n   523  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   524  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:26:27\n   525  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   526  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   527  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   528  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   529  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   530  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:3\n   531  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   532  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 110)\n   533  .  .  .  .  .  .  .  .  .  .  .  }\n   534  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   535  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:5\n   536  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Run\"\n   537  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   538  .  .  .  .  .  .  .  .  .  .  .  }\n   539  .  .  .  .  .  .  .  .  .  .  }\n   540  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:8\n   541  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   542  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n   543  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   544  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:9\n   545  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   546  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   547  .  .  .  .  .  .  .  .  .  .  .  .  }\n   548  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   549  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:12\n   550  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   551  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   552  .  .  .  .  .  .  .  .  .  .  .  .  }\n   553  .  .  .  .  .  .  .  .  .  .  .  }\n   554  .  .  .  .  .  .  .  .  .  .  .  1: *ast.FuncLit {\n   555  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n   556  .  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:18\n   557  .  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n   558  .  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n   559  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:22\n   560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n   562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:23\n   566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   568  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   569  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   570  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 561)\n   571  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   572  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   573  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   574  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   575  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   576  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   577  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:25\n   578  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   579  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   580  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:26\n   581  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   582  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   583  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   584  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:34\n   586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   588  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   589  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n   592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n   593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:35\n   596  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   597  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil\n   598  .  .  .  .  .  .  .  .  .  .  .  .  }\n   599  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   600  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:27:37\n   601  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {\n   602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n   603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n   604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:4\n   606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 602)\n   611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n   616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:9\n   617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 602)\n   622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:13\n   628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n   629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   630  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n   631  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n   632  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:16\n   633  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"jacobiSymbol\"\n   634  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   635  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   636  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:28\n   637  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n   638  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n   639  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   640  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:29\n   641  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   642  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   643  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   644  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   645  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:32\n   646  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   647  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   648  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   649  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   650  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n   651  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   652  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:35\n   653  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   657  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:38\n   658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:28:39\n   665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n   669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:4\n   670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n   671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n   672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:7\n   674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 618)\n   676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:10\n   678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=\n   679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n   680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:13\n   681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n   682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:29:17\n   687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {\n   688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IfStmt {\n   689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:5\n   690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n   691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.CallExpr {\n   692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:8\n   695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:11\n   700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"wantError\"\n   701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:20\n   705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n   706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:21\n   708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:30:23\n   711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n   713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:31:6\n   714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil\n   715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:32:5\n   718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n   720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ExprStmt {\n   722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:5\n   726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 567)\n   728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:7\n   731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:13\n   736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 4) {\n   737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:14\n   739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" jacobiSymbol(%d, %d) error = %v, want err nil\\\"\"\n   741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n   743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:64\n   745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:67\n   750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n   755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:70\n   757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:73\n   762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n   767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:76\n   768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n   769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 618)\n   770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:33:79\n   774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:34:4\n   778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n   780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {\n   782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:4\n   783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n   784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n   785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:7\n   787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 607)\n   789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:10\n   791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=\n   792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {\n   793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:13\n   795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   799  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:16\n   800  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n   806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:35:21\n   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n   811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:5\n   813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 567)\n   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:7\n   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:13\n   823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 5) {\n   824  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n   825  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:14\n   826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n   827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"jacobiSymbol(%d, %d) = %v, want %v\\\"\"\n   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n   830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:52\n   832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:55\n   837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n   838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n   842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:58\n   844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   846  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:61\n   849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n   850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n   854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:64\n   855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n   856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 607)\n   857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.SelectorExpr {\n   859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:69\n   861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n   862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 491)\n   863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:72\n   866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n   867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   871  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   872  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:36:76\n   873  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   874  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   875  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:37:4\n   877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   878  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n   879  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   880  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   881  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:38:3\n   882  .  .  .  .  .  .  .  .  .  .  .  .  }\n   883  .  .  .  .  .  .  .  .  .  .  .  }\n   884  .  .  .  .  .  .  .  .  .  .  }\n   885  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n   886  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:38:4\n   887  .  .  .  .  .  .  .  .  .  }\n   888  .  .  .  .  .  .  .  .  }\n   889  .  .  .  .  .  .  .  }\n   890  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:39:2\n   891  .  .  .  .  .  .  }\n   892  .  .  .  .  .  }\n   893  .  .  .  .  }\n   894  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:40:1\n   895  .  .  .  }\n   896  .  .  }\n   897  .  .  2: *ast.FuncDecl {\n   898  .  .  .  Doc: nil\n   899  .  .  .  Recv: nil\n   900  .  .  .  Name: *ast.Ident {\n   901  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:6\n   902  .  .  .  .  Name: \"TestJacobiSymbolFailingPath\"\n   903  .  .  .  .  Obj: *ast.Object {\n   904  .  .  .  .  .  Kind: func\n   905  .  .  .  .  .  Name: \"TestJacobiSymbolFailingPath\"\n   906  .  .  .  .  .  Decl: *(obj @ 897)\n   907  .  .  .  .  .  Data: nil\n   908  .  .  .  .  .  Type: nil\n   909  .  .  .  .  }\n   910  .  .  .  }\n   911  .  .  .  Type: *ast.FuncType {\n   912  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:1\n   913  .  .  .  .  TypeParams: nil\n   914  .  .  .  .  Params: *ast.FieldList {\n   915  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:33\n   916  .  .  .  .  .  List: []*ast.Field (len = 1) {\n   917  .  .  .  .  .  .  0: *ast.Field {\n   918  .  .  .  .  .  .  .  Doc: nil\n   919  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   920  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   921  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:34\n   922  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   923  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   924  .  .  .  .  .  .  .  .  .  .  Kind: var\n   925  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n   926  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 917)\n   927  .  .  .  .  .  .  .  .  .  .  Data: nil\n   928  .  .  .  .  .  .  .  .  .  .  Type: nil\n   929  .  .  .  .  .  .  .  .  .  }\n   930  .  .  .  .  .  .  .  .  }\n   931  .  .  .  .  .  .  .  }\n   932  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n   933  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:36\n   934  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n   935  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n   936  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:37\n   937  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n   938  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   939  .  .  .  .  .  .  .  .  .  }\n   940  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n   941  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:45\n   942  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n   943  .  .  .  .  .  .  .  .  .  .  Obj: nil\n   944  .  .  .  .  .  .  .  .  .  }\n   945  .  .  .  .  .  .  .  .  }\n   946  .  .  .  .  .  .  .  }\n   947  .  .  .  .  .  .  .  Tag: nil\n   948  .  .  .  .  .  .  .  Comment: nil\n   949  .  .  .  .  .  .  }\n   950  .  .  .  .  .  }\n   951  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:46\n   952  .  .  .  .  }\n   953  .  .  .  .  Results: nil\n   954  .  .  .  }\n   955  .  .  .  Body: *ast.BlockStmt {\n   956  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:42:48\n   957  .  .  .  .  List: []ast.Stmt (len = 2) {\n   958  .  .  .  .  .  0: *ast.AssignStmt {\n   959  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n   960  .  .  .  .  .  .  .  0: *ast.Ident {\n   961  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:2\n   962  .  .  .  .  .  .  .  .  Name: \"tests\"\n   963  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   964  .  .  .  .  .  .  .  .  .  Kind: var\n   965  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n   966  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 958)\n   967  .  .  .  .  .  .  .  .  .  Data: nil\n   968  .  .  .  .  .  .  .  .  .  Type: nil\n   969  .  .  .  .  .  .  .  .  }\n   970  .  .  .  .  .  .  .  }\n   971  .  .  .  .  .  .  }\n   972  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:8\n   973  .  .  .  .  .  .  Tok: :=\n   974  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n   975  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n   976  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {\n   977  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:11\n   978  .  .  .  .  .  .  .  .  .  Len: nil\n   979  .  .  .  .  .  .  .  .  .  Elt: *ast.StructType {\n   980  .  .  .  .  .  .  .  .  .  .  Struct: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:13\n   981  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {\n   982  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:43:20\n   983  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 4) {\n   984  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n   985  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n   986  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n   987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n   988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:44:3\n   989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n   991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n   992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n   993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 984)\n   994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n   995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n   996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   998  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n   999  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:44:8\n  1001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1003  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1004  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1005  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1006  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1007  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {\n  1008  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1009  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:45:3\n  1012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1007)\n  1017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1021  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1022  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:45:8\n  1024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n  1025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1026  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1027  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1028  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1029  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1030  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.Field {\n  1031  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1032  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:46:3\n  1035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1030)\n  1040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1044  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1045  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:46:8\n  1047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"uint64\"\n  1048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1049  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1050  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1051  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1052  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1053  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Field {\n  1054  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1055  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:47:3\n  1058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1053)\n  1063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1064  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1065  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1067  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1068  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:47:8\n  1070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"error\"\n  1071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1072  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1073  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1074  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1075  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1076  .  .  .  .  .  .  .  .  .  .  .  }\n  1077  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:48:2\n  1078  .  .  .  .  .  .  .  .  .  .  }\n  1079  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1080  .  .  .  .  .  .  .  .  .  }\n  1081  .  .  .  .  .  .  .  .  }\n  1082  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:48:3\n  1083  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 8) {\n  1084  .  .  .  .  .  .  .  .  .  0: *ast.CompositeLit {\n  1085  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1086  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:3\n  1087  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1088  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1089  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:4\n  1090  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1091  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"odd and odd, but jacobi conjugate\\\"\"\n  1092  .  .  .  .  .  .  .  .  .  .  .  }\n  1093  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1094  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:41\n  1095  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1096  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"5\"\n  1097  .  .  .  .  .  .  .  .  .  .  .  }\n  1098  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1099  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:44\n  1100  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1101  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n  1102  .  .  .  .  .  .  .  .  .  .  .  }\n  1103  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1104  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:47\n  1105  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1106  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1107  .  .  .  .  .  .  .  .  .  .  .  }\n  1108  .  .  .  .  .  .  .  .  .  .  }\n  1109  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:49:50\n  1110  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1111  .  .  .  .  .  .  .  .  .  }\n  1112  .  .  .  .  .  .  .  .  .  1: *ast.CompositeLit {\n  1113  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1114  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:3\n  1115  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1116  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1117  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:4\n  1118  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1119  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"even and even\\\"\"\n  1120  .  .  .  .  .  .  .  .  .  .  .  }\n  1121  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1122  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:21\n  1123  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1124  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n  1125  .  .  .  .  .  .  .  .  .  .  .  }\n  1126  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1127  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:24\n  1128  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1129  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n  1130  .  .  .  .  .  .  .  .  .  .  .  }\n  1131  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1132  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:27\n  1133  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1134  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1135  .  .  .  .  .  .  .  .  .  .  .  }\n  1136  .  .  .  .  .  .  .  .  .  .  }\n  1137  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:50:30\n  1138  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1139  .  .  .  .  .  .  .  .  .  }\n  1140  .  .  .  .  .  .  .  .  .  2: *ast.CompositeLit {\n  1141  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1142  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:3\n  1143  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1144  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1145  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:4\n  1146  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1147  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"odd and even, but jacobi not defined\\\"\"\n  1148  .  .  .  .  .  .  .  .  .  .  .  }\n  1149  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1150  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:44\n  1151  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1152  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"3\"\n  1153  .  .  .  .  .  .  .  .  .  .  .  }\n  1154  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1155  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:47\n  1156  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1157  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6\"\n  1158  .  .  .  .  .  .  .  .  .  .  .  }\n  1159  .  .  .  .  .  .  .  .  .  .  .  3: *ast.CallExpr {\n  1160  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1161  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:50\n  1163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"fmt\"\n  1164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1165  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1166  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:54\n  1168  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1169  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1170  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1171  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1172  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:60\n  1173  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  1174  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:61\n  1176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Invalid value. k = 3, n = 6\\\"\"\n  1178  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1179  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1180  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1181  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:90\n  1182  .  .  .  .  .  .  .  .  .  .  .  }\n  1183  .  .  .  .  .  .  .  .  .  .  }\n  1184  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:51:91\n  1185  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1186  .  .  .  .  .  .  .  .  .  }\n  1187  .  .  .  .  .  .  .  .  .  3: *ast.CompositeLit {\n  1188  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1189  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:3\n  1190  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1191  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1192  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:4\n  1193  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1194  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"large even and even\\\"\"\n  1195  .  .  .  .  .  .  .  .  .  .  .  }\n  1196  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1197  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:27\n  1198  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1199  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"6000000\"\n  1200  .  .  .  .  .  .  .  .  .  .  .  }\n  1201  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1202  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:36\n  1203  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1204  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n  1205  .  .  .  .  .  .  .  .  .  .  .  }\n  1206  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1207  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:39\n  1208  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1209  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1210  .  .  .  .  .  .  .  .  .  .  .  }\n  1211  .  .  .  .  .  .  .  .  .  .  }\n  1212  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:52:42\n  1213  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1214  .  .  .  .  .  .  .  .  .  }\n  1215  .  .  .  .  .  .  .  .  .  4: *ast.CompositeLit {\n  1216  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1217  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:3\n  1218  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1219  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1220  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:4\n  1221  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1222  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"large odd and odd\\\"\"\n  1223  .  .  .  .  .  .  .  .  .  .  .  }\n  1224  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1225  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:25\n  1226  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1227  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"76030000\"\n  1228  .  .  .  .  .  .  .  .  .  .  .  }\n  1229  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1230  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:35\n  1231  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1232  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n  1233  .  .  .  .  .  .  .  .  .  .  .  }\n  1234  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1235  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:38\n  1236  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1237  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1238  .  .  .  .  .  .  .  .  .  .  .  }\n  1239  .  .  .  .  .  .  .  .  .  .  }\n  1240  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:53:41\n  1241  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1242  .  .  .  .  .  .  .  .  .  }\n  1243  .  .  .  .  .  .  .  .  .  5: *ast.CompositeLit {\n  1244  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1245  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:3\n  1246  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1247  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1248  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:4\n  1249  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1250  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"negative odd and odd, jacobi conjugate\\\"\"\n  1251  .  .  .  .  .  .  .  .  .  .  .  }\n  1252  .  .  .  .  .  .  .  .  .  .  .  1: *ast.UnaryExpr {\n  1253  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:46\n  1254  .  .  .  .  .  .  .  .  .  .  .  .  Op: -\n  1255  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n  1256  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:47\n  1257  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1258  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7\"\n  1259  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1260  .  .  .  .  .  .  .  .  .  .  .  }\n  1261  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1262  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:50\n  1263  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1264  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"11\"\n  1265  .  .  .  .  .  .  .  .  .  .  .  }\n  1266  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1267  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:54\n  1268  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1269  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1270  .  .  .  .  .  .  .  .  .  .  .  }\n  1271  .  .  .  .  .  .  .  .  .  .  }\n  1272  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:54:57\n  1273  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1274  .  .  .  .  .  .  .  .  .  }\n  1275  .  .  .  .  .  .  .  .  .  6: *ast.CompositeLit {\n  1276  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1277  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:3\n  1278  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1279  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1280  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:4\n  1281  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1282  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"unknown even and even, jacobi conjugate\\\"\"\n  1283  .  .  .  .  .  .  .  .  .  .  .  }\n  1284  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1285  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:47\n  1286  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1287  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"18\"\n  1288  .  .  .  .  .  .  .  .  .  .  .  }\n  1289  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1290  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:51\n  1291  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1292  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"8\"\n  1293  .  .  .  .  .  .  .  .  .  .  .  }\n  1294  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1295  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:54\n  1296  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1297  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1298  .  .  .  .  .  .  .  .  .  .  .  }\n  1299  .  .  .  .  .  .  .  .  .  .  }\n  1300  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:55:57\n  1301  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1302  .  .  .  .  .  .  .  .  .  }\n  1303  .  .  .  .  .  .  .  .  .  7: *ast.CompositeLit {\n  1304  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1305  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:3\n  1306  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 4) {\n  1307  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1308  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:4\n  1309  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1310  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"even and large even, jacobi conjugate\\\"\"\n  1311  .  .  .  .  .  .  .  .  .  .  .  }\n  1312  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  1313  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:45\n  1314  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1315  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"7056000\"\n  1316  .  .  .  .  .  .  .  .  .  .  .  }\n  1317  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  1318  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:54\n  1319  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  1320  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"256\"\n  1321  .  .  .  .  .  .  .  .  .  .  .  }\n  1322  .  .  .  .  .  .  .  .  .  .  .  3: *ast.CallExpr {\n  1323  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1324  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:59\n  1326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"fmt\"\n  1327  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1328  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1329  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1330  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:63\n  1331  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1333  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1334  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1335  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:69\n  1336  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  1337  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:70\n  1339  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1340  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Invalid value. k = 7056000, n = 256\\\"\"\n  1341  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1342  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1343  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1344  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:107\n  1345  .  .  .  .  .  .  .  .  .  .  .  }\n  1346  .  .  .  .  .  .  .  .  .  .  }\n  1347  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:56:108\n  1348  .  .  .  .  .  .  .  .  .  .  Incomplete: false\n  1349  .  .  .  .  .  .  .  .  .  }\n  1350  .  .  .  .  .  .  .  .  }\n  1351  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:57:2\n  1352  .  .  .  .  .  .  .  .  Incomplete: false\n  1353  .  .  .  .  .  .  .  }\n  1354  .  .  .  .  .  .  }\n  1355  .  .  .  .  .  }\n  1356  .  .  .  .  .  1: *ast.RangeStmt {\n  1357  .  .  .  .  .  .  For: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:2\n  1358  .  .  .  .  .  .  Key: *ast.Ident {\n  1359  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:6\n  1360  .  .  .  .  .  .  .  Name: \"_\"\n  1361  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1362  .  .  .  .  .  .  .  .  Kind: var\n  1363  .  .  .  .  .  .  .  .  Name: \"_\"\n  1364  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {\n  1365  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  1366  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 1358)\n  1367  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  1368  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:9\n  1369  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1370  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1371  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1372  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1373  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1364)\n  1374  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1375  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1376  .  .  .  .  .  .  .  .  .  .  .  }\n  1377  .  .  .  .  .  .  .  .  .  .  }\n  1378  .  .  .  .  .  .  .  .  .  }\n  1379  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:12\n  1380  .  .  .  .  .  .  .  .  .  Tok: :=\n  1381  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  1382  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {\n  1383  .  .  .  .  .  .  .  .  .  .  .  OpPos: -\n  1384  .  .  .  .  .  .  .  .  .  .  .  Op: range\n  1385  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1386  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:21\n  1387  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tests\"\n  1388  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 963)\n  1389  .  .  .  .  .  .  .  .  .  .  .  }\n  1390  .  .  .  .  .  .  .  .  .  .  }\n  1391  .  .  .  .  .  .  .  .  .  }\n  1392  .  .  .  .  .  .  .  .  }\n  1393  .  .  .  .  .  .  .  .  Data: nil\n  1394  .  .  .  .  .  .  .  .  Type: nil\n  1395  .  .  .  .  .  .  .  }\n  1396  .  .  .  .  .  .  }\n  1397  .  .  .  .  .  .  Value: *(obj @ 1367)\n  1398  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:12\n  1399  .  .  .  .  .  .  Tok: :=\n  1400  .  .  .  .  .  .  Range: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:15\n  1401  .  .  .  .  .  .  X: *(obj @ 1385)\n  1402  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1403  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:59:27\n  1404  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1405  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  1406  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1407  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1408  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1409  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:3\n  1410  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1411  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 923)\n  1412  .  .  .  .  .  .  .  .  .  .  .  }\n  1413  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1414  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:5\n  1415  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Run\"\n  1416  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1417  .  .  .  .  .  .  .  .  .  .  .  }\n  1418  .  .  .  .  .  .  .  .  .  .  }\n  1419  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:8\n  1420  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  1421  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  1422  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1423  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:9\n  1424  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1425  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1426  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1427  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1428  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:12\n  1429  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  1430  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1431  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1432  .  .  .  .  .  .  .  .  .  .  .  }\n  1433  .  .  .  .  .  .  .  .  .  .  .  1: *ast.FuncLit {\n  1434  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n  1435  .  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:18\n  1436  .  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n  1437  .  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n  1438  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:22\n  1439  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1440  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n  1441  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1442  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1443  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1444  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:23\n  1445  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1446  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1447  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1448  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1449  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1440)\n  1450  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1451  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1455  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n  1456  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:25\n  1457  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  1458  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1459  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:26\n  1460  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n  1461  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1462  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1463  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1464  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:34\n  1465  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n  1466  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1467  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1468  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1469  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1470  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1471  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1472  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1473  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1474  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:35\n  1475  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1476  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: nil\n  1477  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1478  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1479  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:60:37\n  1480  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {\n  1481  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n  1482  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  1483  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1484  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:4\n  1485  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n  1486  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1487  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1488  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n  1489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1481)\n  1490  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1491  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1492  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1493  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1494  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  1495  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:9\n  1496  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1497  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1498  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1499  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1500  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1481)\n  1501  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1502  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1503  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1504  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1505  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1506  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:13\n  1507  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n  1508  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  1509  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  1510  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  1511  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:16\n  1512  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"jacobiSymbol\"\n  1513  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1514  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1515  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:28\n  1516  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  1517  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  1518  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1519  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:29\n  1520  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1521  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1522  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1523  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1524  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:32\n  1525  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1526  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:35\n  1532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1535  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1536  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:38\n  1537  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:61:39\n  1544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n  1548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:4\n  1549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n  1550  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  1551  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1552  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:7\n  1553  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1554  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1497)\n  1555  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1556  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:11\n  1557  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ==\n  1558  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  1559  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:14\n  1560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:62:18\n  1566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  1568  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1569  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1570  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1571  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:5\n  1572  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1573  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1446)\n  1574  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1575  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1576  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:7\n  1577  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1578  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1579  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1580  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1581  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:13\n  1582  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 4) {\n  1583  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1584  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:14\n  1585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" jacobiSymbol(%d, %d) error = %v, want error\\\"\"\n  1587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1588  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1589  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:62\n  1591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:65\n  1596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n  1601  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:68\n  1603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:71\n  1608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:74\n  1614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"got\"\n  1615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1486)\n  1616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:63:77\n  1620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:64:4\n  1624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n  1626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.IfStmt {\n  1628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:4\n  1629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n  1630  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.UnaryExpr {\n  1631  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:6\n  1632  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !\n  1633  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1634  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1635  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1636  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:7\n  1637  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  1638  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1639  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1640  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1641  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:14\n  1642  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Is\"\n  1643  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1644  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1645  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1646  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:16\n  1647  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  1648  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1649  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:17\n  1650  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1651  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1497)\n  1652  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1653  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:22\n  1656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1657  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:25\n  1661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:29\n  1668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:65:31\n  1672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  1674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  1675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  1676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:5\n  1678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  1679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1446)\n  1680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:7\n  1683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Errorf\"\n  1684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:13\n  1688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 5) {\n  1689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  1690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:14\n  1691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  1692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"jacobiSymbol(%d, %d) error = %v, want %v\\\"\"\n  1693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {\n  1695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:58\n  1697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:61\n  1702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"k\"\n  1703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SelectorExpr {\n  1707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:64\n  1709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:67\n  1714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"n\"\n  1715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.Ident {\n  1719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:70\n  1720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1497)\n  1722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.SelectorExpr {\n  1724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:75\n  1726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1370)\n  1728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:78\n  1731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:66:82\n  1738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:67:4\n  1742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n  1744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1745  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1746  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:68:3\n  1747  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1748  .  .  .  .  .  .  .  .  .  .  .  }\n  1749  .  .  .  .  .  .  .  .  .  .  }\n  1750  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  1751  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:68:4\n  1752  .  .  .  .  .  .  .  .  .  }\n  1753  .  .  .  .  .  .  .  .  }\n  1754  .  .  .  .  .  .  .  }\n  1755  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:69:2\n  1756  .  .  .  .  .  .  }\n  1757  .  .  .  .  .  }\n  1758  .  .  .  .  }\n  1759  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:70:1\n  1760  .  .  .  }\n  1761  .  .  }\n  1762  .  .  3: *ast.FuncDecl {\n  1763  .  .  .  Doc: nil\n  1764  .  .  .  Recv: *ast.FieldList {\n  1765  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:6\n  1766  .  .  .  .  List: []*ast.Field (len = 1) {\n  1767  .  .  .  .  .  0: *ast.Field {\n  1768  .  .  .  .  .  .  Doc: nil\n  1769  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1770  .  .  .  .  .  .  .  0: *ast.Ident {\n  1771  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:7\n  1772  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1773  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1774  .  .  .  .  .  .  .  .  .  Kind: var\n  1775  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1776  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1767)\n  1777  .  .  .  .  .  .  .  .  .  Data: nil\n  1778  .  .  .  .  .  .  .  .  .  Type: nil\n  1779  .  .  .  .  .  .  .  .  }\n  1780  .  .  .  .  .  .  .  }\n  1781  .  .  .  .  .  .  }\n  1782  .  .  .  .  .  .  Type: *ast.StarExpr {\n  1783  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:10\n  1784  .  .  .  .  .  .  .  X: *ast.Ident {\n  1785  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:11\n  1786  .  .  .  .  .  .  .  .  Name: \"TestJacobiSymbolFailingPath\"\n  1787  .  .  .  .  .  .  .  .  Obj: *(obj @ 903)\n  1788  .  .  .  .  .  .  .  }\n  1789  .  .  .  .  .  .  }\n  1790  .  .  .  .  .  .  Tag: nil\n  1791  .  .  .  .  .  .  Comment: nil\n  1792  .  .  .  .  .  }\n  1793  .  .  .  .  }\n  1794  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:38\n  1795  .  .  .  }\n  1796  .  .  .  Name: *ast.Ident {\n  1797  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:40\n  1798  .  .  .  .  Name: \"wantError\"\n  1799  .  .  .  .  Obj: nil\n  1800  .  .  .  }\n  1801  .  .  .  Type: *ast.FuncType {\n  1802  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:1\n  1803  .  .  .  .  TypeParams: nil\n  1804  .  .  .  .  Params: *ast.FieldList {\n  1805  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:49\n  1806  .  .  .  .  .  List: nil\n  1807  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:50\n  1808  .  .  .  .  }\n  1809  .  .  .  .  Results: *ast.FieldList {\n  1810  .  .  .  .  .  Opening: -\n  1811  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1812  .  .  .  .  .  .  0: *ast.Field {\n  1813  .  .  .  .  .  .  .  Doc: nil\n  1814  .  .  .  .  .  .  .  Names: nil\n  1815  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1816  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:52\n  1817  .  .  .  .  .  .  .  .  Name: \"bool\"\n  1818  .  .  .  .  .  .  .  .  Obj: nil\n  1819  .  .  .  .  .  .  .  }\n  1820  .  .  .  .  .  .  .  Tag: nil\n  1821  .  .  .  .  .  .  .  Comment: nil\n  1822  .  .  .  .  .  .  }\n  1823  .  .  .  .  .  }\n  1824  .  .  .  .  .  Closing: -\n  1825  .  .  .  .  }\n  1826  .  .  .  }\n  1827  .  .  .  Body: *ast.BlockStmt {\n  1828  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:72:57\n  1829  .  .  .  .  List: []ast.Stmt (len = 1) {\n  1830  .  .  .  .  .  0: *ast.ReturnStmt {\n  1831  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:2\n  1832  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  1833  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  1834  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  1835  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1836  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:9\n  1837  .  .  .  .  .  .  .  .  .  .  Name: \"tt\"\n  1838  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1773)\n  1839  .  .  .  .  .  .  .  .  .  }\n  1840  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1841  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:12\n  1842  .  .  .  .  .  .  .  .  .  .  Name: \"want\"\n  1843  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1844  .  .  .  .  .  .  .  .  .  }\n  1845  .  .  .  .  .  .  .  .  }\n  1846  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:17\n  1847  .  .  .  .  .  .  .  .  Op: ==\n  1848  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  1849  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:73:20\n  1850  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  1851  .  .  .  .  .  .  .  .  .  Obj: nil\n  1852  .  .  .  .  .  .  .  .  }\n  1853  .  .  .  .  .  .  .  }\n  1854  .  .  .  .  .  .  }\n  1855  .  .  .  .  .  }\n  1856  .  .  .  .  }\n  1857  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:74:1\n  1858  .  .  .  }\n  1859  .  .  }\n  1860  .  .  4: *ast.FuncDecl {\n  1861  .  .  .  Doc: nil\n  1862  .  .  .  Recv: nil\n  1863  .  .  .  Name: *ast.Ident {\n  1864  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:6\n  1865  .  .  .  .  Name: \"TestMain\"\n  1866  .  .  .  .  Obj: *ast.Object {\n  1867  .  .  .  .  .  Kind: func\n  1868  .  .  .  .  .  Name: \"TestMain\"\n  1869  .  .  .  .  .  Decl: *(obj @ 1860)\n  1870  .  .  .  .  .  Data: nil\n  1871  .  .  .  .  .  Type: nil\n  1872  .  .  .  .  }\n  1873  .  .  .  }\n  1874  .  .  .  Type: *ast.FuncType {\n  1875  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:1\n  1876  .  .  .  .  TypeParams: nil\n  1877  .  .  .  .  Params: *ast.FieldList {\n  1878  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:14\n  1879  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1880  .  .  .  .  .  .  0: *ast.Field {\n  1881  .  .  .  .  .  .  .  Doc: nil\n  1882  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  1883  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1884  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:15\n  1885  .  .  .  .  .  .  .  .  .  Name: \"m\"\n  1886  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1887  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1888  .  .  .  .  .  .  .  .  .  .  Name: \"m\"\n  1889  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1880)\n  1890  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1891  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1892  .  .  .  .  .  .  .  .  .  }\n  1893  .  .  .  .  .  .  .  .  }\n  1894  .  .  .  .  .  .  .  }\n  1895  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n  1896  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:17\n  1897  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  1898  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  1899  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:18\n  1900  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n  1901  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1902  .  .  .  .  .  .  .  .  .  }\n  1903  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  1904  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:26\n  1905  .  .  .  .  .  .  .  .  .  .  Name: \"M\"\n  1906  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1907  .  .  .  .  .  .  .  .  .  }\n  1908  .  .  .  .  .  .  .  .  }\n  1909  .  .  .  .  .  .  .  }\n  1910  .  .  .  .  .  .  .  Tag: nil\n  1911  .  .  .  .  .  .  .  Comment: nil\n  1912  .  .  .  .  .  .  }\n  1913  .  .  .  .  .  }\n  1914  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:27\n  1915  .  .  .  .  }\n  1916  .  .  .  .  Results: nil\n  1917  .  .  .  }\n  1918  .  .  .  Body: *ast.BlockStmt {\n  1919  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:76:29\n  1920  .  .  .  .  List: []ast.Stmt (len = 8) {\n  1921  .  .  .  .  .  0: *ast.AssignStmt {\n  1922  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  1923  .  .  .  .  .  .  .  0: *ast.Ident {\n  1924  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:2\n  1925  .  .  .  .  .  .  .  .  Name: \"root\"\n  1926  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1927  .  .  .  .  .  .  .  .  .  Kind: var\n  1928  .  .  .  .  .  .  .  .  .  Name: \"root\"\n  1929  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1921)\n  1930  .  .  .  .  .  .  .  .  .  Data: nil\n  1931  .  .  .  .  .  .  .  .  .  Type: nil\n  1932  .  .  .  .  .  .  .  .  }\n  1933  .  .  .  .  .  .  .  }\n  1934  .  .  .  .  .  .  }\n  1935  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:7\n  1936  .  .  .  .  .  .  Tok: :=\n  1937  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  1938  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  1939  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  1940  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:10\n  1941  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  1942  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1943  .  .  .  .  .  .  .  .  .  .  Kind: func\n  1944  .  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  1945  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {\n  1946  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1947  .  .  .  .  .  .  .  .  .  .  .  Recv: nil\n  1948  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {\n  1949  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:6\n  1950  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  1951  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1942)\n  1952  .  .  .  .  .  .  .  .  .  .  .  }\n  1953  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n  1954  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:1\n  1955  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n  1956  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n  1957  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:19\n  1958  .  .  .  .  .  .  .  .  .  .  .  .  .  List: nil\n  1959  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:20\n  1960  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1961  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {\n  1962  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: -\n  1963  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  1964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n  1965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  1966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil\n  1967  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  1968  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:22\n  1969  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  1970  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  1971  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1972  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  1973  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  1974  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1975  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1976  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: -\n  1977  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1978  .  .  .  .  .  .  .  .  .  .  .  }\n  1979  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  1980  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:121:29\n  1981  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 4) {\n  1982  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n  1983  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  1984  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  1985  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:2\n  1986  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"pwd\"\n  1987  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  1989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"pwd\"\n  1990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1982)\n  1991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  1992  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  1993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  1995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  1996  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:7\n  1997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  1998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  1999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1982)\n  2002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:11\n  2008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n  2009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:14\n  2014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:17\n  2019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Getwd\"\n  2020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:22\n  2024  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  2025  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2026  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:122:23\n  2027  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2028  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2029  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2030  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n  2031  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:2\n  2032  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil\n  2033  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2034  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2035  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:5\n  2036  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1998)\n  2038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:8\n  2040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=\n  2041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:11\n  2043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:123:15\n  2049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:124:3\n  2052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  2053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:124:10\n  2055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" obs/\\\\_test\\\\_.go failure!\\\"\"\n  2057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:125:2\n  2062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil\n  2064  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2065  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.AssignStmt {\n  2066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:2\n  2069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2072  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2073  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2065)\n  2074  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2075  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2076  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2077  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2078  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2079  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:11\n  2080  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=\n  2081  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2082  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2083  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2084  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2085  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:14\n  2086  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"strings\"\n  2087  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2088  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2089  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2090  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:22\n  2091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Split\"\n  2092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:27\n  2096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  2097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:28\n  2099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"pwd\"\n  2100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1987)\n  2101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {\n  2103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:33\n  2105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  2106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:39\n  2109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  2111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:40\n  2113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2114  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2115  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2116  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2117  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:43\n  2118  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"PathSeparator\"\n  2119  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2122  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2123  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2124  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:56\n  2125  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:126:57\n  2129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2131  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2132  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.ReturnStmt {\n  2133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:2\n  2134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  2135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:9\n  2139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"strings\"\n  2140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:17\n  2144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Join\"\n  2145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:21\n  2149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  2150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SliceExpr {\n  2151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2152  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:22\n  2153  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2154  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2070)\n  2155  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2156  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:30\n  2157  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Low: nil\n  2158  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  High: *ast.BinaryExpr {\n  2159  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2160  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2161  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:32\n  2162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"len\"\n  2163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2165  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:35\n  2166  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2167  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2168  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:36\n  2169  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"splitted\"\n  2170  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2070)\n  2171  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2172  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2173  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:44\n  2175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:45\n  2177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: -\n  2178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:46\n  2180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  2181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"1\"\n  2182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Max: nil\n  2185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Slice3: false\n  2186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:47\n  2187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {\n  2189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:50\n  2191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  2192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:56\n  2195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {\n  2197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:57\n  2199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:60\n  2204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"PathSeparator\"\n  2205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2208  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2209  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2210  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:73\n  2211  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2213  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2214  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:127:74\n  2215  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2216  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2217  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2218  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2219  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:128:1\n  2220  .  .  .  .  .  .  .  .  .  .  .  }\n  2221  .  .  .  .  .  .  .  .  .  .  }\n  2222  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2223  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2224  .  .  .  .  .  .  .  .  .  }\n  2225  .  .  .  .  .  .  .  .  }\n  2226  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:23\n  2227  .  .  .  .  .  .  .  .  Args: nil\n  2228  .  .  .  .  .  .  .  .  Ellipsis: -\n  2229  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:77:24\n  2230  .  .  .  .  .  .  .  }\n  2231  .  .  .  .  .  .  }\n  2232  .  .  .  .  .  }\n  2233  .  .  .  .  .  1: *ast.AssignStmt {\n  2234  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2235  .  .  .  .  .  .  .  0: *ast.Ident {\n  2236  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:2\n  2237  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2238  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2239  .  .  .  .  .  .  .  .  .  Kind: var\n  2240  .  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2241  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2233)\n  2242  .  .  .  .  .  .  .  .  .  Data: nil\n  2243  .  .  .  .  .  .  .  .  .  Type: nil\n  2244  .  .  .  .  .  .  .  .  }\n  2245  .  .  .  .  .  .  .  }\n  2246  .  .  .  .  .  .  }\n  2247  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:12\n  2248  .  .  .  .  .  .  Tok: :=\n  2249  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2250  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  2251  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2252  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2253  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:15\n  2254  .  .  .  .  .  .  .  .  .  .  Name: \"RootDirectory\"\n  2255  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1942)\n  2256  .  .  .  .  .  .  .  .  .  }\n  2257  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:28\n  2258  .  .  .  .  .  .  .  .  .  Args: nil\n  2259  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2260  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:29\n  2261  .  .  .  .  .  .  .  .  }\n  2262  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:31\n  2263  .  .  .  .  .  .  .  .  Op: +\n  2264  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2265  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:78:33\n  2266  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2267  .  .  .  .  .  .  .  .  .  Value: \"\\\"/obs.md\\\"\"\n  2268  .  .  .  .  .  .  .  .  }\n  2269  .  .  .  .  .  .  .  }\n  2270  .  .  .  .  .  .  }\n  2271  .  .  .  .  .  }\n  2272  .  .  .  .  .  2: *ast.AssignStmt {\n  2273  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2274  .  .  .  .  .  .  .  0: *ast.Ident {\n  2275  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:2\n  2276  .  .  .  .  .  .  .  .  Name: \"err\"\n  2277  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2278  .  .  .  .  .  .  .  .  .  Kind: var\n  2279  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2280  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2272)\n  2281  .  .  .  .  .  .  .  .  .  Data: nil\n  2282  .  .  .  .  .  .  .  .  .  Type: nil\n  2283  .  .  .  .  .  .  .  .  }\n  2284  .  .  .  .  .  .  .  }\n  2285  .  .  .  .  .  .  }\n  2286  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:6\n  2287  .  .  .  .  .  .  Tok: :=\n  2288  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2289  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2290  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2291  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2292  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:9\n  2293  .  .  .  .  .  .  .  .  .  .  Name: \"ioutil\"\n  2294  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2295  .  .  .  .  .  .  .  .  .  }\n  2296  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2297  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:16\n  2298  .  .  .  .  .  .  .  .  .  .  Name: \"WriteFile\"\n  2299  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2300  .  .  .  .  .  .  .  .  .  }\n  2301  .  .  .  .  .  .  .  .  }\n  2302  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:25\n  2303  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {\n  2304  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2305  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:26\n  2306  .  .  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2307  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2238)\n  2308  .  .  .  .  .  .  .  .  .  }\n  2309  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {\n  2310  .  .  .  .  .  .  .  .  .  .  Fun: *ast.ArrayType {\n  2311  .  .  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:37\n  2312  .  .  .  .  .  .  .  .  .  .  .  Len: nil\n  2313  .  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {\n  2314  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:39\n  2315  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"byte\"\n  2316  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2317  .  .  .  .  .  .  .  .  .  .  .  }\n  2318  .  .  .  .  .  .  .  .  .  .  }\n  2319  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:43\n  2320  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2321  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  2322  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {\n  2323  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n  2324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:44\n  2325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"```\\\\n\\\"\"\n  2327  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2328  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:51\n  2329  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  2330  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {\n  2331  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:52\n  2333  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nativeObs\"\n  2334  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2335  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func\n  2336  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nativeObs\"\n  2337  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {\n  2338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  2339  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Recv: nil\n  2340  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {\n  2341  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:6\n  2342  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nativeObs\"\n  2343  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2334)\n  2344  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2345  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {\n  2346  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:1\n  2347  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TypeParams: nil\n  2348  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {\n  2349  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:15\n  2350  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: nil\n  2351  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:16\n  2352  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2353  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {\n  2354  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: -\n  2355  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  2356  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {\n  2357  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil\n  2358  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil\n  2359  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2360  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:18\n  2361  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"string\"\n  2362  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2363  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2364  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil\n  2365  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil\n  2366  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2367  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2368  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: -\n  2369  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2370  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2371  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2372  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:91:25\n  2373  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2374  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2375  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:94:2\n  2376  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  2377  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2378  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:94:9\n  2379  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2380  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"\\\"\"\n  2381  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2382  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2383  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2384  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2385  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:95:1\n  2386  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2391  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2392  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:61\n  2393  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  2394  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2395  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:62\n  2396  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2397  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2398  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:63\n  2399  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  2400  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2401  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:64\n  2402  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2403  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"\\\\n```\\\"\"\n  2404  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2405  .  .  .  .  .  .  .  .  .  .  .  }\n  2406  .  .  .  .  .  .  .  .  .  .  }\n  2407  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2408  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:71\n  2409  .  .  .  .  .  .  .  .  .  }\n  2410  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {\n  2411  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:74\n  2412  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  2413  .  .  .  .  .  .  .  .  .  .  Value: \"0644\"\n  2414  .  .  .  .  .  .  .  .  .  }\n  2415  .  .  .  .  .  .  .  .  }\n  2416  .  .  .  .  .  .  .  .  Ellipsis: -\n  2417  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:79:78\n  2418  .  .  .  .  .  .  .  }\n  2419  .  .  .  .  .  .  }\n  2420  .  .  .  .  .  }\n  2421  .  .  .  .  .  3: *ast.IfStmt {\n  2422  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:2\n  2423  .  .  .  .  .  .  Init: nil\n  2424  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2425  .  .  .  .  .  .  .  X: *ast.Ident {\n  2426  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:5\n  2427  .  .  .  .  .  .  .  .  Name: \"err\"\n  2428  .  .  .  .  .  .  .  .  Obj: *(obj @ 2277)\n  2429  .  .  .  .  .  .  .  }\n  2430  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:8\n  2431  .  .  .  .  .  .  .  Op: !=\n  2432  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2433  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:11\n  2434  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2435  .  .  .  .  .  .  .  .  Obj: nil\n  2436  .  .  .  .  .  .  .  }\n  2437  .  .  .  .  .  .  }\n  2438  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2439  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:80:15\n  2440  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2441  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  2442  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2443  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2444  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2445  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:3\n  2446  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  2447  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2448  .  .  .  .  .  .  .  .  .  .  .  }\n  2449  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2450  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:5\n  2451  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Fatal\"\n  2452  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2453  .  .  .  .  .  .  .  .  .  .  .  }\n  2454  .  .  .  .  .  .  .  .  .  .  }\n  2455  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:10\n  2456  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2457  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2458  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:11\n  2459  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2460  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2277)\n  2461  .  .  .  .  .  .  .  .  .  .  .  }\n  2462  .  .  .  .  .  .  .  .  .  .  }\n  2463  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2464  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:81:14\n  2465  .  .  .  .  .  .  .  .  .  }\n  2466  .  .  .  .  .  .  .  .  }\n  2467  .  .  .  .  .  .  .  }\n  2468  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:82:2\n  2469  .  .  .  .  .  .  }\n  2470  .  .  .  .  .  .  Else: nil\n  2471  .  .  .  .  .  }\n  2472  .  .  .  .  .  4: *ast.DeferStmt {\n  2473  .  .  .  .  .  .  Defer: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:2\n  2474  .  .  .  .  .  .  Call: *ast.CallExpr {\n  2475  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2476  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2477  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:8\n  2478  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2479  .  .  .  .  .  .  .  .  .  Obj: nil\n  2480  .  .  .  .  .  .  .  .  }\n  2481  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2482  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:11\n  2483  .  .  .  .  .  .  .  .  .  Name: \"Remove\"\n  2484  .  .  .  .  .  .  .  .  .  Obj: nil\n  2485  .  .  .  .  .  .  .  .  }\n  2486  .  .  .  .  .  .  .  }\n  2487  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:17\n  2488  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2489  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2490  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:18\n  2491  .  .  .  .  .  .  .  .  .  Name: \"jacobiObs\"\n  2492  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2238)\n  2493  .  .  .  .  .  .  .  .  }\n  2494  .  .  .  .  .  .  .  }\n  2495  .  .  .  .  .  .  .  Ellipsis: -\n  2496  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:83:27\n  2497  .  .  .  .  .  .  }\n  2498  .  .  .  .  .  }\n  2499  .  .  .  .  .  5: *ast.AssignStmt {\n  2500  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2501  .  .  .  .  .  .  .  0: *ast.Ident {\n  2502  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:2\n  2503  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2504  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2505  .  .  .  .  .  .  .  .  .  Kind: var\n  2506  .  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2507  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2499)\n  2508  .  .  .  .  .  .  .  .  .  Data: nil\n  2509  .  .  .  .  .  .  .  .  .  Type: nil\n  2510  .  .  .  .  .  .  .  .  }\n  2511  .  .  .  .  .  .  .  }\n  2512  .  .  .  .  .  .  }\n  2513  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:6\n  2514  .  .  .  .  .  .  Tok: :=\n  2515  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2516  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2517  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2518  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2519  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:9\n  2520  .  .  .  .  .  .  .  .  .  .  Name: \"m\"\n  2521  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1886)\n  2522  .  .  .  .  .  .  .  .  .  }\n  2523  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2524  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:11\n  2525  .  .  .  .  .  .  .  .  .  .  Name: \"Run\"\n  2526  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2527  .  .  .  .  .  .  .  .  .  }\n  2528  .  .  .  .  .  .  .  .  }\n  2529  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:14\n  2530  .  .  .  .  .  .  .  .  Args: nil\n  2531  .  .  .  .  .  .  .  .  Ellipsis: -\n  2532  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:84:15\n  2533  .  .  .  .  .  .  .  }\n  2534  .  .  .  .  .  .  }\n  2535  .  .  .  .  .  }\n  2536  .  .  .  .  .  6: *ast.IfStmt {\n  2537  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:2\n  2538  .  .  .  .  .  .  Init: nil\n  2539  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2540  .  .  .  .  .  .  .  X: *ast.Ident {\n  2541  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:5\n  2542  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2543  .  .  .  .  .  .  .  .  Obj: *(obj @ 2504)\n  2544  .  .  .  .  .  .  .  }\n  2545  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:9\n  2546  .  .  .  .  .  .  .  Op: ==\n  2547  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2548  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:12\n  2549  .  .  .  .  .  .  .  .  Kind: INT\n  2550  .  .  .  .  .  .  .  .  Value: \"0\"\n  2551  .  .  .  .  .  .  .  }\n  2552  .  .  .  .  .  .  }\n  2553  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2554  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:85:14\n  2555  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2556  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {\n  2557  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  2558  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2559  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2560  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:3\n  2561  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  2562  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2563  .  .  .  .  .  .  .  .  .  .  .  }\n  2564  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2565  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:5\n  2566  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Skip\"\n  2567  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2568  .  .  .  .  .  .  .  .  .  .  .  }\n  2569  .  .  .  .  .  .  .  .  .  .  }\n  2570  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:9\n  2571  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2572  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2573  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:10\n  2574  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  2575  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"obs/\\\\_test\\\\_.go observed jacobi symbol error\\\"\"\n  2576  .  .  .  .  .  .  .  .  .  .  .  }\n  2577  .  .  .  .  .  .  .  .  .  .  }\n  2578  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2579  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:86:56\n  2580  .  .  .  .  .  .  .  .  .  }\n  2581  .  .  .  .  .  .  .  .  }\n  2582  .  .  .  .  .  .  .  }\n  2583  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:87:2\n  2584  .  .  .  .  .  .  }\n  2585  .  .  .  .  .  .  Else: nil\n  2586  .  .  .  .  .  }\n  2587  .  .  .  .  .  7: *ast.ExprStmt {\n  2588  .  .  .  .  .  .  X: *ast.CallExpr {\n  2589  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2590  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2591  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:2\n  2592  .  .  .  .  .  .  .  .  .  Name: \"os\"\n  2593  .  .  .  .  .  .  .  .  .  Obj: nil\n  2594  .  .  .  .  .  .  .  .  }\n  2595  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2596  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:5\n  2597  .  .  .  .  .  .  .  .  .  Name: \"Exit\"\n  2598  .  .  .  .  .  .  .  .  .  Obj: nil\n  2599  .  .  .  .  .  .  .  .  }\n  2600  .  .  .  .  .  .  .  }\n  2601  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:9\n  2602  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2603  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2604  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:10\n  2605  .  .  .  .  .  .  .  .  .  Name: \"ret\"\n  2606  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2504)\n  2607  .  .  .  .  .  .  .  .  }\n  2608  .  .  .  .  .  .  .  }\n  2609  .  .  .  .  .  .  .  Ellipsis: -\n  2610  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:88:13\n  2611  .  .  .  .  .  .  }\n  2612  .  .  .  .  .  }\n  2613  .  .  .  .  }\n  2614  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:89:1\n  2615  .  .  .  }\n  2616  .  .  }\n  2617  .  .  5: *(obj @ 2337)\n  2618  .  .  6: *ast.FuncDecl {\n  2619  .  .  .  Doc: nil\n  2620  .  .  .  Recv: nil\n  2621  .  .  .  Name: *ast.Ident {\n  2622  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:6\n  2623  .  .  .  .  Name: \"isOddBinaryFile\"\n  2624  .  .  .  .  Obj: *ast.Object {\n  2625  .  .  .  .  .  Kind: func\n  2626  .  .  .  .  .  Name: \"isOddBinaryFile\"\n  2627  .  .  .  .  .  Decl: *(obj @ 2618)\n  2628  .  .  .  .  .  Data: nil\n  2629  .  .  .  .  .  Type: nil\n  2630  .  .  .  .  }\n  2631  .  .  .  }\n  2632  .  .  .  Type: *ast.FuncType {\n  2633  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:1\n  2634  .  .  .  .  TypeParams: nil\n  2635  .  .  .  .  Params: *ast.FieldList {\n  2636  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:21\n  2637  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  2638  .  .  .  .  .  .  0: *ast.Field {\n  2639  .  .  .  .  .  .  .  Doc: nil\n  2640  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  2641  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2642  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:22\n  2643  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  2644  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2645  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2646  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  2647  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2638)\n  2648  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2649  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2650  .  .  .  .  .  .  .  .  .  }\n  2651  .  .  .  .  .  .  .  .  }\n  2652  .  .  .  .  .  .  .  }\n  2653  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2654  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:27\n  2655  .  .  .  .  .  .  .  .  Name: \"DirName\"\n  2656  .  .  .  .  .  .  .  .  Obj: nil\n  2657  .  .  .  .  .  .  .  }\n  2658  .  .  .  .  .  .  .  Tag: nil\n  2659  .  .  .  .  .  .  .  Comment: nil\n  2660  .  .  .  .  .  .  }\n  2661  .  .  .  .  .  }\n  2662  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:34\n  2663  .  .  .  .  }\n  2664  .  .  .  .  Results: *ast.FieldList {\n  2665  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:36\n  2666  .  .  .  .  .  List: []*ast.Field (len = 2) {\n  2667  .  .  .  .  .  .  0: *ast.Field {\n  2668  .  .  .  .  .  .  .  Doc: nil\n  2669  .  .  .  .  .  .  .  Names: nil\n  2670  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2671  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:37\n  2672  .  .  .  .  .  .  .  .  Name: \"bool\"\n  2673  .  .  .  .  .  .  .  .  Obj: nil\n  2674  .  .  .  .  .  .  .  }\n  2675  .  .  .  .  .  .  .  Tag: nil\n  2676  .  .  .  .  .  .  .  Comment: nil\n  2677  .  .  .  .  .  .  }\n  2678  .  .  .  .  .  .  1: *ast.Field {\n  2679  .  .  .  .  .  .  .  Doc: nil\n  2680  .  .  .  .  .  .  .  Names: nil\n  2681  .  .  .  .  .  .  .  Type: *ast.Ident {\n  2682  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:43\n  2683  .  .  .  .  .  .  .  .  Name: \"error\"\n  2684  .  .  .  .  .  .  .  .  Obj: nil\n  2685  .  .  .  .  .  .  .  }\n  2686  .  .  .  .  .  .  .  Tag: nil\n  2687  .  .  .  .  .  .  .  Comment: nil\n  2688  .  .  .  .  .  .  }\n  2689  .  .  .  .  .  }\n  2690  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:48\n  2691  .  .  .  .  }\n  2692  .  .  .  }\n  2693  .  .  .  Body: *ast.BlockStmt {\n  2694  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:97:50\n  2695  .  .  .  .  List: []ast.Stmt (len = 4) {\n  2696  .  .  .  .  .  0: *ast.AssignStmt {\n  2697  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {\n  2698  .  .  .  .  .  .  .  0: *ast.Ident {\n  2699  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:2\n  2700  .  .  .  .  .  .  .  .  Name: \"b\"\n  2701  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2702  .  .  .  .  .  .  .  .  .  Kind: var\n  2703  .  .  .  .  .  .  .  .  .  Name: \"b\"\n  2704  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2696)\n  2705  .  .  .  .  .  .  .  .  .  Data: nil\n  2706  .  .  .  .  .  .  .  .  .  Type: nil\n  2707  .  .  .  .  .  .  .  .  }\n  2708  .  .  .  .  .  .  .  }\n  2709  .  .  .  .  .  .  .  1: *ast.Ident {\n  2710  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:5\n  2711  .  .  .  .  .  .  .  .  Name: \"err\"\n  2712  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2713  .  .  .  .  .  .  .  .  .  Kind: var\n  2714  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2715  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2696)\n  2716  .  .  .  .  .  .  .  .  .  Data: nil\n  2717  .  .  .  .  .  .  .  .  .  Type: nil\n  2718  .  .  .  .  .  .  .  .  }\n  2719  .  .  .  .  .  .  .  }\n  2720  .  .  .  .  .  .  }\n  2721  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:9\n  2722  .  .  .  .  .  .  Tok: :=\n  2723  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2724  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2725  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2726  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2727  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:12\n  2728  .  .  .  .  .  .  .  .  .  .  Name: \"ioutil\"\n  2729  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2730  .  .  .  .  .  .  .  .  .  }\n  2731  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2732  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:19\n  2733  .  .  .  .  .  .  .  .  .  .  Name: \"ReadFile\"\n  2734  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2735  .  .  .  .  .  .  .  .  .  }\n  2736  .  .  .  .  .  .  .  .  }\n  2737  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:27\n  2738  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2739  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2740  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  2741  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2742  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:28\n  2743  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  2744  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2644)\n  2745  .  .  .  .  .  .  .  .  .  .  .  }\n  2746  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  2747  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:33\n  2748  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"inner\"\n  2749  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2750  .  .  .  .  .  .  .  .  .  .  .  }\n  2751  .  .  .  .  .  .  .  .  .  .  }\n  2752  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:38\n  2753  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2754  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2755  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2756  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:39\n  2757  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"errDir\"\n  2758  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2759  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2760  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:45\n  2761  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  2762  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2763  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:46\n  2764  .  .  .  .  .  .  .  .  .  .  .  }\n  2765  .  .  .  .  .  .  .  .  .  .  }\n  2766  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2767  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:47\n  2768  .  .  .  .  .  .  .  .  .  }\n  2769  .  .  .  .  .  .  .  .  }\n  2770  .  .  .  .  .  .  .  .  Ellipsis: -\n  2771  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:98:48\n  2772  .  .  .  .  .  .  .  }\n  2773  .  .  .  .  .  .  }\n  2774  .  .  .  .  .  }\n  2775  .  .  .  .  .  1: *ast.IfStmt {\n  2776  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:2\n  2777  .  .  .  .  .  .  Init: nil\n  2778  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2779  .  .  .  .  .  .  .  X: *ast.Ident {\n  2780  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:5\n  2781  .  .  .  .  .  .  .  .  Name: \"err\"\n  2782  .  .  .  .  .  .  .  .  Obj: *(obj @ 2712)\n  2783  .  .  .  .  .  .  .  }\n  2784  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:8\n  2785  .  .  .  .  .  .  .  Op: !=\n  2786  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2787  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:11\n  2788  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2789  .  .  .  .  .  .  .  .  Obj: nil\n  2790  .  .  .  .  .  .  .  }\n  2791  .  .  .  .  .  .  }\n  2792  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2793  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:99:15\n  2794  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2795  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2796  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:100:3\n  2797  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  2798  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2799  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:100:10\n  2800  .  .  .  .  .  .  .  .  .  .  .  Name: \"false\"\n  2801  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2802  .  .  .  .  .  .  .  .  .  .  }\n  2803  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  2804  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:100:17\n  2805  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2806  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2712)\n  2807  .  .  .  .  .  .  .  .  .  .  }\n  2808  .  .  .  .  .  .  .  .  .  }\n  2809  .  .  .  .  .  .  .  .  }\n  2810  .  .  .  .  .  .  .  }\n  2811  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:101:2\n  2812  .  .  .  .  .  .  }\n  2813  .  .  .  .  .  .  Else: nil\n  2814  .  .  .  .  .  }\n  2815  .  .  .  .  .  2: *ast.ForStmt {\n  2816  .  .  .  .  .  .  For: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:2\n  2817  .  .  .  .  .  .  Init: *ast.AssignStmt {\n  2818  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2819  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2820  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:6\n  2821  .  .  .  .  .  .  .  .  .  Name: \"i\"\n  2822  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2823  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2824  .  .  .  .  .  .  .  .  .  .  Name: \"i\"\n  2825  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2817)\n  2826  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2827  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2828  .  .  .  .  .  .  .  .  .  }\n  2829  .  .  .  .  .  .  .  .  }\n  2830  .  .  .  .  .  .  .  }\n  2831  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:8\n  2832  .  .  .  .  .  .  .  Tok: :=\n  2833  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2834  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  2835  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:11\n  2836  .  .  .  .  .  .  .  .  .  Kind: INT\n  2837  .  .  .  .  .  .  .  .  .  Value: \"0\"\n  2838  .  .  .  .  .  .  .  .  }\n  2839  .  .  .  .  .  .  .  }\n  2840  .  .  .  .  .  .  }\n  2841  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2842  .  .  .  .  .  .  .  X: *ast.Ident {\n  2843  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:14\n  2844  .  .  .  .  .  .  .  .  Name: \"i\"\n  2845  .  .  .  .  .  .  .  .  Obj: *(obj @ 2822)\n  2846  .  .  .  .  .  .  .  }\n  2847  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:16\n  2848  .  .  .  .  .  .  .  Op: <\n  2849  .  .  .  .  .  .  .  Y: *ast.CallExpr {\n  2850  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2851  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:18\n  2852  .  .  .  .  .  .  .  .  .  Name: \"len\"\n  2853  .  .  .  .  .  .  .  .  .  Obj: nil\n  2854  .  .  .  .  .  .  .  .  }\n  2855  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:21\n  2856  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2857  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2858  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:22\n  2859  .  .  .  .  .  .  .  .  .  .  Name: \"b\"\n  2860  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2701)\n  2861  .  .  .  .  .  .  .  .  .  }\n  2862  .  .  .  .  .  .  .  .  }\n  2863  .  .  .  .  .  .  .  .  Ellipsis: -\n  2864  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:23\n  2865  .  .  .  .  .  .  .  }\n  2866  .  .  .  .  .  .  }\n  2867  .  .  .  .  .  .  Post: *ast.IncDecStmt {\n  2868  .  .  .  .  .  .  .  X: *ast.Ident {\n  2869  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:26\n  2870  .  .  .  .  .  .  .  .  Name: \"i\"\n  2871  .  .  .  .  .  .  .  .  Obj: *(obj @ 2822)\n  2872  .  .  .  .  .  .  .  }\n  2873  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:27\n  2874  .  .  .  .  .  .  .  Tok: ++\n  2875  .  .  .  .  .  .  }\n  2876  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2877  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:102:30\n  2878  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {\n  2879  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {\n  2880  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  2881  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2882  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:3\n  2883  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2884  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  2885  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var\n  2886  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2887  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2879)\n  2888  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil\n  2889  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil\n  2890  .  .  .  .  .  .  .  .  .  .  .  }\n  2891  .  .  .  .  .  .  .  .  .  .  }\n  2892  .  .  .  .  .  .  .  .  .  }\n  2893  .  .  .  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:6\n  2894  .  .  .  .  .  .  .  .  .  Tok: :=\n  2895  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  2896  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  2897  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  2898  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:9\n  2899  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"binaryLibLogoByte\"\n  2900  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2901  .  .  .  .  .  .  .  .  .  .  .  }\n  2902  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:26\n  2903  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  2904  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {\n  2905  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:27\n  2907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"b\"\n  2908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2701)\n  2909  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2910  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:28\n  2911  .  .  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {\n  2912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:29\n  2913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"i\"\n  2914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2822)\n  2915  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2916  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:30\n  2917  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2918  .  .  .  .  .  .  .  .  .  .  .  }\n  2919  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  2920  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:103:31\n  2921  .  .  .  .  .  .  .  .  .  .  }\n  2922  .  .  .  .  .  .  .  .  .  }\n  2923  .  .  .  .  .  .  .  .  }\n  2924  .  .  .  .  .  .  .  .  1: *ast.IfStmt {\n  2925  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:3\n  2926  .  .  .  .  .  .  .  .  .  Init: nil\n  2927  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2928  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2929  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:6\n  2930  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2931  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2884)\n  2932  .  .  .  .  .  .  .  .  .  .  }\n  2933  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:9\n  2934  .  .  .  .  .  .  .  .  .  .  Op: ==\n  2935  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  2936  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:12\n  2937  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2938  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2939  .  .  .  .  .  .  .  .  .  .  }\n  2940  .  .  .  .  .  .  .  .  .  }\n  2941  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2942  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:104:16\n  2943  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2944  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2945  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:105:4\n  2946  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  2947  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:105:11\n  2949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"false\"\n  2950  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2951  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2952  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  2953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:105:18\n  2954  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"err\"\n  2955  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2712)\n  2956  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2957  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2958  .  .  .  .  .  .  .  .  .  .  .  }\n  2959  .  .  .  .  .  .  .  .  .  .  }\n  2960  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:106:3\n  2961  .  .  .  .  .  .  .  .  .  }\n  2962  .  .  .  .  .  .  .  .  .  Else: nil\n  2963  .  .  .  .  .  .  .  .  }\n  2964  .  .  .  .  .  .  .  .  2: *ast.IfStmt {\n  2965  .  .  .  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:3\n  2966  .  .  .  .  .  .  .  .  .  Init: nil\n  2967  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {\n  2968  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  2969  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:6\n  2970  .  .  .  .  .  .  .  .  .  .  .  Name: \"ch\"\n  2971  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2884)\n  2972  .  .  .  .  .  .  .  .  .  .  }\n  2973  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:8\n  2974  .  .  .  .  .  .  .  .  .  .  Op: !=\n  2975  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  2976  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:11\n  2977  .  .  .  .  .  .  .  .  .  .  .  Kind: INT\n  2978  .  .  .  .  .  .  .  .  .  .  .  Value: \"0\"\n  2979  .  .  .  .  .  .  .  .  .  .  }\n  2980  .  .  .  .  .  .  .  .  .  }\n  2981  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  2982  .  .  .  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:107:13\n  2983  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  2984  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  2985  .  .  .  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:108:4\n  2986  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  2987  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  2988  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:108:11\n  2989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"true\"\n  2990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2991  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2992  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  2993  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:108:17\n  2994  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  2995  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  2996  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2997  .  .  .  .  .  .  .  .  .  .  .  .  }\n  2998  .  .  .  .  .  .  .  .  .  .  .  }\n  2999  .  .  .  .  .  .  .  .  .  .  }\n  3000  .  .  .  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:109:3\n  3001  .  .  .  .  .  .  .  .  .  }\n  3002  .  .  .  .  .  .  .  .  .  Else: nil\n  3003  .  .  .  .  .  .  .  .  }\n  3004  .  .  .  .  .  .  .  }\n  3005  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:110:2\n  3006  .  .  .  .  .  .  }\n  3007  .  .  .  .  .  }\n  3008  .  .  .  .  .  3: *ast.ReturnStmt {\n  3009  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:111:2\n  3010  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {\n  3011  .  .  .  .  .  .  .  0: *ast.Ident {\n  3012  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:111:9\n  3013  .  .  .  .  .  .  .  .  Name: \"false\"\n  3014  .  .  .  .  .  .  .  .  Obj: nil\n  3015  .  .  .  .  .  .  .  }\n  3016  .  .  .  .  .  .  .  1: *ast.Ident {\n  3017  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:111:16\n  3018  .  .  .  .  .  .  .  .  Name: \"nil\"\n  3019  .  .  .  .  .  .  .  .  Obj: nil\n  3020  .  .  .  .  .  .  .  }\n  3021  .  .  .  .  .  .  }\n  3022  .  .  .  .  .  }\n  3023  .  .  .  .  }\n  3024  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:112:1\n  3025  .  .  .  }\n  3026  .  .  }\n  3027  .  .  7: *ast.FuncDecl {\n  3028  .  .  .  Doc: nil\n  3029  .  .  .  Recv: nil\n  3030  .  .  .  Name: *ast.Ident {\n  3031  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:6\n  3032  .  .  .  .  Name: \"binaryFileObs\"\n  3033  .  .  .  .  Obj: *ast.Object {\n  3034  .  .  .  .  .  Kind: func\n  3035  .  .  .  .  .  Name: \"binaryFileObs\"\n  3036  .  .  .  .  .  Decl: *(obj @ 3027)\n  3037  .  .  .  .  .  Data: nil\n  3038  .  .  .  .  .  Type: nil\n  3039  .  .  .  .  }\n  3040  .  .  .  }\n  3041  .  .  .  Type: *ast.FuncType {\n  3042  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:1\n  3043  .  .  .  .  TypeParams: nil\n  3044  .  .  .  .  Params: *ast.FieldList {\n  3045  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:19\n  3046  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  3047  .  .  .  .  .  .  0: *ast.Field {\n  3048  .  .  .  .  .  .  .  Doc: nil\n  3049  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  3050  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  3051  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:20\n  3052  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3053  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  3054  .  .  .  .  .  .  .  .  .  .  Kind: var\n  3055  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3056  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3047)\n  3057  .  .  .  .  .  .  .  .  .  .  Data: nil\n  3058  .  .  .  .  .  .  .  .  .  .  Type: nil\n  3059  .  .  .  .  .  .  .  .  .  }\n  3060  .  .  .  .  .  .  .  .  }\n  3061  .  .  .  .  .  .  .  }\n  3062  .  .  .  .  .  .  .  Type: *ast.Ident {\n  3063  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:25\n  3064  .  .  .  .  .  .  .  .  Name: \"DirName\"\n  3065  .  .  .  .  .  .  .  .  Obj: nil\n  3066  .  .  .  .  .  .  .  }\n  3067  .  .  .  .  .  .  .  Tag: nil\n  3068  .  .  .  .  .  .  .  Comment: nil\n  3069  .  .  .  .  .  .  }\n  3070  .  .  .  .  .  }\n  3071  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:32\n  3072  .  .  .  .  }\n  3073  .  .  .  .  Results: *ast.FieldList {\n  3074  .  .  .  .  .  Opening: -\n  3075  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  3076  .  .  .  .  .  .  0: *ast.Field {\n  3077  .  .  .  .  .  .  .  Doc: nil\n  3078  .  .  .  .  .  .  .  Names: nil\n  3079  .  .  .  .  .  .  .  Type: *ast.Ident {\n  3080  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:34\n  3081  .  .  .  .  .  .  .  .  Name: \"error\"\n  3082  .  .  .  .  .  .  .  .  Obj: nil\n  3083  .  .  .  .  .  .  .  }\n  3084  .  .  .  .  .  .  .  Tag: nil\n  3085  .  .  .  .  .  .  .  Comment: nil\n  3086  .  .  .  .  .  .  }\n  3087  .  .  .  .  .  }\n  3088  .  .  .  .  .  Closing: -\n  3089  .  .  .  .  }\n  3090  .  .  .  }\n  3091  .  .  .  Body: *ast.BlockStmt {\n  3092  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:114:40\n  3093  .  .  .  .  List: []ast.Stmt (len = 2) {\n  3094  .  .  .  .  .  0: *ast.IfStmt {\n  3095  .  .  .  .  .  .  If: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:2\n  3096  .  .  .  .  .  .  Init: nil\n  3097  .  .  .  .  .  .  Cond: *ast.TypeAssertExpr {\n  3098  .  .  .  .  .  .  .  X: *ast.CallExpr {\n  3099  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3100  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:5\n  3101  .  .  .  .  .  .  .  .  .  Name: \"isOddBinaryFile\"\n  3102  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2624)\n  3103  .  .  .  .  .  .  .  .  }\n  3104  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:20\n  3105  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3106  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3107  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3108  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3109  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:21\n  3110  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3111  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3053)\n  3112  .  .  .  .  .  .  .  .  .  .  .  }\n  3113  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3114  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:26\n  3115  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"inner\"\n  3116  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3117  .  .  .  .  .  .  .  .  .  .  .  }\n  3118  .  .  .  .  .  .  .  .  .  .  }\n  3119  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:31\n  3120  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3121  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3122  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3123  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:32\n  3124  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"ReleaseDir\"\n  3125  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3126  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3127  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:42\n  3128  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  3129  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3130  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:43\n  3131  .  .  .  .  .  .  .  .  .  .  .  }\n  3132  .  .  .  .  .  .  .  .  .  .  }\n  3133  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3134  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:44\n  3135  .  .  .  .  .  .  .  .  .  }\n  3136  .  .  .  .  .  .  .  .  }\n  3137  .  .  .  .  .  .  .  .  Ellipsis: -\n  3138  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:45\n  3139  .  .  .  .  .  .  .  }\n  3140  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:47\n  3141  .  .  .  .  .  .  .  Type: *ast.Ident {\n  3142  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:48\n  3143  .  .  .  .  .  .  .  .  Name: \"bool\"\n  3144  .  .  .  .  .  .  .  .  Obj: nil\n  3145  .  .  .  .  .  .  .  }\n  3146  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:52\n  3147  .  .  .  .  .  .  }\n  3148  .  .  .  .  .  .  Body: *ast.BlockStmt {\n  3149  .  .  .  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:115:54\n  3150  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {\n  3151  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {\n  3152  .  .  .  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:3\n  3153  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  3154  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3155  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3156  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3157  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:10\n  3158  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  3159  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3160  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3161  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3162  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:17\n  3163  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"New\"\n  3164  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3165  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3166  .  .  .  .  .  .  .  .  .  .  .  }\n  3167  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:20\n  3168  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3169  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  3170  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {\n  3171  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BasicLit {\n  3172  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:21\n  3173  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3174  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"Binary file \\\"\"\n  3175  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3176  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:35\n  3177  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  3178  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {\n  3179  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:36\n  3182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"name\"\n  3183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3053)\n  3184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:41\n  3187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"inner\"\n  3188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:46\n  3192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:47\n  3196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"ReleaseDir\"\n  3197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:57\n  3200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil\n  3201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:58\n  3203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:59\n  3207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3208  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3209  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:60\n  3210  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: +\n  3211  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {\n  3212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:61\n  3213  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3214  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" not expected to be odd.\\\"\"\n  3215  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3216  .  .  .  .  .  .  .  .  .  .  .  .  }\n  3217  .  .  .  .  .  .  .  .  .  .  .  }\n  3218  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3219  .  .  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:116:87\n  3220  .  .  .  .  .  .  .  .  .  .  }\n  3221  .  .  .  .  .  .  .  .  .  }\n  3222  .  .  .  .  .  .  .  .  }\n  3223  .  .  .  .  .  .  .  }\n  3224  .  .  .  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:117:2\n  3225  .  .  .  .  .  .  }\n  3226  .  .  .  .  .  .  Else: nil\n  3227  .  .  .  .  .  }\n  3228  .  .  .  .  .  1: *ast.ReturnStmt {\n  3229  .  .  .  .  .  .  Return: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:2\n  3230  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {\n  3231  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3232  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3233  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3234  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:9\n  3235  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  3236  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3237  .  .  .  .  .  .  .  .  .  }\n  3238  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3239  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:16\n  3240  .  .  .  .  .  .  .  .  .  .  Name: \"New\"\n  3241  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3242  .  .  .  .  .  .  .  .  .  }\n  3243  .  .  .  .  .  .  .  .  }\n  3244  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:19\n  3245  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3246  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  3247  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:20\n  3248  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3249  .  .  .  .  .  .  .  .  .  .  Value: \"\\\"not implemented\\\"\"\n  3250  .  .  .  .  .  .  .  .  .  }\n  3251  .  .  .  .  .  .  .  .  }\n  3252  .  .  .  .  .  .  .  .  Ellipsis: -\n  3253  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:118:37\n  3254  .  .  .  .  .  .  .  }\n  3255  .  .  .  .  .  .  }\n  3256  .  .  .  .  .  }\n  3257  .  .  .  .  }\n  3258  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:119:1\n  3259  .  .  .  }\n  3260  .  .  }\n  3261  .  .  8: *(obj @ 1945)\n  3262  .  .  9: *ast.FuncDecl {\n  3263  .  .  .  Doc: nil\n  3264  .  .  .  Recv: nil\n  3265  .  .  .  Name: *ast.Ident {\n  3266  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:6\n  3267  .  .  .  .  Name: \"TestObs\"\n  3268  .  .  .  .  Obj: *ast.Object {\n  3269  .  .  .  .  .  Kind: func\n  3270  .  .  .  .  .  Name: \"TestObs\"\n  3271  .  .  .  .  .  Decl: *(obj @ 3262)\n  3272  .  .  .  .  .  Data: nil\n  3273  .  .  .  .  .  Type: nil\n  3274  .  .  .  .  }\n  3275  .  .  .  }\n  3276  .  .  .  Type: *ast.FuncType {\n  3277  .  .  .  .  Func: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:1\n  3278  .  .  .  .  TypeParams: nil\n  3279  .  .  .  .  Params: *ast.FieldList {\n  3280  .  .  .  .  .  Opening: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:13\n  3281  .  .  .  .  .  List: []*ast.Field (len = 1) {\n  3282  .  .  .  .  .  .  0: *ast.Field {\n  3283  .  .  .  .  .  .  .  Doc: nil\n  3284  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {\n  3285  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  3286  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:14\n  3287  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  3288  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  3289  .  .  .  .  .  .  .  .  .  .  Kind: var\n  3290  .  .  .  .  .  .  .  .  .  .  Name: \"t\"\n  3291  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3282)\n  3292  .  .  .  .  .  .  .  .  .  .  Data: nil\n  3293  .  .  .  .  .  .  .  .  .  .  Type: nil\n  3294  .  .  .  .  .  .  .  .  .  }\n  3295  .  .  .  .  .  .  .  .  }\n  3296  .  .  .  .  .  .  .  }\n  3297  .  .  .  .  .  .  .  Type: *ast.StarExpr {\n  3298  .  .  .  .  .  .  .  .  Star: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:16\n  3299  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {\n  3300  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3301  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:17\n  3302  .  .  .  .  .  .  .  .  .  .  Name: \"testing\"\n  3303  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3304  .  .  .  .  .  .  .  .  .  }\n  3305  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3306  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:25\n  3307  .  .  .  .  .  .  .  .  .  .  Name: \"T\"\n  3308  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3309  .  .  .  .  .  .  .  .  .  }\n  3310  .  .  .  .  .  .  .  .  }\n  3311  .  .  .  .  .  .  .  }\n  3312  .  .  .  .  .  .  .  Tag: nil\n  3313  .  .  .  .  .  .  .  Comment: nil\n  3314  .  .  .  .  .  .  }\n  3315  .  .  .  .  .  }\n  3316  .  .  .  .  .  Closing: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:26\n  3317  .  .  .  .  }\n  3318  .  .  .  .  Results: nil\n  3319  .  .  .  }\n  3320  .  .  .  Body: *ast.BlockStmt {\n  3321  .  .  .  .  Lbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:130:28\n  3322  .  .  .  .  List: []ast.Stmt (len = 4) {\n  3323  .  .  .  .  .  0: *ast.ExprStmt {\n  3324  .  .  .  .  .  .  X: *ast.CallExpr {\n  3325  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3326  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:131:2\n  3327  .  .  .  .  .  .  .  .  Name: \"updateObs\"\n  3328  .  .  .  .  .  .  .  .  Obj: nil\n  3329  .  .  .  .  .  .  .  }\n  3330  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:131:11\n  3331  .  .  .  .  .  .  .  Args: nil\n  3332  .  .  .  .  .  .  .  Ellipsis: -\n  3333  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:131:12\n  3334  .  .  .  .  .  .  }\n  3335  .  .  .  .  .  }\n  3336  .  .  .  .  .  1: *ast.AssignStmt {\n  3337  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {\n  3338  .  .  .  .  .  .  .  0: *ast.Ident {\n  3339  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:2\n  3340  .  .  .  .  .  .  .  .  Name: \"e\"\n  3341  .  .  .  .  .  .  .  .  Obj: *ast.Object {\n  3342  .  .  .  .  .  .  .  .  .  Kind: var\n  3343  .  .  .  .  .  .  .  .  .  Name: \"e\"\n  3344  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3336)\n  3345  .  .  .  .  .  .  .  .  .  Data: nil\n  3346  .  .  .  .  .  .  .  .  .  Type: nil\n  3347  .  .  .  .  .  .  .  .  }\n  3348  .  .  .  .  .  .  .  }\n  3349  .  .  .  .  .  .  }\n  3350  .  .  .  .  .  .  TokPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:4\n  3351  .  .  .  .  .  .  Tok: :=\n  3352  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {\n  3353  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3354  .  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3355  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:7\n  3356  .  .  .  .  .  .  .  .  .  Name: \"obs\"\n  3357  .  .  .  .  .  .  .  .  .  Obj: nil\n  3358  .  .  .  .  .  .  .  .  }\n  3359  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:10\n  3360  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {\n  3361  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {\n  3362  .  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:11\n  3363  .  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3364  .  .  .  .  .  .  .  .  .  .  Value: \"\\\" Error; expect an error!\\\"\"\n  3365  .  .  .  .  .  .  .  .  .  }\n  3366  .  .  .  .  .  .  .  .  }\n  3367  .  .  .  .  .  .  .  .  Ellipsis: -\n  3368  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:132:37\n  3369  .  .  .  .  .  .  .  }\n  3370  .  .  .  .  .  .  }\n  3371  .  .  .  .  .  }\n  3372  .  .  .  .  .  2: *ast.ExprStmt {\n  3373  .  .  .  .  .  .  X: *ast.CallExpr {\n  3374  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3375  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:2\n  3376  .  .  .  .  .  .  .  .  Name: \"assert\"\n  3377  .  .  .  .  .  .  .  .  Obj: nil\n  3378  .  .  .  .  .  .  .  }\n  3379  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:8\n  3380  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  3381  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {\n  3382  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3383  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:9\n  3384  .  .  .  .  .  .  .  .  .  .  Name: \"e\"\n  3385  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3341)\n  3386  .  .  .  .  .  .  .  .  .  }\n  3387  .  .  .  .  .  .  .  .  .  OpPos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:10\n  3388  .  .  .  .  .  .  .  .  .  Op: !=\n  3389  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {\n  3390  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:13\n  3391  .  .  .  .  .  .  .  .  .  .  Name: \"nil\"\n  3392  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3393  .  .  .  .  .  .  .  .  .  }\n  3394  .  .  .  .  .  .  .  .  }\n  3395  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  3396  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:18\n  3397  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3398  .  .  .  .  .  .  .  .  .  Value: \"\\\"unexpected nil error\\\"\"\n  3399  .  .  .  .  .  .  .  .  }\n  3400  .  .  .  .  .  .  .  }\n  3401  .  .  .  .  .  .  .  Ellipsis: -\n  3402  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:133:40\n  3403  .  .  .  .  .  .  }\n  3404  .  .  .  .  .  }\n  3405  .  .  .  .  .  3: *ast.ExprStmt {\n  3406  .  .  .  .  .  .  X: *ast.CallExpr {\n  3407  .  .  .  .  .  .  .  Fun: *ast.Ident {\n  3408  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:2\n  3409  .  .  .  .  .  .  .  .  Name: \"assert\"\n  3410  .  .  .  .  .  .  .  .  Obj: nil\n  3411  .  .  .  .  .  .  .  }\n  3412  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:8\n  3413  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  3414  .  .  .  .  .  .  .  .  0: *ast.CallExpr {\n  3415  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n  3416  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n  3417  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:9\n  3418  .  .  .  .  .  .  .  .  .  .  .  Name: \"errors\"\n  3419  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3420  .  .  .  .  .  .  .  .  .  .  }\n  3421  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n  3422  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:16\n  3423  .  .  .  .  .  .  .  .  .  .  .  Name: \"Is\"\n  3424  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3425  .  .  .  .  .  .  .  .  .  .  }\n  3426  .  .  .  .  .  .  .  .  .  }\n  3427  .  .  .  .  .  .  .  .  .  Lparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:18\n  3428  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {\n  3429  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {\n  3430  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:19\n  3431  .  .  .  .  .  .  .  .  .  .  .  Name: \"e\"\n  3432  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3341)\n  3433  .  .  .  .  .  .  .  .  .  .  }\n  3434  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {\n  3435  .  .  .  .  .  .  .  .  .  .  .  NamePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:22\n  3436  .  .  .  .  .  .  .  .  .  .  .  Name: \"badObs\"\n  3437  .  .  .  .  .  .  .  .  .  .  .  Obj: nil\n  3438  .  .  .  .  .  .  .  .  .  .  }\n  3439  .  .  .  .  .  .  .  .  .  }\n  3440  .  .  .  .  .  .  .  .  .  Ellipsis: -\n  3441  .  .  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:28\n  3442  .  .  .  .  .  .  .  .  }\n  3443  .  .  .  .  .  .  .  .  1: *ast.BasicLit {\n  3444  .  .  .  .  .  .  .  .  .  ValuePos: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:31\n  3445  .  .  .  .  .  .  .  .  .  Kind: STRING\n  3446  .  .  .  .  .  .  .  .  .  Value: \"\\\"not an Obs error\\\"\"\n  3447  .  .  .  .  .  .  .  .  }\n  3448  .  .  .  .  .  .  .  }\n  3449  .  .  .  .  .  .  .  Ellipsis: -\n  3450  .  .  .  .  .  .  .  Rparen: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:134:49\n  3451  .  .  .  .  .  .  }\n  3452  .  .  .  .  .  }\n  3453  .  .  .  .  }\n  3454  .  .  .  .  Rbrace: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:135:1\n  3455  .  .  .  }\n  3456  .  .  }\n  3457  .  }\n  3458  .  FileStart: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:1:1\n  3459  .  FileEnd: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:135:2\n  3460  .  Scope: *ast.Scope {\n  3461  .  .  Outer: nil\n  3462  .  .  Objects: map[string]*ast.Object (len = 8) {\n  3463  .  .  .  \"TestJacobiSymbolFailingPath\": *(obj @ 903)\n  3464  .  .  .  \"TestMain\": *(obj @ 1866)\n  3465  .  .  .  \"nativeObs\": *(obj @ 2334)\n  3466  .  .  .  \"isOddBinaryFile\": *(obj @ 2624)\n  3467  .  .  .  \"binaryFileObs\": *(obj @ 3033)\n  3468  .  .  .  \"RootDirectory\": *(obj @ 1942)\n  3469  .  .  .  \"TestObs\": *(obj @ 3268)\n  3470  .  .  .  \"TestJacobiSymbolHappyPath\": *(obj @ 90)\n  3471  .  .  }\n  3472  .  }\n  3473  .  Imports: []*ast.ImportSpec (len = 4) {\n  3474  .  .  0: *(obj @ 15)\n  3475  .  .  1: *(obj @ 26)\n  3476  .  .  2: *(obj @ 37)\n  3477  .  .  3: *(obj @ 48)\n  3478  .  }\n  3479  .  Unresolved: []*ast.Ident (len = 76) {\n  3480  .  .  0: *(obj @ 122)\n  3481  .  .  1: *(obj @ 186)\n  3482  .  .  2: *(obj @ 209)\n  3483  .  .  3: *(obj @ 232)\n  3484  .  .  4: *(obj @ 255)\n  3485  .  .  5: *(obj @ 579)\n  3486  .  .  6: *(obj @ 631)\n  3487  .  .  7: *(obj @ 679)\n  3488  .  .  8: *(obj @ 935)\n  3489  .  .  9: *(obj @ 999)\n  3490  .  .  10: *(obj @ 1022)\n  3491  .  .  11: *(obj @ 1045)\n  3492  .  .  12: *(obj @ 1068)\n  3493  .  .  13: *(obj @ 1103)\n  3494  .  .  14: *(obj @ 1131)\n  3495  .  .  15: *(obj @ 1161)\n  3496  .  .  16: *(obj @ 1206)\n  3497  .  .  17: *(obj @ 1234)\n  3498  .  .  18: *(obj @ 1266)\n  3499  .  .  19: *(obj @ 1294)\n  3500  .  .  20: *(obj @ 1324)\n  3501  .  .  21: *(obj @ 1458)\n  3502  .  .  22: *(obj @ 1510)\n  3503  .  .  23: *(obj @ 1558)\n  3504  .  .  24: *(obj @ 1635)\n  3505  .  .  25: *(obj @ 1815)\n  3506  .  .  26: *(obj @ 1848)\n  3507  .  .  27: *(obj @ 1898)\n  3508  .  .  28: *(obj @ 2291)\n  3509  .  .  29: *(obj @ 2313)\n  3510  .  .  30: *(obj @ 2432)\n  3511  .  .  31: *(obj @ 2444)\n  3512  .  .  32: *(obj @ 2476)\n  3513  .  .  33: *(obj @ 2559)\n  3514  .  .  34: *(obj @ 2590)\n  3515  .  .  35: *(obj @ 2359)\n  3516  .  .  36: *(obj @ 2653)\n  3517  .  .  37: *(obj @ 2670)\n  3518  .  .  38: *(obj @ 2681)\n  3519  .  .  39: *(obj @ 2726)\n  3520  .  .  40: *(obj @ 2755)\n  3521  .  .  41: *(obj @ 2786)\n  3522  .  .  42: *(obj @ 2798)\n  3523  .  .  43: *(obj @ 2850)\n  3524  .  .  44: *(obj @ 2897)\n  3525  .  .  45: *(obj @ 2935)\n  3526  .  .  46: *(obj @ 2947)\n  3527  .  .  47: *(obj @ 2987)\n  3528  .  .  48: *(obj @ 2992)\n  3529  .  .  49: *(obj @ 3011)\n  3530  .  .  50: *(obj @ 3016)\n  3531  .  .  51: *(obj @ 3062)\n  3532  .  .  52: *(obj @ 3079)\n  3533  .  .  53: *(obj @ 3122)\n  3534  .  .  54: *(obj @ 3141)\n  3535  .  .  55: *(obj @ 3156)\n  3536  .  .  56: *(obj @ 3194)\n  3537  .  .  57: *(obj @ 3233)\n  3538  .  .  58: *(obj @ 1967)\n  3539  .  .  59: *(obj @ 2012)\n  3540  .  .  60: *(obj @ 2041)\n  3541  .  .  61: *(obj @ 2084)\n  3542  .  .  62: *(obj @ 2103)\n  3543  .  .  63: *(obj @ 2111)\n  3544  .  .  64: *(obj @ 2137)\n  3545  .  .  65: *(obj @ 2160)\n  3546  .  .  66: *(obj @ 2189)\n  3547  .  .  67: *(obj @ 2197)\n  3548  .  .  68: *(obj @ 3300)\n  3549  .  .  69: *(obj @ 3325)\n  3550  .  .  70: *(obj @ 3354)\n  3551  .  .  71: *(obj @ 3374)\n  3552  .  .  72: *(obj @ 3389)\n  3553  .  .  73: *(obj @ 3407)\n  3554  .  .  74: *(obj @ 3416)\n  3555  .  .  75: *(obj @ 3434)\n  3556  .  }\n  3557  .  Comments: []*ast.CommentGroup (len = 1) {\n  3558  .  .  0: *ast.CommentGroup {\n  3559  .  .  .  List: []*ast.Comment (len = 2) {\n  3560  .  .  .  .  0: *ast.Comment {\n  3561  .  .  .  .  .  Slash: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:92:2\n  3562  .  .  .  .  .  Text: \"// implement equivalent of xfail.sh here\"\n  3563  .  .  .  .  }\n  3564  .  .  .  .  1: *ast.Comment {\n  3565  .  .  .  .  .  Slash: /tmp/eval-dev-quality3504448851/light/jacobiSymbol_test.go:93:2\n  3566  .  .  .  .  .  Text: \"// this should add or update a new file\"\n  3567  .  .  .  .  }\n  3568  .  .  .  }\n  3569  .  .  }\n  3570  .  }\n  3571  .  GoVersion: \"\"\n  3572  }\n"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0xc000c96a90}, {0x1050cc0?, 0xc000ac0a20})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/golang/ast.Source(0xc0001baf00?, 0xa91d23?)
	gitlab.nethead.at/symflower/symflower/language/golang/ast/parse.go:612 +0x138
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc00070e0c0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:48 +0x46c
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc000434101?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc000618538, {0xc000618480?, 0x7fd34554b998?, 0xc000618538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc000618480}, {0xc000192120?, 0x0?, 0xc0004d1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc000618480?}, {0xc000192120?, 0x27d8cc0?, 0xc000618480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000c8058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:18
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:28
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:41
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695 exit status 1
# light [light.test]
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value

DONE 0 tests, 2 errors in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value

DONE 0 tests, 2 errors in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
# light [light.test]
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value

DONE 0 tests, 2 errors in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:38:3: v declared and not used
./klarnerRadoSequence_test.go:38:12: assignment mismatch: 2 variables but 1 value

DONE 0 tests, 2 errors in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

symflower fix exit status 1
=== RUN   TestMaximumValue
    knapsack_test.go:59: maximumValue(10, [{3 4} {4 5} {5 6}]) = 11, expected 10
    knapsack_test.go:59: maximumValue(5, [{2 2} {3 4}]) = 6, expected 4
    knapsack_test.go:59: maximumValue(10, [{1 2} {2 3}]) = 5, expected 3
    knapsack_test.go:59: maximumValue(10, [{5 6} {5 7}]) = 13, expected 11
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:59: maximumValue(10, [{3 4} {4 5} {5 6}]) = 11, expected 10
    knapsack_test.go:59: maximumValue(5, [{2 2} {3 4}]) = 6, expected 4
    knapsack_test.go:59: maximumValue(10, [{1 2} {2 3}]) = 5, expected 3
    knapsack_test.go:59: maximumValue(10, [{5 6} {5 7}]) = 13, expected 11

DONE 1 tests, 1 failure in 0.308s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestMaximumValue
    knapsack_test.go:59: maximumValue(10, [{3 4} {4 5} {5 6}]) = 11, expected 10
    knapsack_test.go:59: maximumValue(5, [{2 2} {3 4}]) = 6, expected 4
    knapsack_test.go:59: maximumValue(10, [{1 2} {2 3}]) = 5, expected 3
    knapsack_test.go:59: maximumValue(10, [{5 6} {5 7}]) = 13, expected 11
--- FAIL: TestMaximumValue (0.00s)
FAIL
coverage: 7.1% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMaximumValue (0.00s)
    knapsack_test.go:59: maximumValue(10, [{3 4} {4 5} {5 6}]) = 11, expected 10
    knapsack_test.go:59: maximumValue(5, [{2 2} {3 4}]) = 6, expected 4
    knapsack_test.go:59: maximumValue(10, [{1 2} {2 3}]) = 5, expected 3
    knapsack_test.go:59: maximumValue(10, [{5 6} {5 7}]) = 13, expected 11

DONE 1 tests, 1 failure in 0.308s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestLargestProperDivisor
    largestProperDivisor_test.go:25: 1. largestProperDivisor(1) = 1, want 0
--- FAIL: TestLargestProperDivisor (0.00s)
=== RUN   TestLargestProperDivisorEdgeCase
--- PASS: TestLargestProperDivisorEdgeCase (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestLargestProperDivisor (0.00s)
    largestProperDivisor_test.go:25: 1. largestProperDivisor(1) = 1, want 0

DONE 2 tests, 1 failure in 0.263s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestLargestProperDivisor
    largestProperDivisor_test.go:25: 1. largestProperDivisor(1) = 1, want 0
--- FAIL: TestLargestProperDivisor (0.00s)
=== RUN   TestLargestProperDivisorEdgeCase
--- PASS: TestLargestProperDivisorEdgeCase (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestLargestProperDivisor (0.00s)
    largestProperDivisor_test.go:25: 1. largestProperDivisor(1) = 1, want 0

DONE 2 tests, 1 failure in 0.263s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./magicSquareOdd_test.go:4:2: "errors" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:4:2: "errors" imported and not used

DONE 0 tests, 1 error in 0.113s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./magicSquareOdd_test.go:4:2: "errors" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:4:2: "errors" imported and not used

DONE 0 tests, 1 error in 0.113s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
=== RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/base_3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
=== RUN   TestMagicSquareOdd/base_5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
=== RUN   TestMagicSquareOdd/base_7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
=== RUN   TestMagicSquareOdd/base_9
    magicSquareOdd_test.go:54: magicSquareOdd() error = <nil>, wantErr true
=== RUN   TestMagicSquareOdd/base_0
=== RUN   TestMagicSquareOdd/base_<_3
=== RUN   TestMagicSquareOdd/base_even
--- FAIL: TestMagicSquareOdd (0.00s)
    --- FAIL: TestMagicSquareOdd/base_3 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_5 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_7 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_9 (0.00s)
    --- PASS: TestMagicSquareOdd/base_0 (0.00s)
    --- PASS: TestMagicSquareOdd/base_<_3 (0.00s)
    --- PASS: TestMagicSquareOdd/base_even (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMagicSquareOdd/base_3 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    --- FAIL: TestMagicSquareOdd/base_3 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_5 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    --- FAIL: TestMagicSquareOdd/base_5 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_7 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    --- FAIL: TestMagicSquareOdd/base_7 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_9 (0.00s)
    magicSquareOdd_test.go:54: magicSquareOdd() error = <nil>, wantErr true
    --- FAIL: TestMagicSquareOdd/base_9 (0.00s)

=== FAIL: . TestMagicSquareOdd (0.00s)

DONE 8 tests, 5 failures in 0.320s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/base_3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
=== RUN   TestMagicSquareOdd/base_5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
=== RUN   TestMagicSquareOdd/base_7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
=== RUN   TestMagicSquareOdd/base_9
    magicSquareOdd_test.go:54: magicSquareOdd() error = <nil>, wantErr true
=== RUN   TestMagicSquareOdd/base_0
=== RUN   TestMagicSquareOdd/base_<_3
=== RUN   TestMagicSquareOdd/base_even
--- FAIL: TestMagicSquareOdd (0.00s)
    --- FAIL: TestMagicSquareOdd/base_3 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_5 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_7 (0.00s)
    --- FAIL: TestMagicSquareOdd/base_9 (0.00s)
    --- PASS: TestMagicSquareOdd/base_0 (0.00s)
    --- PASS: TestMagicSquareOdd/base_<_3 (0.00s)
    --- PASS: TestMagicSquareOdd/base_even (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMagicSquareOdd/base_3 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    magicSquareOdd_test.go:63: result not correct for base 3
    --- FAIL: TestMagicSquareOdd/base_3 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_5 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    magicSquareOdd_test.go:63: result not correct for base 5
    --- FAIL: TestMagicSquareOdd/base_5 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_7 (0.00s)
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    magicSquareOdd_test.go:63: result not correct for base 7
    --- FAIL: TestMagicSquareOdd/base_7 (0.00s)

=== FAIL: . TestMagicSquareOdd/base_9 (0.00s)
    magicSquareOdd_test.go:54: magicSquareOdd() error = <nil>, wantErr true
    --- FAIL: TestMagicSquareOdd/base_9 (0.00s)

=== FAIL: . TestMagicSquareOdd (0.00s)

DONE 8 tests, 5 failures in 0.320s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./matchBytes_test.go:53:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:53:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)

DONE 0 tests, 4 errors in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./matchBytes_test.go:53:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:53:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)

DONE 0 tests, 4 errors in 0.143s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
# light [light.test]
./matchBytes_test.go:53:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:53:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)

DONE 0 tests, 4 errors in 0.127s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./matchBytes_test.go:53:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:53:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:54:17: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:59:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)
./matchBytes_test.go:60:18: cannot use '€' (untyped rune constant 8364) as byte value in array or slice literal (overflows)

DONE 0 tests, 4 errors in 0.127s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

symflower fix exit status 1
# light [light.test]
./pascalsTriangle_test.go:4:2: "errors" imported and not used
./pascalsTriangle_test.go:13:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:14:50: err.Message undefined (type error has no field or method Message)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:4:2: "errors" imported and not used
./pascalsTriangle_test.go:13:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:14:50: err.Message undefined (type error has no field or method Message)

DONE 0 tests, 3 errors in 0.133s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./pascalsTriangle_test.go:4:2: "errors" imported and not used
./pascalsTriangle_test.go:13:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:14:50: err.Message undefined (type error has no field or method Message)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:4:2: "errors" imported and not used
./pascalsTriangle_test.go:13:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:14:50: err.Message undefined (type error has no field or method Message)

DONE 0 tests, 3 errors in 0.133s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light [light.test]
./pascalsTriangle_test.go:12:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:13:50: err.Message undefined (type error has no field or method Message)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:12:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:13:50: err.Message undefined (type error has no field or method Message)

DONE 0 tests, 2 errors in 0.110s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./pascalsTriangle_test.go:12:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:13:50: err.Message undefined (type error has no field or method Message)
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:12:9: err.Message undefined (type error has no field or method Message)
./pascalsTriangle_test.go:13:50: err.Message undefined (type error has no field or method Message)

DONE 0 tests, 2 errors in 0.110s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

symflower fix exit status 1
simpleIfElse_test.go:1:1: expected 'package', found 'go'

=== Errors
simpleIfElse_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.018s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
simpleIfElse_test.go:1:1: expected 'package', found 'go'

=== Errors
simpleIfElse_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.018s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

simpleIfElse.go exit status 1
A fatal error happened. Please take a look at the logs, and report the problem on https://github.com/symflower/symflower/issues or send a mail to hello@symflower.com. Thanks so much for your help!
Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006c8ba0, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc00054ea80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006c8ba0, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0007879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006c8ba0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0006cdd01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc00012e538, {0xc00012e480?, 0x7f0e1c650f98?, 0xc00012e538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc00012e480}, {0xc0000401e0?, 0x0?, 0xc000493ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc00012e480?}, {0xc0000401e0?, 0x27d8cc0?, 0xc00012e480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: Internal error: recovered panic:
"invalid memory address or nil pointer dereference"
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1fa38a0?, 0x268e8c0}, {0x109b740?, 0x268cb10})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/model/errors.NewRecoverPanic(...)
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:892
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:37 +0x4d
panic({0x109b740?, 0x268cb10?})
	runtime/panic.go:914 +0x21f
go/token.(*File).Name(...)
	go/token/position.go:109
gitlab.nethead.at/symflower/symflower/language/golang/repair.Apply({0xc0006c8ba0, 0x25}, {0x1fb7b58, 0x27d7860}, 0xc00054ea80)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/rule.go:58 +0x173
gitlab.nethead.at/symflower/symflower/language/golang/repair.repairPackage({0xc0006c8ba0, 0x25}, {0x269d4e0?, 0x4, 0x0?}, 0xc0007879f8?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:89 +0xb4
gitlab.nethead.at/symflower/symflower/language/golang/repair.applyRules({0x269d4e0, 0x4, 0x4}, {0xc0006c8ba0?, 0x4125e5?})
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:36 +0x251
gitlab.nethead.at/symflower/symflower/language/golang/repair.Packages(...)
	gitlab.nethead.at/symflower/symflower/language/golang/repair/repair.go:18
gitlab.nethead.at/symflower/symflower/language/golang.Adapter.Repair({}, 0xc0006cdd01?)
	gitlab.nethead.at/symflower/symflower/language/golang/repair.go:10 +0x3a
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandRepair).Execute(0xc00012e538, {0xc00012e480?, 0x7f0e1c650f98?, 0xc00012e538?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/repair.go:68 +0x3a2
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1fa3860?, 0xc00012e480}, {0xc0000401e0?, 0x0?, 0xc000493ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1fa3860?, 0xc00012e480?}, {0xc0000401e0?, 0x27d8cc0?, 0xc00012e480?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x26c2eb8?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:185 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:18
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.symflowerFix
	/app/evaluate/task/symflower-fix.go:28
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:39
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:41
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695 exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/empty
    sort_test.go:23: isSorted() = false, want true
=== RUN   TestIsSorted/single_element
=== RUN   TestIsSorted/sorted
=== RUN   TestIsSorted/unsorted
=== RUN   TestIsSorted/repeated_elements
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/empty (0.00s)
    --- PASS: TestIsSorted/single_element (0.00s)
    --- PASS: TestIsSorted/sorted (0.00s)
    --- PASS: TestIsSorted/unsorted (0.00s)
    --- PASS: TestIsSorted/repeated_elements (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/empty (0.00s)
    sort_test.go:23: isSorted() = false, want true
    --- FAIL: TestIsSorted/empty (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.275s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestIsSorted
=== RUN   TestIsSorted/empty
    sort_test.go:23: isSorted() = false, want true
=== RUN   TestIsSorted/single_element
=== RUN   TestIsSorted/sorted
=== RUN   TestIsSorted/unsorted
=== RUN   TestIsSorted/repeated_elements
--- FAIL: TestIsSorted (0.00s)
    --- FAIL: TestIsSorted/empty (0.00s)
    --- PASS: TestIsSorted/single_element (0.00s)
    --- PASS: TestIsSorted/sorted (0.00s)
    --- PASS: TestIsSorted/unsorted (0.00s)
    --- PASS: TestIsSorted/repeated_elements (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/empty (0.00s)
    sort_test.go:23: isSorted() = false, want true
    --- FAIL: TestIsSorted/empty (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 6 tests, 2 failures in 0.275s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light [light.test]
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value

DONE 0 tests, 3 errors in 0.103s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value

DONE 0 tests, 3 errors in 0.103s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayAccess.go exit status 1
# light [light.test]
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value

DONE 0 tests, 3 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:126
github.com/symflower/eval-dev-quality/evaluate/task.ExecuteWithSymflowerFix
	/app/evaluate/task/symflower-fix.go:44
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:99
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
# light [light.test]
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:14:10: undefined: NULL
./typeArrayAccess_test.go:18:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value
./typeArrayAccess_test.go:34:13: assignment mismatch: 2 variables but typeArrayAccess returns 1 value

DONE 0 tests, 3 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

symflower fix exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
    typeArrayConsecutiveAccess_test.go:49: 3: typeArrayConsecutiveAccess() = 2, expected 14
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
=== RUN   TestTypeArrayConsecutiveAccessEdgeCases
--- FAIL: TestTypeArrayConsecutiveAccessEdgeCases (0.00s)
panic: runtime error: index out of range [1] with length 1 [recovered]
	panic: runtime error: index out of range [1] with length 1

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c160, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c160?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess.go:8
light.TestTypeArrayConsecutiveAccessEdgeCases(0xc000007ba0)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess_test.go:82 +0x487
testing.tRunner(0xc000007ba0, 0x588020)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
    typeArrayConsecutiveAccess_test.go:49: 3: typeArrayConsecutiveAccess() = 2, expected 14

=== FAIL: . TestTypeArrayConsecutiveAccessEdgeCases (0.00s)
panic: runtime error: index out of range [1] with length 1 [recovered]
	panic: runtime error: index out of range [1] with length 1

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c160, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c160?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess.go:8
light.TestTypeArrayConsecutiveAccessEdgeCases(0xc000007ba0)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess_test.go:82 +0x487
testing.tRunner(0xc000007ba0, 0x588020)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 2 tests, 2 failures in 0.259s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestTypeArrayConsecutiveAccess
    typeArrayConsecutiveAccess_test.go:49: 3: typeArrayConsecutiveAccess() = 2, expected 14
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
=== RUN   TestTypeArrayConsecutiveAccessEdgeCases
--- FAIL: TestTypeArrayConsecutiveAccessEdgeCases (0.00s)
panic: runtime error: index out of range [1] with length 1 [recovered]
	panic: runtime error: index out of range [1] with length 1

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c160, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c160?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess.go:8
light.TestTypeArrayConsecutiveAccessEdgeCases(0xc000007ba0)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess_test.go:82 +0x487
testing.tRunner(0xc000007ba0, 0x588020)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
    typeArrayConsecutiveAccess_test.go:49: 3: typeArrayConsecutiveAccess() = 2, expected 14

=== FAIL: . TestTypeArrayConsecutiveAccessEdgeCases (0.00s)
panic: runtime error: index out of range [1] with length 1 [recovered]
	panic: runtime error: index out of range [1] with length 1

goroutine 7 [running]:
testing.tRunner.func1.2({0x56c160, 0xc000018030})
	/app/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/app/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c160?, 0xc000018030?})
	/app/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess.go:8
light.TestTypeArrayConsecutiveAccessEdgeCases(0xc000007ba0)
	/tmp/eval-dev-quality3504448851/light/typeArrayConsecutiveAccess_test.go:82 +0x487
testing.tRunner(0xc000007ba0, 0x588020)
	/app/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/app/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 2 tests, 2 failures in 0.259s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Empty
=== RUN   TestTypeArrayMultidimensionalArrayLength/One_Row_One_Column
=== RUN   TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 1, want 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_Rows_Two_Columns
=== RUN   TestTypeArrayMultidimensionalArrayLength/More_than_Two_Rows
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Empty (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/One_Row_One_Column (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Two_Rows_Two_Columns (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/More_than_Two_Rows (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.002s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 7 tests, 3 failures in 0.279s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/Empty
=== RUN   TestTypeArrayMultidimensionalArrayLength/One_Row_One_Column
=== RUN   TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 1, want 0
=== RUN   TestTypeArrayMultidimensionalArrayLength/Two_Rows_Two_Columns
=== RUN   TestTypeArrayMultidimensionalArrayLength/More_than_Two_Rows
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Empty (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/One_Row_One_Column (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/Two_Rows_Two_Columns (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/More_than_Two_Rows (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.002s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/One_Row_Two_Columns (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:48: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/Two_Rows_One_Column (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 7 tests, 3 failures in 0.279s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidDate
    validateDate_test.go:30: validDate(29, 2, 2000) = false, want true
    validateDate_test.go:30: validDate(29, 2, 1900) = true, want false
    validateDate_test.go:30: validDate(29, 2, 1600) = false, want true
    validateDate_test.go:30: validDate(31, 1, 1583) = true, want false
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.6% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:30: validDate(29, 2, 2000) = false, want true
    validateDate_test.go:30: validDate(29, 2, 1900) = true, want false
    validateDate_test.go:30: validDate(29, 2, 1600) = false, want true
    validateDate_test.go:30: validDate(31, 1, 1583) = true, want false

DONE 1 tests, 1 failure in 0.253s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/app/util/exec.go:60
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:106
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
github.com/symflower/eval-dev-quality/language/golang.(*Language).ExecuteTests
	/app/language/golang/language.go:124
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/app/evaluate/task/task-write-test.go:84
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/app/evaluate/evaluate.go:279
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/app/evaluate/evaluate.go:327
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/app/evaluate/evaluate.go:260
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).evaluateLocal
	/app/cmd/eval-dev-quality/cmd/evaluate.go:500
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/app/cmd/eval-dev-quality/cmd/evaluate.go:481
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/app/cmd/eval-dev-quality/cmd/command.go:40
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/app/cmd/eval-dev-quality/cmd/command.go:43
main.main
	/app/cmd/eval-dev-quality/main.go:11
runtime.main
	/usr/local/go/src/runtime/proc.go:271
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1695
=== RUN   TestValidDate
    validateDate_test.go:30: validDate(29, 2, 2000) = false, want true
    validateDate_test.go:30: validDate(29, 2, 1900) = true, want false
    validateDate_test.go:30: validDate(29, 2, 1600) = false, want true
    validateDate_test.go:30: validDate(31, 1, 1583) = true, want false
--- FAIL: TestValidDate (0.00s)
FAIL
coverage: 6.6% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidDate (0.00s)
    validateDate_test.go:30: validDate(29, 2, 2000) = false, want true
    validateDate_test.go:30: validDate(29, 2, 1900) = true, want false
    validateDate_test.go:30: validDate(29, 2, 1600) = false, want true
    validateDate_test.go:30: validDate(31, 1, 1583) = true, want false

DONE 1 tests, 1 failure in 0.253s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
