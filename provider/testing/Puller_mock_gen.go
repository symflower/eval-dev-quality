// Code generated by mockery v2.40.3. DO NOT EDIT.

package providertesting

import (
	mock "github.com/stretchr/testify/mock"
	log "github.com/symflower/eval-dev-quality/log"
)

// MockPuller is an autogenerated mock type for the Puller type
type MockPuller struct {
	mock.Mock
}

// Pull provides a mock function with given fields: logger, modelIdentifier
func (_m *MockPuller) Pull(logger *log.Logger, modelIdentifier string) error {
	ret := _m.Called(logger, modelIdentifier)

	if len(ret) == 0 {
		panic("no return value specified for Pull")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*log.Logger, string) error); ok {
		r0 = rf(logger, modelIdentifier)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockPuller creates a new instance of MockPuller. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPuller(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPuller {
	mock := &MockPuller{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
