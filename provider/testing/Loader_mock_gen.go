// Code generated by mockery v2.53.2. DO NOT EDIT.

package providertesting

import mock "github.com/stretchr/testify/mock"

// MockLoader is an autogenerated mock type for the Loader type
type MockLoader struct {
	mock.Mock
}

// Load provides a mock function with given fields: modelIdentifier
func (_m *MockLoader) Load(modelIdentifier string) error {
	ret := _m.Called(modelIdentifier)

	if len(ret) == 0 {
		panic("no return value specified for Load")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(modelIdentifier)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Unload provides a mock function with given fields: modelIdentifier
func (_m *MockLoader) Unload(modelIdentifier string) error {
	ret := _m.Called(modelIdentifier)

	if len(ret) == 0 {
		panic("no return value specified for Unload")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(modelIdentifier)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockLoader creates a new instance of MockLoader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLoader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLoader {
	mock := &MockLoader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
